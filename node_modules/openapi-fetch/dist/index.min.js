var q={"Content-Type":"application/json"};function H(a={}){let{fetch:s=globalThis.fetch,querySerializer:n,bodySerializer:o,...h}=a,i=h.baseUrl??"";i.endsWith("/")&&(i=i.slice(0,-1));async function p(e,t){let{fetch:F=s,headers:T,body:l,params:O={},parseAs:P="json",querySerializer:x=n??S,bodySerializer:R=o??g,...m}=t||{},b=M(e,{baseUrl:i,params:O,querySerializer:x}),f=z(q,a?.headers,T,O.header),d={redirect:"follow",...h,...m,headers:f};l&&(d.body=R(l)),d.body instanceof FormData&&f.delete("Content-Type");let r=await F(b,d);if(r.status===204||r.headers.get("Content-Length")==="0")return r.ok?{data:{},response:r}:{error:{},response:r};if(r.ok){let y;if(P!=="stream"){let u=r.clone();y=typeof u[P]=="function"?await u[P]():await u.text()}else y=r.clone().body;return{data:y,response:r}}let c={};try{c=await r.clone().json()}catch{c=await r.clone().text()}return{error:c,response:r}}return{async GET(e,...t){return p(e,{...t[0],method:"GET"})},async PUT(e,...t){return p(e,{...t[0],method:"PUT"})},async POST(e,...t){return p(e,{...t[0],method:"POST"})},async DELETE(e,...t){return p(e,{...t[0],method:"DELETE"})},async OPTIONS(e,...t){return p(e,{...t[0],method:"OPTIONS"})},async HEAD(e,...t){return p(e,{...t[0],method:"HEAD"})},async PATCH(e,...t){return p(e,{...t[0],method:"PATCH"})},async TRACE(e,...t){return p(e,{...t[0],method:"TRACE"})}}}function S(a){let s=new URLSearchParams;if(a&&typeof a=="object")for(let[n,o]of Object.entries(a))o!=null&&s.set(n,o);return s.toString()}function g(a){return JSON.stringify(a)}function M(a,s){let n=`${s.baseUrl}${a}`;if(s.params.path)for(let[h,i]of Object.entries(s.params.path))n=n.replace(`{${h}}`,encodeURIComponent(String(i)));let o=s.querySerializer(s.params.query??{});return o&&(n+=`?${o}`),n}function z(...a){let s=new Headers;for(let n of a){if(!n||typeof n!="object")continue;let o=n instanceof Headers?n.entries():Object.entries(n);for(let[h,i]of o)i===null?s.delete(h):i!==void 0&&s.set(h,i)}return s}export{M as createFinalURL,H as default,g as defaultBodySerializer,S as defaultQuerySerializer,z as mergeHeaders};
