openapi: 3.1.0
info:
  title: GoHIghLevel API V1.1.20
  description: Welcome to gohighlevel Api docs. Below are list available apis.
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: Calendar
    description: >-
      Using our robust API you can customize and manage the appointment
      scheduling workflow that works for your products and services while we do
      all the leg work behind the scenes.
  - name: Calendar > Calendar/Team
    description: Fetch calendar and team
  - name: Calendar > Calendar/Service
  - name: Calendar > Appointment
    description: Booking Appointment
  - name: Campaign
  - name: Contact
    description: Contact create or update.
  - name: Contact > Contact Appointment
  - name: Contact > Contact Tag
  - name: Contact > Contact Campaign
  - name: Contact > Contact Workflow
  - name: Custom Field
  - name: Custom Value
  - name: Form
  - name: Location
  - name: Note
  - name: Opportunity
  - name: Pipeline
  - name: Task
  - name: Tag
  - name: Timezone
  - name: Trigger Links
  - name: User
  - name: Saas
  - name: Snapshot
  - name: Survey
  - name: Workflow
paths:
  /v1/calendars/teams:
    get:
      tags:
        - Calendar > Calendar/Team
      summary: /v1/calendars/teams
      description: >-
        <h4>Get all teams. <h4><strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                teams:
                  - id: OW59k4IchTgKjIDy3VMO
                    name: Test Team
                    members:
                      - id: mnUXmpG2MhhHKmjegzBZ
                        name: Elon Musk
                        email: elon@musk.com
                      - id: mnUXmpG2MhhHKmjegzBZ
                        name: Elon Musk
                        email: elon@musk.com
                    calendarConfig:
                      calendarName: Test Calendar
                      description: Desc.
                      slug: slug
                      link: /widget/appointment/slug
                      shouldAssignContactToTeamMember: false
                      shouldSkipAssigningContactForExisting: false
                  - id: OW59k4IchTgKjIDy3VMO
                    name: Test Team
                    members:
                      - id: mnUXmpG2MhhHKmjegzBZ
                        name: Elon Musk
                        email: elon@musk.com
                      - id: mnUXmpG2MhhHKmjegzBZ
                        name: Elon Musk
                        email: elon@musk.com
                    calendarConfig:
                      calendarName: Test Calendar
                      description: Desc.
                      slug: slug
                      link: /widget/appointment/slug
                      shouldAssignContactToTeamMember: false
                      shouldSkipAssigningContactForExisting: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/calendars/check-slug-availability/{slug}:
    get:
      tags:
        - Calendar > Calendar/Team
      summary: /v1/calendars/check-slug-availability/:slug
      description: >-
        <h4>Check Calendar (Provider) slug
        availability.</h4><strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) Slug
          example: xyz
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                slug: sales-services
                isSlugAvailable: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                email or phone:
                  message: The email or phone field is mandatory.
                  rule: required
  /v1/calendars/teams/:
    post:
      tags:
        - Calendar > Calendar/Team
      summary: /v1/calendars/teams/
      description: >-
        <h4>Create a team.</h4> <p>Required JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>name</td><td>string</td><td>Test
        Team</td></tr><tr><td>userIds</td><td>array</td><td><code>["J37gEVtdFMRYVQWPdXIc"]</code></td></tr><tr><td>calendarConfig</td><td>object</td><td><code>{"calendarName":
        "test", "description": "dfsadfsd", "slug": "tesfdsafdsa", "link":
        "/widget/appointment/tesfdsafdsa", "shouldAssignContactToTeamMember":
        false, "shouldSkipAssigningContactForExisting":
        false}</code></td></tr></tbody></table><p>Required JSON fields in the
        <code>calendarConfig</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>calendarName</td><td>string</td><td>First
        Calendar</td></tr><tr><td>description</td><td>string</td><td>Some
        description</td></tr><tr><td>slug</td><td>string</td><td>first-calendar</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>calendarConfig</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>shouldAssignContactToTeamMember</td><td>boolean</td><td><code>false</code></td></tr><tr><td>shouldSkipAssigningContactForExisting</td><td>boolean</td><td><code>false</code></td></tr></tbody></table><br
        /><strong>Authorization:</strong> <p>Provide your location api key
        (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Sales Team
                userIds:
                  - nisi incididunt
                  - laboris veniam Ut
                calendarConfig:
                  calendarName: Sales Team Calendar
                  description: Sales Team Calendar Services
                  slug: sales-team
                  shouldAssignContactToTeamMember: false
                  shouldSkipAssigningContactForExisting: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: OW59k4IchTgKjIDy3VMO
                name: Test Team
                members:
                  - id: mnUXmpG2MhhHKmjegzBZ
                    name: Elon Musk
                    email: elon@musk.com
                  - id: mnUXmpG2MhhHKmjegzBZ
                    name: Elon Musk
                    email: elon@musk.com
                calendarConfig:
                  calendarName: Test Calendar
                  description: Desc.
                  slug: slug
                  link: /widget/appointment/slug
                  shouldAssignContactToTeamMember: false
                  shouldSkipAssigningContactForExisting: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name:
                  message: The name field is mandatory.
                  rule: required
                userIds:
                  message: The user ids field is mandatory.
                  rule: required
                calendarConfig.calendarName:
                  message: The calendarConfig.calendarName field is mandatory.
                  rule: required
                calendarConfig.description:
                  message: The calendarConfig.description field is mandatory.
                  rule: required
                calendarConfig.slug:
                  message: The calendarConfig.slug field is mandatory.
                  rule: required
  /v1/calendars/teams/{teamId}:
    put:
      tags:
        - Calendar > Calendar/Team
      summary: /v1/calendars/teams/:teamId
      description: >-
        <h4>Updating existing team.</h4> <p>Required JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>name</td><td>string</td><td>Test
        Team</td></tr><tr><td>userIds</td><td>array</td><td><code>["J37gEVtdFMRYVQWPdXIc"]</code></td></tr><tr><td>calendarConfig</td><td>object</td><td><code>{"calendarName":
        "test", "description": "dfsadfsd", "slug": "tesfdsafdsa", "link":
        "/widget/appointment/tesfdsafdsa", "shouldAssignContactToTeamMember":
        false, "shouldSkipAssigningContactForExisting":
        false}</code></td></tr></tbody></table><p>Required JSON fields in the
        <code>calendarConfig</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>calendarName</td><td>string</td><td>First
        Calendar</td></tr><tr><td>description</td><td>string</td><td>Some
        description</td></tr><tr><td>slug</td><td>string</td><td>first-calendar</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>calendarConfig</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>shouldAssignContactToTeamMember</td><td>boolean</td><td><code>false</code></td></tr><tr><td>shouldSkipAssigningContactForExisting</td><td>boolean</td><td><code>false</code></td></tr></tbody></table><br
        /><strong>Authorization:</strong> <p>Provide your location api key
        (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Sales Team
                userIds:
                  - ea est esse ad velit
                  - ex ut et eiusmod
                calendarConfig:
                  calendarName: Sales Team Calendar
                  description: Sales Team Calendar Services
                  slug: sales-team
                  shouldAssignContactToTeamMember: false
                  shouldSkipAssigningContactForExisting: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: teamId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Team Id
          example: 0nU7uKSrtT2RVM1KknuF
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: OW59k4IchTgKjIDy3VMO
                name: Test Team
                members:
                  - id: mnUXmpG2MhhHKmjegzBZ
                    name: Elon Musk
                    email: elon@musk.com
                  - id: mnUXmpG2MhhHKmjegzBZ
                    name: Elon Musk
                    email: elon@musk.com
                calendarConfig:
                  calendarName: Test Calendar
                  description: Desc.
                  slug: slug
                  link: /widget/appointment/slug
                  shouldAssignContactToTeamMember: false
                  shouldSkipAssigningContactForExisting: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name:
                  message: The name field is mandatory.
                  rule: required
                userIds:
                  message: The user ids field is mandatory.
                  rule: required
                calendarConfig.calendarName:
                  message: The calendarConfig.calendarName field is mandatory.
                  rule: required
                calendarConfig.description:
                  message: The calendarConfig.description field is mandatory.
                  rule: required
                calendarConfig.slug:
                  message: The calendarConfig.slug field is mandatory.
                  rule: required
    delete:
      tags:
        - Calendar > Calendar/Team
      summary: /v1/calendars/teams/:teamId
      description: >-
        <h4>Delete Team. </h4><strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Team Id
          example: 0nU7uKSrtT2RVM1KknuF
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/calendars/services:
    get:
      tags:
        - Calendar > Calendar/Service
      summary: /v1/calendars/services
      description: >-
        <h4>Get all calendar services.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: query
          schema:
            type: string
          description: Filter service by team id.
          example: ABXdTR0kegkPcTvtdr1L
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                services:
                  - id: OW59k4IchTgKjIDy3VMO
                    name: Test Service
                    description: Test Service Desc.
                    appointmentTitle: '{{contact.name}}'
                    meetingLocation: location
                    eventColor: '#FF0000'
                    teamId: '#FF0000'
                    linkedCalendars:
                      google:
                        id: eiusmod commodo non
                        name: pari
                      clio:
                        id: in labore Lorem ex
                        name: est nostrud
                      drchrono:
                        id: mollit sint
                        name: fugiat dolore non
                    syncOption: oneway
                    teamMembers:
                      - userId: ''
                        priority: 0
                        selected: false
                        meetingLocation: https://zoom.us
                      - userId: ''
                        priority: 0
                        selected: false
                        meetingLocation: https://zoom.us
                    availability:
                      eventTiming:
                        slotDuration: 30
                        slotInterval: 30
                        slotBuffer: 0
                      appointmentInfo:
                        perSlot: 1
                        perDay: 8
                      schedule:
                        allowBookingAfter: 1
                        allowBookingAfterUnit: Hours
                        allowBookingFor: 8
                        allowBookingForUnit: Hours
                      officeHours:
                        monday:
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                        tuesday:
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                        wednesday:
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                        thursday:
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                        friday:
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                    confirmation:
                      form:
                        customFormId: jjusM6EOngDExnbo2DbU
                        stickyContact: false
                      notificationAndOther:
                        alertEmail: quis aute
                        hasAutoConfirm: false
                        hasGoogleSendInvitationEmail: false
                        hasAllowReschedule: false
                        hasAllowCancellation: false
                        hasSendEmailToAssignedMember: false
                        notes: ''
                        facebookPixelId: ''
                        customCode: ''
                      formSubmission:
                        type: ThankYouMessage
                        content: ''
                  - id: OW59k4IchTgKjIDy3VMO
                    name: Test Service
                    description: Test Service Desc.
                    appointmentTitle: '{{contact.name}}'
                    meetingLocation: location
                    eventColor: '#FF0000'
                    teamId: '#FF0000'
                    linkedCalendars:
                      google:
                        id: in esse do non
                        name: laborum non proident veniam
                      clio:
                        id: aliqua aute dolore
                        name: esse
                      drchrono:
                        id: ullamco deserunt in
                        name: incidid
                    syncOption: oneway
                    teamMembers:
                      - userId: ''
                        priority: 0
                        selected: false
                        meetingLocation: https://zoom.us
                      - userId: ''
                        priority: 0
                        selected: false
                        meetingLocation: https://zoom.us
                    availability:
                      eventTiming:
                        slotDuration: 30
                        slotInterval: 30
                        slotBuffer: 0
                      appointmentInfo:
                        perSlot: 1
                        perDay: 8
                      schedule:
                        allowBookingAfter: 1
                        allowBookingAfterUnit: Hours
                        allowBookingFor: 8
                        allowBookingForUnit: Hours
                      officeHours:
                        monday:
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                        tuesday:
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                        wednesday:
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                        thursday:
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                        friday:
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                          - openMinute: 0
                            closeMinute: 0
                            closeHour: 17
                            openHour: 8
                    confirmation:
                      form:
                        customFormId: jjusM6EOngDExnbo2DbU
                        stickyContact: false
                      notificationAndOther:
                        alertEmail: incididunt Duis
                        hasAutoConfirm: false
                        hasGoogleSendInvitationEmail: false
                        hasAllowReschedule: false
                        hasAllowCancellation: false
                        hasSendEmailToAssignedMember: false
                        notes: ''
                        facebookPixelId: ''
                        customCode: ''
                      formSubmission:
                        type: ThankYouMessage
                        content: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/calendars/services/:
    post:
      tags:
        - Calendar > Calendar/Service
      summary: /v1/calendars/services/
      description: >-
        <h4>Create a service</h4> <p>Required JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Option?</th></thead><tbody><tr><td>teamId</td><td>string</td><td>O4qa8K1M6xA4oPXu1b8O</td><td></td></tr><tr><td>name</td><td>string</td><td>Awsome
        Service</td><td></td></tr><tr><td>description</td><td>string</td><td>Awsome
        description</td><td></td></tr><tr><td>eventType</td><td>string</td><td>RoundRobin_OptimizeForAvailability</td><td><ul><li>RoundRobin_OptimizeForAvailability</li><li>RoundRobin_OptimizeForEqualDistribution</li></ul></td></tr><tr><td>teamMembers</td><td>obbject</td><td>See
        field info on the <code>teamMembers</code>
        table</td><td></td></tr><tr><td>slug</td><td>string</td><td>awsome-service</td><td></td></tr><tr><td>appointmentTitle</td><td>string</td><td><code>{{contact.name}}</code></td><td></td></tr><tr><td>eventColor</td><td>string</td><td>Tomato</td><td><ul><li>Banana</li><li>Basil</li><li>Blueberry</li><li>Flamingo</li><li>Grape</li><li>Graphite</li><li>Lavender</li><li>Peacock</li><li>Sage</li><li>Tangerine</li><li>Tomato</li></ul></td></tr><tr><td>availability</td><td>object</td><td>See
        field info on <code>availability</code>
        table.</td><td></td></tr><tr><td>confirmation</td><td>object</td><td>See
        field info on <code>confirmation</code>
        table.</td><td></td></tr></tbody></table><p>Allowed JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Option</th></thead><tbody><tr><td>isActive</td><td>boolean</td><td><code>true</code></td><td></td></tr><tr><td>syncOption</td><td>string</td><td>oneway</td><td><ul><li>oneway</li><li>twoway</li></ul></td></tr><tr><td>slug</td><td>string</td><td>first-calendar</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>teamMembers</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Options</th><th>is
        Required?</th></thead><tbody><tr><td>userId</td><td>string</td><td>GCs5KuzPqTls7vWclkEV</td><td></td><td>Yes</td></tr><tr><td>priority</td><td>string</td><td>High</td><td><ul><li>High</li><li>Medium</li><li>Low</li></ul></td><td>Yes</td></tr><tr><td>selected</td><td>boolean</td><td>true</td><td></td><td>Yes</td></tr><tr><td>meetingLocation</td><td>string</td><td>https://zoom.us/j/XXXXXXXXXX</td><td></td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>availability</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>eventTiming</td><td>object</td><td>See
        field info on <code>availability.eventTiming</code>
        table.</td><td>Yes</td></tr><tr><td>officeHours</td><td>object</td><td>See
        field info on <code>availability.officeHours</code>
        table.</td><td>Yes</td></tr><tr><td>appointmentInfo</td><td>object</td><td>See
        field info on <code>availability.appointmentInfo</code>
        table.</td><td>No</td></tr><tr><td>schedule</td><td>object</td><td>See
        field info on <code>availability.schedule</code>
        table.</td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the
        <code>availability.eventTiming</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Options</th><th>is
        Required?</th></thead><tbody><tr><td>slotDuration</td><td>number</td><td>30</td><td><ul><li>10</li><li>15</li><li>20</li><li>30</li><li>45</li><li>60</li><li>90</li><li>120</li><li>180</li><li>240</li><li>300</li><li>360</li><li>420</li><li>480</li></ul></td><td>Yes</td></tr><tr><td>slotInterval</td><td>number</td><td>30</td><td><ul><li>10</li><li>15</li><li>20</li><li>30</li><li>45</li><li>60</li><li>90</li><li>120</li><li>180</li><li>240</li><li>300</li><li>360</li><li>420</li><li>480</li></ul></td><td>Yes</td></tr><tr><td>slotBuffer</td><td>number</td><td>1</td><td></td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>availability.appointmentInfo</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>perSlot</td><td>number</td><td>1</td><td>No</td></tr><tr><td>perDay</td><td>number</td><td>5</td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>availability.schedule</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Options</th><th>is
        Required?</th></thead><tbody><tr><td>allowBookingAfter</td><td>number</td><td>1</td><td></td><td>No</td></tr><tr><td>allowBookingAfterUnit</td><td>string</td><td>days</td><td><ul><li>hours</li><li>days</li><li>weeks</li><li>months</li></ul></td><td>No</td></tr><tr><td>allowBookingFor</td><td>number</td><td>5</td><td>No</td></tr><tr><td>allowBookingForUnit</td><td>string</td><td>days</td><td><ul><li>hours</li><li>days</li><li>weeks</li><li>months</li></ul></td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>availability.officeHours</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>monday</td><td>array</td><td>Please
        see field info <code>availability.officeHours.days</code> table. include
        as a
        array.</td><td>Yes</td></tr><tr><td>tuesday</td><td>array</td><td>Please
        see field info <code>availability.officeHours.days</code> table. include
        as a
        array.</td><td>Yes</td></tr><tr><td>wednesday</td><td>array</td><td>Please
        see field info <code>availability.officeHours.days</code> table. include
        as a
        array.</td><td>Yes</td></tr><tr><td>thursday</td><td>array</td><td>Please
        see field info <code>availability.officeHours.days</code> table. include
        as a
        array.</td><td>Yes</td></tr><tr><td>friday</td><td>array</td><td>Please
        see field info <code>availability.officeHours.days</code> table. include
        as a array.</td><td>Yes</td></tr></tbody></table><p>Allowed JSON fields
        in the
        <code>availability.officeHours.days</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>openMinute</td><td>number</td><td>0</td><td>Yes</td></tr><tr><td>openHour</td><td>number</td><td>8</td><td>Yes</td></tr><tr><td>closeMinute</td><td>number</td><td>0</td><td>Yes</td></tr><tr><td>closeHour</td><td>number</td><td>17</td><td>Yes</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>confirmation</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>form</td><td>object</td><td>See
        field info on <code>confirmation.form</code>
        table.</td><td>No</td></tr><tr><td>notificationAndOther</td><td>object</td><td>See
        field info on <code>confirmation.notificationAndOther</code>
        table.</td><td>Yes</td></tr><tr><td>formSubmission</td><td>object</td><td>See
        field info on <code>confirmation.formSubmission</code>
        table.</td><td>Yes</td></tr></tbody></table><p>Allowed JSON fields in
        the
        <code>confirmation.form</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>customFormId</td><td>string</td><td>jjusM6EOngDExnbo2DbU</td><td>No</td></tr><tr><td>stickyContact</td><td>boolean</td><td>false</td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>confirmation.notificationAndOther</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>autoConfirm</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>shouldSendAlertEmailsToAssignedMember</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>googleInvitationEmails</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>allowReschedule</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>allowCancellation</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>alertEmail</td><td>string</td><td>john@deo.com</td><td>No</td></tr><tr><td>notes</td><td>string</td><td>Awesome
        Notes</td><td>No</td></tr><tr><td>facebookPixelId</td><td>string</td><td>XXXXXXXXXX</td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>confirmation.formSubmission</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Options</th><th>is
        Required?</th></thead><tbody><tr><td>type</td><td>string</td><td>ThankYouMessage</td><td><ul><li>ThankYouMessage</li><li>RedirectURL</li></ul></td><td>Yes</td></tr><tr><td>content</td><td>string</td><td>Thank
        you for your appointment
        request.</td><td></td><td>Yes</td></tr></tbody></table><br
        /><strong>Authorization:</strong> <p>Provide your location api key
        (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                teamId: 0RXEzw5UVe5oLFm6GQls
                eventType: RoundRobin_OptimizeForAvailability
                teamMembers:
                  - selected: true
                    userId: 0nU7uKSrtT2RVM1KknuF
                    priority: Low
                    meetingLocation: PhoneNumber/ZoomLink/GoogleMeet/Location
                  - selected: true
                    userId: 0nU7uKSrtT2RVM1KknuF
                    priority: Low
                    meetingLocation: PhoneNumber/ZoomLink/GoogleMeet/Location
                name: 30 Mins Call
                description: 30 Minutes Call
                slug: 30-mins-call
                eventColor: Peacock
                availability:
                  eventTiming:
                    slotDuration: 30
                    slotInterval: 30
                    slotBuffer: 0
                  appointmentInfo:
                    perSlot: 0
                    perDay: 0
                  schedule:
                    allowBookingAfter: 0
                    allowBookingAfterUnit: days
                    allowBookingFor: 0
                    allowBookingForUnit: days
                  officeHours:
                    sunday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    monday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    tuesday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    wednesday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    thursday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    friday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    saturday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                confirmation:
                  form:
                    customFormId: ''
                    stickyContact: false
                    stripe:
                      amount: 0
                      currency: USD
                      chargeDescription: Your will be billed X amount for this appointment
                  notificationAndOther:
                    autoConfirm: true
                    shouldSendAlertEmailsToAssignedMember: true
                    googleInvitationEmails: false
                    allowReschedule: true
                    allowCancellation: true
                    notes: >-
                      Phone:- {{contact.phone}} Email:- {{contact.email}} Need
                      to make a change to this event? Reschedule:-
                      {{reschedule_link}} Cancel:- {{cancellation_link}}
                    facebookPixelId: ''
                  formSubmission:
                    type: ThankYouMessage
                    content: >-
                      https://www.bing.com or Thank you for your appointment
                      request. We will contact you shortly to confirm your
                      request. Please call our office at {{contactMethod}} if
                      you have any questions.
                appointmentTitle: '{{contact.name}}'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: OW59k4IchTgKjIDy3VMO
                name: Test Service
                description: Test Service Desc.
                appointmentTitle: '{{contact.name}}'
                meetingLocation: location
                eventColor: '#FF0000'
                teamId: '#FF0000'
                linkedCalendars:
                  google:
                    id: 'adipisicing laboris veniam '
                    name: ipsum fugiat ut
                  clio:
                    id: esse non adip
                    name: tempor Excepteur
                  drchrono:
                    id: magna in sunt veniam
                    name: ut sed adipisicing nisi
                syncOption: oneway
                teamMembers:
                  - userId: ''
                    priority: 0
                    selected: false
                    meetingLocation: https://zoom.us
                  - userId: ''
                    priority: 0
                    selected: false
                    meetingLocation: https://zoom.us
                availability:
                  eventTiming:
                    slotDuration: 30
                    slotInterval: 30
                    slotBuffer: 0
                  appointmentInfo:
                    perSlot: 1
                    perDay: 8
                  schedule:
                    allowBookingAfter: 1
                    allowBookingAfterUnit: Hours
                    allowBookingFor: 8
                    allowBookingForUnit: Hours
                  officeHours:
                    monday:
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                    tuesday:
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                    wednesday:
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                    thursday:
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                    friday:
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                confirmation:
                  form:
                    customFormId: jjusM6EOngDExnbo2DbU
                    stickyContact: false
                  notificationAndOther:
                    alertEmail: dolor elit
                    hasAutoConfirm: false
                    hasGoogleSendInvitationEmail: false
                    hasAllowReschedule: false
                    hasAllowCancellation: false
                    hasSendEmailToAssignedMember: false
                    notes: ''
                    facebookPixelId: ''
                    customCode: ''
                  formSubmission:
                    type: ThankYouMessage
                    content: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                teamId:
                  message: The team id field is mandatory.
                  rule: required
                name:
                  message: The name field is mandatory.
                  rule: required
                description:
                  message: The description field is mandatory.
                  rule: required
                eventType:
                  message: The event type field is mandatory.
                  rule: required
                teamMembers:
                  message: The team members field is mandatory.
                  rule: required
                slug:
                  message: The slug field is mandatory.
                  rule: required
                appointmentTitle:
                  message: The team members field is mandatory.
                  rule: required
                eventColor:
                  message: The event color field is mandatory.
                  rule: required
                availability.eventTiming.slotDuration:
                  message: >-
                    The availability.eventTiming.slotDuration members field is
                    mandatory.
                  rule: required
                availability.eventTiming.slotInterval:
                  message: >-
                    The availability.eventTiming.slotInterval members field is
                    mandatory.
                  rule: required
                availability.officeHours:
                  message: The availability.officeHours members field is mandatory.
                  rule: required
                confirmation.notificationAndOther.autoConfirm:
                  message: >-
                    The confirmation.notificationAndOther.autoConfirm members
                    field is mandatory.
                  rule: required
                confirmation.notificationAndOther.shouldSendAlertEmailsToAssignedMember:
                  message: >-
                    The
                    confirmation.notificationAndOther.shouldSendAlertEmailsToAssignedMember
                    members field is mandatory.
                  rule: required
                confirmation.notificationAndOther.googleInvitationEmails:
                  message: >-
                    The confirmation.notificationAndOther.googleInvitationEmails
                    members field is mandatory.
                  rule: required
                confirmation.notificationAndOther.allowReschedule:
                  message: >-
                    The confirmation.notificationAndOther.allowReschedule
                    members field is mandatory.
                  rule: required
                confirmation.notificationAndOther.allowCancellation:
                  message: >-
                    The confirmation.notificationAndOther.allowCancellation
                    members field is mandatory.
                  rule: required
                confirmation.formSubmission.type:
                  message: >-
                    The confirmation.formSubmission.type members field is
                    mandatory.
                  rule: required
                confirmation.formSubmission.content:
                  message: >-
                    The confirmation.formSubmission.content members field is
                    mandatory.
                  rule: required
  /v1/calendars/services/{serviceId}:
    put:
      tags:
        - Calendar > Calendar/Service
      summary: /v1/calendars/services/:serviceId
      description: >-
        <h4>Update existing service</h4> <p>Required JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Option?</th></thead><tbody><tr><td>teamId</td><td>string</td><td>O4qa8K1M6xA4oPXu1b8O</td><td></td></tr><tr><td>name</td><td>string</td><td>Awsome
        Service</td><td></td></tr><tr><td>description</td><td>string</td><td>Awsome
        description</td><td></td></tr><tr><td>eventType</td><td>string</td><td>RoundRobin_OptimizeForAvailability</td><td><ul><li>RoundRobin_OptimizeForAvailability</li><li>RoundRobin_OptimizeForEqualDistribution</li></ul></td></tr><tr><td>teamMembers</td><td>obbject</td><td>See
        field info on the <code>teamMembers</code>
        table</td><td></td></tr><tr><td>slug</td><td>string</td><td>awsome-service</td><td></td></tr><tr><td>appointmentTitle</td><td>string</td><td><code>{{contact.name}}</code></td><td></td></tr><tr><td>eventColor</td><td>string</td><td>Tomato</td><td><ul><li>Banana</li><li>Basil</li><li>Blueberry</li><li>Flamingo</li><li>Grape</li><li>Graphite</li><li>Lavender</li><li>Peacock</li><li>Sage</li><li>Tangerine</li><li>Tomato</li></ul></td></tr><tr><td>availability</td><td>object</td><td>See
        field info on <code>availability</code>
        table.</td><td></td></tr><tr><td>confirmation</td><td>object</td><td>See
        field info on <code>confirmation</code>
        table.</td><td></td></tr></tbody></table><p>Allowed JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Option</th></thead><tbody><tr><td>isActive</td><td>boolean</td><td><code>true</code></td><td></td></tr><tr><td>syncOption</td><td>string</td><td>oneway</td><td><ul><li>oneway</li><li>twoway</li></ul></td></tr><tr><td>slug</td><td>string</td><td>first-calendar</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>teamMembers</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Options</th><th>is
        Required?</th></thead><tbody><tr><td>userId</td><td>string</td><td>GCs5KuzPqTls7vWclkEV</td><td></td><td>Yes</td></tr><tr><td>priority</td><td>string</td><td>High</td><td><ul><li>High</li><li>Medium</li><li>Low</li></ul></td><td>Yes</td></tr><tr><td>selected</td><td>boolean</td><td>true</td><td></td><td>Yes</td></tr><tr><td>meetingLocation</td><td>string</td><td>https://zoom.us/j/XXXXXXXXXX</td><td></td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>availability</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>eventTiming</td><td>object</td><td>See
        field info on <code>availability.eventTiming</code>
        table.</td><td>Yes</td></tr><tr><td>officeHours</td><td>object</td><td>See
        field info on <code>availability.officeHours</code>
        table.</td><td>Yes</td></tr><tr><td>appointmentInfo</td><td>object</td><td>See
        field info on <code>availability.appointmentInfo</code>
        table.</td><td>No</td></tr><tr><td>schedule</td><td>object</td><td>See
        field info on <code>availability.schedule</code>
        table.</td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the
        <code>availability.eventTiming</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Options</th><th>is
        Required?</th></thead><tbody><tr><td>slotDuration</td><td>number</td><td>30</td><td><ul><li>10</li><li>15</li><li>20</li><li>30</li><li>45</li><li>60</li><li>90</li><li>120</li><li>180</li><li>240</li><li>300</li><li>360</li><li>420</li><li>480</li></ul></td><td>Yes</td></tr><tr><td>slotInterval</td><td>number</td><td>30</td><td><ul><li>10</li><li>15</li><li>20</li><li>30</li><li>45</li><li>60</li><li>90</li><li>120</li><li>180</li><li>240</li><li>300</li><li>360</li><li>420</li><li>480</li></ul></td><td>Yes</td></tr><tr><td>slotBuffer</td><td>number</td><td>1</td><td></td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>availability.appointmentInfo</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>perSlot</td><td>number</td><td>1</td><td>No</td></tr><tr><td>perDay</td><td>number</td><td>5</td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>availability.schedule</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Options</th><th>is
        Required?</th></thead><tbody><tr><td>allowBookingAfter</td><td>number</td><td>1</td><td></td><td>No</td></tr><tr><td>allowBookingAfterUnit</td><td>string</td><td>days</td><td><ul><li>hours</li><li>days</li><li>weeks</li><li>months</li></ul></td><td>No</td></tr><tr><td>allowBookingFor</td><td>number</td><td>5</td><td>No</td></tr><tr><td>allowBookingForUnit</td><td>string</td><td>days</td><td><ul><li>hours</li><li>days</li><li>weeks</li><li>months</li></ul></td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>availability.officeHours</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>monday</td><td>array</td><td>Please
        see field info <code>availability.officeHours.days</code> table. include
        as a
        array.</td><td>Yes</td></tr><tr><td>tuesday</td><td>array</td><td>Please
        see field info <code>availability.officeHours.days</code> table. include
        as a
        array.</td><td>Yes</td></tr><tr><td>wednesday</td><td>array</td><td>Please
        see field info <code>availability.officeHours.days</code> table. include
        as a
        array.</td><td>Yes</td></tr><tr><td>thursday</td><td>array</td><td>Please
        see field info <code>availability.officeHours.days</code> table. include
        as a
        array.</td><td>Yes</td></tr><tr><td>friday</td><td>array</td><td>Please
        see field info <code>availability.officeHours.days</code> table. include
        as a array.</td><td>Yes</td></tr></tbody></table><p>Allowed JSON fields
        in the
        <code>availability.officeHours.days</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>openMinute</td><td>number</td><td>0</td><td>Yes</td></tr><tr><td>openHour</td><td>number</td><td>8</td><td>Yes</td></tr><tr><td>closeMinute</td><td>number</td><td>0</td><td>Yes</td></tr><tr><td>closeHour</td><td>number</td><td>17</td><td>Yes</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>confirmation</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>form</td><td>object</td><td>See
        field info on <code>confirmation.form</code>
        table.</td><td>No</td></tr><tr><td>notificationAndOther</td><td>object</td><td>See
        field info on <code>confirmation.notificationAndOther</code>
        table.</td><td>Yes</td></tr><tr><td>formSubmission</td><td>object</td><td>See
        field info on <code>confirmation.formSubmission</code>
        table.</td><td>Yes</td></tr></tbody></table><p>Allowed JSON fields in
        the
        <code>confirmation.form</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>customFormId</td><td>string</td><td>jjusM6EOngDExnbo2DbU</td><td>No</td></tr><tr><td>stickyContact</td><td>boolean</td><td>false</td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>confirmation.notificationAndOther</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is
        Required?</th></thead><tbody><tr><td>autoConfirm</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>shouldSendAlertEmailsToAssignedMember</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>googleInvitationEmails</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>allowReschedule</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>allowCancellation</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>alertEmail</td><td>string</td><td>john@deo.com</td><td>No</td></tr><tr><td>notes</td><td>string</td><td>Awesome
        Notes</td><td>No</td></tr><tr><td>facebookPixelId</td><td>string</td><td>XXXXXXXXXX</td><td>No</td></tr></tbody></table><p>Allowed
        JSON fields in the
        <code>confirmation.formSubmission</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Options</th><th>is
        Required?</th></thead><tbody><tr><td>type</td><td>string</td><td>ThankYouMessage</td><td><ul><li>ThankYouMessage</li><li>RedirectURL</li></ul></td><td>Yes</td></tr><tr><td>content</td><td>string</td><td>Thank
        you for your appointment
        request.</td><td></td><td>Yes</td></tr></tbody></table><br
        /><strong>Authorization:</strong> <p>Provide your location api key
        (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                teamId: 0RXEzw5UVe5oLFm6GQls
                eventType: RoundRobin_OptimizeForAvailability
                teamMembers:
                  - selected: true
                    userId: 0nU7uKSrtT2RVM1KknuF
                    priority: Low
                    meetingLocation: PhoneNumber/ZoomLink/GoogleMeet/Location
                  - selected: true
                    userId: 0nU7uKSrtT2RVM1KknuF
                    priority: Low
                    meetingLocation: PhoneNumber/ZoomLink/GoogleMeet/Location
                name: 30 Mins Call
                description: 30 Minutes Call
                slug: 30-mins-call
                eventColor: Peacock
                availability:
                  eventTiming:
                    slotDuration: 30
                    slotInterval: 30
                    slotBuffer: 0
                  appointmentInfo:
                    perSlot: 0
                    perDay: 0
                  schedule:
                    allowBookingAfter: 0
                    allowBookingAfterUnit: days
                    allowBookingFor: 0
                    allowBookingForUnit: days
                  officeHours:
                    sunday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    monday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    tuesday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    wednesday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    thursday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    friday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                    saturday:
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                      - openHour: 8
                        openMinute: 0
                        closeHour: 17
                        closeMinute: 0
                confirmation:
                  form:
                    customFormId: ''
                    stickyContact: false
                    stripe:
                      amount: 0
                      currency: USD
                      chargeDescription: Your will be billed X amount for this appointment
                  notificationAndOther:
                    autoConfirm: true
                    shouldSendAlertEmailsToAssignedMember: true
                    googleInvitationEmails: false
                    allowReschedule: true
                    allowCancellation: true
                    notes: >-
                      Phone:- {{contact.phone}} Email:- {{contact.email}} Need
                      to make a change to this event? Reschedule:-
                      {{reschedule_link}} Cancel:- {{cancellation_link}}
                    facebookPixelId: ''
                  formSubmission:
                    type: ThankYouMessage
                    content: >-
                      https://www.bing.com or Thank you for your appointment
                      request. We will contact you shortly to confirm your
                      request. Please call our office at {{contactMethod}} if
                      you have any questions.
                appointmentTitle: '{{contact.name}}'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Service Id
          example: 0RXEzw5UVe5oLFm6GQls
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: OW59k4IchTgKjIDy3VMO
                name: Test Service
                description: Test Service Desc.
                appointmentTitle: '{{contact.name}}'
                meetingLocation: location
                eventColor: '#FF0000'
                teamId: '#FF0000'
                linkedCalendars:
                  google:
                    id: 'adipisicing laboris veniam '
                    name: ipsum fugiat ut
                  clio:
                    id: esse non adip
                    name: tempor Excepteur
                  drchrono:
                    id: magna in sunt veniam
                    name: ut sed adipisicing nisi
                syncOption: oneway
                teamMembers:
                  - userId: ''
                    priority: 0
                    selected: false
                    meetingLocation: https://zoom.us
                  - userId: ''
                    priority: 0
                    selected: false
                    meetingLocation: https://zoom.us
                availability:
                  eventTiming:
                    slotDuration: 30
                    slotInterval: 30
                    slotBuffer: 0
                  appointmentInfo:
                    perSlot: 1
                    perDay: 8
                  schedule:
                    allowBookingAfter: 1
                    allowBookingAfterUnit: Hours
                    allowBookingFor: 8
                    allowBookingForUnit: Hours
                  officeHours:
                    monday:
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                    tuesday:
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                    wednesday:
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                    thursday:
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                    friday:
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                      - openMinute: 0
                        closeMinute: 0
                        closeHour: 17
                        openHour: 8
                confirmation:
                  form:
                    customFormId: jjusM6EOngDExnbo2DbU
                    stickyContact: false
                  notificationAndOther:
                    alertEmail: dolor elit
                    hasAutoConfirm: false
                    hasGoogleSendInvitationEmail: false
                    hasAllowReschedule: false
                    hasAllowCancellation: false
                    hasSendEmailToAssignedMember: false
                    notes: ''
                    facebookPixelId: ''
                    customCode: ''
                  formSubmission:
                    type: ThankYouMessage
                    content: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                teamId:
                  message: The team id field is mandatory.
                  rule: required
                name:
                  message: The name field is mandatory.
                  rule: required
                description:
                  message: The description field is mandatory.
                  rule: required
                eventType:
                  message: The event type field is mandatory.
                  rule: required
                teamMembers:
                  message: The team members field is mandatory.
                  rule: required
                slug:
                  message: The slug field is mandatory.
                  rule: required
                appointmentTitle:
                  message: The team members field is mandatory.
                  rule: required
                eventColor:
                  message: The event color field is mandatory.
                  rule: required
                availability.eventTiming.slotDuration:
                  message: >-
                    The availability.eventTiming.slotDuration members field is
                    mandatory.
                  rule: required
                availability.eventTiming.slotInterval:
                  message: >-
                    The availability.eventTiming.slotInterval members field is
                    mandatory.
                  rule: required
                availability.officeHours:
                  message: The availability.officeHours members field is mandatory.
                  rule: required
                confirmation.notificationAndOther.autoConfirm:
                  message: >-
                    The confirmation.notificationAndOther.autoConfirm members
                    field is mandatory.
                  rule: required
                confirmation.notificationAndOther.shouldSendAlertEmailsToAssignedMember:
                  message: >-
                    The
                    confirmation.notificationAndOther.shouldSendAlertEmailsToAssignedMember
                    members field is mandatory.
                  rule: required
                confirmation.notificationAndOther.googleInvitationEmails:
                  message: >-
                    The confirmation.notificationAndOther.googleInvitationEmails
                    members field is mandatory.
                  rule: required
                confirmation.notificationAndOther.allowReschedule:
                  message: >-
                    The confirmation.notificationAndOther.allowReschedule
                    members field is mandatory.
                  rule: required
                confirmation.notificationAndOther.allowCancellation:
                  message: >-
                    The confirmation.notificationAndOther.allowCancellation
                    members field is mandatory.
                  rule: required
                confirmation.formSubmission.type:
                  message: >-
                    The confirmation.formSubmission.type members field is
                    mandatory.
                  rule: required
                confirmation.formSubmission.content:
                  message: >-
                    The confirmation.formSubmission.content members field is
                    mandatory.
                  rule: required
    delete:
      tags:
        - Calendar > Calendar/Service
      summary: /v1/calendars/services/:serviceId
      description: >-
        <h4>Delete Service.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Service Id
          example: 0RXEzw5UVe5oLFm6GQls
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id:
                  message: The contact id is invalid.
                  rule: invalid
  /v1/appointments/slots:
    get:
      tags:
        - Calendar > Appointment
      summary: /v1/appointments/slots
      description: >-
        <h4>Get free slots.</h4><p>Required fields in the
        query</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th></tr></thead><tbody><tr><td>calendarId</td><td>string</td><td>CVokAlI8fgw4WYWoCtQz</td></tr><tr><td>startDate</td><td>integer</td><td>epoch
        timestamp. for ex:
        <code>1548898600000</code></td></tr><tr><td>endDate</td><td>integer</td><td>epoch
        timestamp. for ex:
        <code>1601490599999</code></td></tr></tbody></table><p>Allowed field in
        the
        query</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th></tr></thead><tbody><tr><td>userId</td><td>string</td><td>082goXVW3lIExEQPOnd3</td></tr><tr><td>timezone</td><td>string</td><td>America/Chihuahua</td></tr></tbody></table>
        <br /> <strong>Authorization:</strong> <p>Provide your location api key
        (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: calendarId
          in: query
          schema:
            type: string
          description: (Required) Calendar Id
          example: CVokAlI8fgw4WYWoCtQz
        - name: startDate
          in: query
          schema:
            type: integer
          description: (Required) epoch timestamp
          example: '1598898600000'
        - name: endDate
          in: query
          schema:
            type: integer
          description: (Required) epoch timestamp
          example: '1601490599999'
        - name: timezone
          in: query
          schema:
            type: string
          description: Timezone
          example: America/Chihuahua
        - name: userId
          in: query
          schema:
            type: string
          description: User Id
          example: 082goXVW3lIExEQPOnd3
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                _dates_:
                  slots:
                    - '2020-09-04T08:00:00+05:30'
                    - '2020-09-04T08:00:00+05:30'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                calendarId:
                  message: The calendar id field is mandatory.
                  rule: required
                startDate:
                  message: The start date field is mandatory.
                  rule: required
                endDate:
                  message: The end date field is mandatory.
                  rule: required
  /v1/appointments/:
    get:
      tags:
        - Calendar > Appointment
      summary: /v1/appointments/
      description: >-
        <h4>Get all booked events.</h4> <p>Required fields in the
        query</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th></tr></thead><tbody><tr><td>startDate</td><td>integer</td><td>epoch
        timestamp. for ex:
        <code>1548898600000</code></td></tr><tr><td>endDate</td><td>integer</td><td>epoch
        timestamp. for ex: <code>1601490599999</code></td></tr><tr><td>userId(or
        calendarId or
        teamId)</td><td>string</td><td>082goXVW3lIExEQPOnd3</td></tr><tr><td>calendarId(or
        userId or
        teamId)</td><td>string</td><td>0nU7uKSrtT2RVM1KknuF</td></tr><tr><td>teamId(or
        userId or
        calendarId)</td><td>string</td><td>O4qa8K1M6xA4oPXu1b8O</td></tr></tbody></table><p>Allowed
        field in the
        query</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th></tr></thead><tbody><tr><td>includeAll</td><td>boolean</td><td>Include
        contact and more data. for ex:
        <code>true</code></td></tr></tbody></table> <br />
        <strong>Authorization:</strong> <p>Provide your location api key (Bearer
        Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          schema:
            type: integer
          description: (Required) epoch timestamp
          example: '1548898600000'
        - name: endDate
          in: query
          schema:
            type: integer
          description: (Required) epoch timestamp
          example: '1601490599999'
        - name: userId
          in: query
          schema:
            type: string
          description: User Id
          example: 082goXVW3lIExEQPOnd3
        - name: calendarId
          in: query
          schema:
            type: string
          description: Calendar Id
          example: 0nU7uKSrtT2RVM1KknuF
        - name: teamId
          in: query
          schema:
            type: string
          description: Team Id
          example: O4qa8K1M6xA4oPXu1b8O
        - name: includeAll
          in: query
          schema:
            type: boolean
          description: Include contact and more data.
          example: 'true'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                appointments:
                  - id: EaALh02zfPo8VB3JOnpq
                    userId: GCs5KuzPqTls7vWclkEV
                    calendarProviderId: 0nU7uKSrtT2RVM1KknuF
                    calendarId: 9qFx5qCKr3jIdBw0DiqB
                    contactId: v1kbP2GBSZq6yzRkh7KT
                    calendarServiceId: CVokAlI8fgw4WYWoCtQz
                    isRecurring: false
                    status: booked
                    appoinmentStatus: confirmed
                    title: Calendar Standup
                    locationId: C2QujeCh8ZnC7al2InWR
                    startTime: '2020-07-22T16:00:00+05:30'
                    endTime: '2020-07-22T16:30:00+05:30'
                    selectedTimezone: Asia/Calcutta
                    contact:
                      id: ocQHyuzHvysMo5N5VsXc
                      locationId: C2QujeCh8ZnC7al2InWR
                      email: JohnDeo@gmail.com
                      emailLowerCase: johndeo@gmail.com
                      fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                      timezone: Asia/Calcutta
                      country: DE
                      customField:
                        - id: MgobCB14YMVKuE4Ka8p1
                          value: tempor in ut
                        - id: MgobCB14YMVKuE4Ka8p1
                          value: Duis
                      tags:
                        - nulla
                        - minim est
                      __moreField__: id ex nulla
                  - id: EaALh02zfPo8VB3JOnpq
                    userId: GCs5KuzPqTls7vWclkEV
                    calendarProviderId: 0nU7uKSrtT2RVM1KknuF
                    calendarId: 9qFx5qCKr3jIdBw0DiqB
                    contactId: v1kbP2GBSZq6yzRkh7KT
                    calendarServiceId: CVokAlI8fgw4WYWoCtQz
                    isRecurring: false
                    status: booked
                    appoinmentStatus: confirmed
                    title: Calendar Standup
                    locationId: C2QujeCh8ZnC7al2InWR
                    startTime: '2020-07-22T16:00:00+05:30'
                    endTime: '2020-07-22T16:30:00+05:30'
                    selectedTimezone: Asia/Calcutta
                    contact:
                      id: ocQHyuzHvysMo5N5VsXc
                      locationId: C2QujeCh8ZnC7al2InWR
                      email: JohnDeo@gmail.com
                      emailLowerCase: johndeo@gmail.com
                      fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                      timezone: Asia/Calcutta
                      country: DE
                      customField:
                        - id: MgobCB14YMVKuE4Ka8p1
                          value: adipisicing eu
                        - id: MgobCB14YMVKuE4Ka8p1
                          value: nostrud
                      tags:
                        - in voluptate
                        - id culpa sit ad dolore
                      __moreField__: 'no'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                startDate:
                  message: The start date field is mandatory.
                  rule: required
                endDate:
                  message: The end date field is mandatory.
                  rule: required
                userId or calendarProviderId:
                  message: The user id or calendar provider id field is mandatory.
                  rule: required
    post:
      tags:
        - Calendar > Appointment
      summary: /v1/appointments/
      description: >-
        <h4>Booking Appoinment.</h4><p>HL Appointments API provides several
        different ways the endpoints can be leveraged, You can examine its
        application depending on any of the following use
        cases:</p><p><strong>Use case #1</strong>: Schedule
        Appointments</p><p>This predominantly focuses on consumer facing online
        booking applications. To be able to use it effectively, consider the
        following parameters during your set-up.</p><p>Required JSON fields in
        the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>email(or
        phone)</td><td>string</td><td>johndeo@gmail.com</td></tr><tr><td>phone(or
        email)</td><td>string</td><td>+1
        888-888-8888</td></tr><tr><td>selectedSlot</td><td>datetime</td><td>2021-02-05T11:00:00+05:30</td></tr><tr><td>selectedTimezone</td><td>string</td><td>Asia/Calcutta</td></tr><tr><td>calendarId</td><td>string</td><td>J37gEVtdFMRYVQWPdXIc</td></tr></tbody></table><p>Allowed
        JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>firstName</td><td>string</td><td>John</td></tr><tr><td>lastName</td><td>string</td><td>Deo</td></tr><tr><td>name</td><td>string</td><td>John
        Deo</td></tr><tr><td>title</td><td>string</td><td>Best
        Event</td></tr><tr><td>address1</td><td>long</td><td>Tonkawa Trail
        W</td></tr><tr><td>city</td><td>string</td><td>Austin</td></tr><tr><td>state</td><td>string</td><td>Texas</td></tr><tr><td>website</td><td>string(url)</td><td>https://www.google.com</td></tr><tr><td>__custome_field_id__</td><td>string/array</td><td>Test</td></tr><tr><td>calendarNotes</td><td>long</td><td>Booked
        from public api</td></tr></tbody></table><p><strong>Use case
        #2</strong>: Block Off Time (Event Blocks)</p><p>This focuses
        specifically on actions surrounding internal applications such as
        posting a custom event block availability within your own application.
        While its application covers a range of different scenarios, you can use
        the following parameters during your set-up.</p><p>Required JSON fields
        in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>selectedSlot</td><td>datetime</td><td>2021-02-10T10:00:00Z</td></tr><tr><td>endAt</td><td>datetime</td><td>2021-02-12T10:00:00Z</td></tr><tr><td>calendarId/userId</td><td>string</td><td>J37gEVtdFMRYVQWPdXIc</td></tr></tbody></table><p>Allowed
        JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>title</td><td>string</td><td>Blocking
        Event</td></tr></tbody></table> <br />
        <strong>Authorization:</strong><p>Provide your location api key (Bearer
        Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                calendarId: CVokAlI8fgw4WYWoCtQz
                selectedTimezone: Asia/Calcutta
                selectedSlot: '2021-06-23T03:30:00+01:00'
                email: john@deo.com
                phone: '+18887324197'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 004B1SpcAvh3s9E3rqk8
                contactId: 0007BWpSzSwfiuSl0tR2
                contact:
                  id: 0007BWpSzSwfiuSl0tR2
                  locationId: C2QujeCh8ZnC7al2InWR
                  email: JohnDeo@gmail.com
                  emailLowerCase: johndeo@gmail.com
                  fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                  timezone: Asia/Calcutta
                  country: DE
                  customField:
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: anim esse
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: culpa anim nulla Ut
                  __moreField__: sin
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                calendarId:
                  message: The calendar id field is mandatory.
                  rule: required
                selectedSlot:
                  message: The selected slot field is mandatory.
                  rule: required
                selectedTimezone:
                  message: The selected timezone field is mandatory.
                  rule: required
                email or phone:
                  message: The email or phone field is mandatory.
                  rule: required
  /v1/appointments/{appointmentId}:
    get:
      tags:
        - Calendar > Appointment
      summary: /v1/appointments/:appointmentId
      description: >-
        <h4>Get appointment by id.</h4><br /><strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: appointmentId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Appointment Id
          example: 004B1SpcAvh3s9E3rqk8
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: EaALh02zfPo8VB3JOnpq
                userId: GCs5KuzPqTls7vWclkEV
                calendarProviderId: 0nU7uKSrtT2RVM1KknuF
                calendarId: 9qFx5qCKr3jIdBw0DiqB
                contactId: v1kbP2GBSZq6yzRkh7KT
                calendarServiceId: CVokAlI8fgw4WYWoCtQz
                isRecurring: false
                status: booked
                appoinmentStatus: confirmed
                title: Calendar Standup
                locationId: C2QujeCh8ZnC7al2InWR
                startTime: '2020-07-22T16:00:00+05:30'
                endTime: '2020-07-22T16:30:00+05:30'
                selectedTimezone: Asia/Calcutta
                contact:
                  id: ocQHyuzHvysMo5N5VsXc
                  locationId: C2QujeCh8ZnC7al2InWR
                  email: JohnDeo@gmail.com
                  emailLowerCase: johndeo@gmail.com
                  fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                  timezone: Asia/Calcutta
                  country: DE
                  customField:
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: sit adipisicing
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: minim consequa
                  tags:
                    - proident ipsum deserunt
                    - laborum est
                  __moreField__: nisi reprehenderit velit fugiat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    put:
      tags:
        - Calendar > Appointment
      summary: /v1/appointments/:appointmentId
      description: >-
        <h4>Update exisiting appoinment.</h4><br
        /><strong>Authorization:</strong> <p>Provide your location api key
        (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                selectedTimezone: Asia/Calcutta
                selectedSlot: '2020-08-28T15:30:00'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: appointmentId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Appointment Id
          example: 004B1SpcAvh3s9E3rqk8
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 004B1SpcAvh3s9E3rqk8
                contactId: 0007BWpSzSwfiuSl0tR2
                contact:
                  id: 0007BWpSzSwfiuSl0tR2
                  locationId: C2QujeCh8ZnC7al2InWR
                  email: JohnDeo@gmail.com
                  emailLowerCase: johndeo@gmail.com
                  fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                  timezone: Asia/Calcutta
                  country: DE
                  customField:
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: ea minim
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: qui culpa Ut
                  __moreField__: ipsum
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                selectedSlot:
                  message: The selected slot field is mandatory.
                  rule: required
                selectedTimezone:
                  message: The selected timezone field is mandatory.
                  rule: required
    delete:
      tags:
        - Calendar > Appointment
      summary: /v1/appointments/:appointmentId
      description: >-
        <h4>Delete exisiting appoinment.</h4><br
        /><strong>Authorization:</strong> <p>Provide your location api key
        (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: appointmentId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Appointment Id
          example: 004B1SpcAvh3s9E3rqk8
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/appointments/{appointmentId}/status:
    put:
      tags:
        - Calendar > Appointment
      summary: /v1/appointments/:appointmentId/status
      description: >-
        <h4>Update exisiting appoinment status.</h4><p>Required JSON fields in
        the
        body</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Options</th></tr></thead><tbody><tr><td>status</td><td>string</td><td>confirmed</td><td><ul><li>confirmed</li><li>cancelled</li><li>showed</li><li>noshow</li><li>invalid</li></ul></td></tr></tbody></table><br
        /><strong>Authorization:</strong> <p>Provide your location api key
        (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: confirmed
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: appointmentId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Appointment Id
          example: 004B1SpcAvh3s9E3rqk8
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status:
                  message: The status field is mandatory.
                  rule: required
  /v1/campaigns/:
    get:
      tags:
        - Campaign
      summary: /v1/campaigns/
      description: >-
        <h4>Get Campaigns.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
          description: Filter by status, Allowed option are draft or published.
          example: published
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                campaigns:
                  - id: Y2I9XM7aO1hncuSOlc9L
                    name: Test Campaign
                    status: draft
                  - id: Y2I9XM7aO1hncuSOlc9L
                    name: Test Campaign
                    status: draft
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/contacts/{contactId}/appointments/:
    get:
      tags:
        - Contact > Contact Appointment
      summary: /v1/contacts/:contactId/appointments/
      description: >-
        <h4>Get contact appointments.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/contacts/{contactId}/tags/:
    post:
      tags:
        - Contact > Contact Tag
      summary: /v1/contacts/:contactId/tags/
      description: >-
        <h4>Add Tags on contacts.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tags:
                  - dolore cillum
                  - ex proident cillum sed sint
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tags:
                  - velit exer
                  - sed ad
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tags:
                  message: The tags field is mandatory.
                  rules: required
    delete:
      tags:
        - Contact > Contact Tag
      summary: /v1/contacts/:contactId/tags/
      description: >-
        <h4>Delete tags from the contact.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tags:
                  - consequat
                  - culpa ut
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tags:
                  message: The tags field is mandatory.
                  rules: required
  /v1/contacts/{contactId}/campaigns/{campaignId}:
    post:
      tags:
        - Contact > Contact Campaign
      summary: /v1/contacts/:contactId/campaigns/:campaignId
      description: >-
        <h4>Add contact to campaign.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
        - name: campaignId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Campaign Id
          example: Y2I9XM7aO1hncuSOlc9L
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tags:
                  message: The tags field is mandatory.
                  rules: required
    delete:
      tags:
        - Contact > Contact Campaign
      summary: /v1/contacts/:contactId/campaigns/:campaignId
      description: >-
        <h4>Remove contact from campaign.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
        - name: campaignId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Campaign Id
          example: Y2I9XM7aO1hncuSOlc9L
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tags:
                  message: The tags field is mandatory.
                  rules: required
  /v1/contacts/{contactId}/campaigns/remove-all:
    delete:
      tags:
        - Contact > Contact Campaign
      summary: /v1/contacts/:contactId/campaigns/remove-all
      description: >-
        <h4>Remove contact from every campaign.</h4>
        <strong>Authorization:</strong> <p>Provide your location api key (Bearer
        Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tags:
                  message: The tags field is mandatory.
                  rules: required
  /v1/contacts/{contactId}/workflow/{workflowId}:
    post:
      tags:
        - Contact > Contact Workflow
      summary: /v1/contacts/:contactId/workflow/:workflowId
      description: >-
        <h4>Add contact to the workflow.</h4><p>Adding contact into workflow
        will allow these
        fields.</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>eventStartTime</td><td>string(datetime
        with timezone
        offset).</td><td>2021-06-23T03:30:00+01:00</td></tr></tbody></table>
        <br><strong>Note:</strong><p>This request will add contact in queue to
        be added in workflow. This will not get to be added realtime.</p><br
        /><strong>Authorization:</strong> <p>Provide your location api key
        (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                eventStartTime: '2021-05-26T11:33:49.000Z'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
        - name: workflowId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workflow Id
          example: 78559bb3-b920-461e-b010-7b2a2816d2a9
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                contactId: The contact id is invalid.
                workflowId: The workflow id is invalid.
  /v1/contacts/:
    get:
      tags:
        - Contact
      summary: /v1/contacts/
      description: >-
        <h4>Get Contacts.</h4><strong>Filters:</strong><table
        role="table"><thead><tr><th>Fields</th><th>Description</th></tr></thead><tbody><tr><td>query</td><td>It
        will search on these fields: <code>Name</code>, <code>Phone</code>,
        <code>Email</code>, <code>Tags</code>, and <code>Company
        Name</code>.</td></tr></tbody></table><strong>Sorting:</strong><table
        role="table"><thead><tr><th>Fields</th><th>Allowed
        Options</th><th>Default
        value</th></tr></thead><tbody><tr><td>sortBy</td><td><code>date_added</code>
        or
        <code>date_updated</code></td><td><code>date_added</code></td></tr><tr><td>order</td><td><code>asc</code>
        or
        <code>desc</code></td><td><code>desc</code></td></tr></tbody></table><strong>Pagination:</strong><p>We
        will by default return the first matched 20 contacts. You can fetched
        next and more by passing the page on the query params <span
        style="color: red;">(deprecated)</span>. You can see page info and total
        records count on to the <code>meta</code> <br /><br /> <strong>New:
        </strong>You can fetched next and more by passing the startAfter and
        startAfterId on the query params. You can see <code>startAfterId</code>
        and <code>startAfter</code> fields found into the response
        <code>meta</code> field.</p><strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: startAfterId
          in: query
          schema:
            type: string
          description: Start After Id
          example: UIaE1WjAwWKdlyD7osQI
        - name: startAfter
          in: query
          schema:
            type: integer
          description: Start After
          example: '1603870249758'
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            Limit Per Page records count. will allow maximum up to 100 and
            default will be 20
          example: '20'
        - name: query
          in: query
          schema:
            type: string
          description: Contact Query
          example: John
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                contacts:
                  - id: ocQHyuzHvysMo5N5VsXc
                    locationId: C2QujeCh8ZnC7al2InWR
                    email: JohnDeo@gmail.com
                    emailLowerCase: johndeo@gmail.com
                    fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                    timezone: Asia/Calcutta
                    country: DE
                    source: xyz form
                    dateAdded: '2020-10-29T09:31:30.255Z'
                    customField:
                      - id: MgobCB14YMVKuE4Ka8p1
                        value: cillum in ullamco dolor commodo
                      - id: MgobCB14YMVKuE4Ka8p1
                        value: tempor
                    tags:
                      - magna ut sint labore lab
                      - Duis nulla cillum
                    __moreField__: ut consequat sit
                  - id: ocQHyuzHvysMo5N5VsXc
                    locationId: C2QujeCh8ZnC7al2InWR
                    email: JohnDeo@gmail.com
                    emailLowerCase: johndeo@gmail.com
                    fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                    timezone: Asia/Calcutta
                    country: DE
                    source: xyz form
                    dateAdded: '2020-10-29T09:31:30.255Z'
                    customField:
                      - id: MgobCB14YMVKuE4Ka8p1
                        value: Duis Excepteur cupidatat d
                      - id: MgobCB14YMVKuE4Ka8p1
                        value: pariatur
                    tags:
                      - veniam amet velit commodo
                      - ullamco eu sit mollit
                    __moreField__: cupidatat sit anim
                meta:
                  total: 250
                  nextPageUrl: >-
                    https://rest.gohighlevel.com/v1/contacts?limit=1&q=j&startAfter=1603870249758&startAfterId=UIaE1WjAwWKdlyD7osQI
                  startAfterId: UIaE1WjAwWKdlyD7osQI
                  startAfter: 1603870249758
                  currentPage: 2
                  nextPage: 3
                  prevPage: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    post:
      tags:
        - Contact
      summary: /v1/contacts/
      description: >-
        <h4>Create a contact.</h4><p>Create contact will allow this fields.
        ex:</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>firstName</td><td>string</td><td>John</td></tr><tr><td>lastName</td><td>string</td><td>Deo</td></tr><tr><td>name</td><td>string</td><td>John
        Deo</td></tr><tr><td>email</td><td>string</td><td>johndeo@gmail.com</td></tr><tr><td>phone</td><td>string</td><td>+1
        888-888-8888</td></tr><tr><td>address1</td><td>long</td><td>Tonkawa
        Trail
        W</td></tr><tr><td>city</td><td>string</td><td>Austin</td></tr><tr><td>state</td><td>string</td><td>Texas</td></tr><tr><td>postalCode</td><td>string</td><td>45001</td></tr><tr><td>website</td><td>string(url)</td><td>https://www.google.com</td></tr><tr><td>timezone</td><td>string</td><td>America/Chihuahua</td></tr><tr><td>dnd</td><td>boolean</td><td><code>true</code></td></tr><tr><td>tags</td><td>array</td><td><code>["tag1",
        "tag2"]</code></td></tr><tr><td>customField</td><td>object</td><td><code>{"3r6dEOnsApNaKIhnFM6u":
        "Value 1", "MgobCB14YMVKuE4Ka8p1": "Value 2"}</code>.
        <strong>Notes:</strong> <code>3r6dEOnsApNaKIhnFM6u</code> and
        <code>MgobCB14YMVKuE4Ka8p1</code> is a custom field id. You can find it
        using *Custom Fields*
        endpoints.</td></tr><tr><td>source</td><td>string</td><td>Public
        API</td></tr></tbody></table><br
        /><strong>Validation:</strong><p><strong>Email</strong> or
        <strong>Phone</strong> are required to create contact <br /><br />
        <strong>Authorization:</strong> <p>Provide your location api key (Bearer
        Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: john@deo.com
                phone: '+18887324197'
                firstName: John
                lastName: Deo
                name: John Deo
                dateOfBirth: '1990-09-25'
                address1: 3535 1st St N
                city: Dolomite
                state: AL
                country: US
                postalCode: '35061'
                companyName: DGS VolMAX
                website: '35061'
                tags:
                  - aute consequat ad ea
                  - dolor sed
                source: public api
                customField:
                  __custom_field_id__: exercitation
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                contact:
                  id: ocQHyuzHvysMo5N5VsXc
                  locationId: C2QujeCh8ZnC7al2InWR
                  email: JohnDeo@gmail.com
                  emailLowerCase: johndeo@gmail.com
                  fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                  timezone: Asia/Calcutta
                  country: DE
                  source: xyz form
                  dateAdded: '2020-10-29T09:31:30.255Z'
                  customField:
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: ea laboris consectetur elit sit
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: incididunt cupidatat nostrud qu
                  tags:
                    - laboris esse ut irure
                    - eiusmod exercitation irure ut
                  __moreField__: consequat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                email or phone:
                  message: The email or phone field is mandatory.
                  rule: required
  /v1/contacts/lookup:
    get:
      tags:
        - Contact
      summary: /v1/contacts/lookup
      description: >-
        <h4>Search contact by email or phone number.</h4> <p>If you will pass
        email or phone, it will try find and give contacts based on
        that.<p><p>OR If you will pass both first it will try to find contact
        with email first and if it is not able to find contact then it will try
        to find the match based on the phone.</p><strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
        <strong>Validation:</strong><p><strong>Email</strong> or
        <strong>Phone</strong> are required to lookup contact.</p>
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: query
          schema:
            type: string
          description: (Required) Contact email
          example: john@deo.com
        - name: phone
          in: query
          schema:
            type: number
          description: (Required) Contact phone
          example: '+491971259866'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                contacts:
                  - id: ocQHyuzHvysMo5N5VsXc
                    locationId: C2QujeCh8ZnC7al2InWR
                    email: JohnDeo@gmail.com
                    emailLowerCase: johndeo@gmail.com
                    fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                    timezone: Asia/Calcutta
                    country: DE
                    source: xyz form
                    dateAdded: '2020-10-29T09:31:30.255Z'
                    customField:
                      - id: MgobCB14YMVKuE4Ka8p1
                        value: quis Excepteur nisi officia
                      - id: MgobCB14YMVKuE4Ka8p1
                        value: laborum
                    tags:
                      - et incidi
                      - nulla eu commodo aliqua
                    __moreField__: exercitation nostrud ea
                  - id: ocQHyuzHvysMo5N5VsXc
                    locationId: C2QujeCh8ZnC7al2InWR
                    email: JohnDeo@gmail.com
                    emailLowerCase: johndeo@gmail.com
                    fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                    timezone: Asia/Calcutta
                    country: DE
                    source: xyz form
                    dateAdded: '2020-10-29T09:31:30.255Z'
                    customField:
                      - id: MgobCB14YMVKuE4Ka8p1
                        value: consequat tempor sed cillum
                      - id: MgobCB14YMVKuE4Ka8p1
                        value: occaecat anim
                    tags:
                      - deserunt sed est
                      - consequat id irure
                    __moreField__: qui dolor Lorem
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                email or phone:
                  message: The email or phone field is mandatory.
                  rule: required
  /v1/contacts/{id}:
    get:
      tags:
        - Contact
      summary: /v1/contacts/:id
      description: >-
        <h4>Get contact by id.</h4> <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                contact:
                  id: ocQHyuzHvysMo5N5VsXc
                  locationId: C2QujeCh8ZnC7al2InWR
                  email: JohnDeo@gmail.com
                  emailLowerCase: johndeo@gmail.com
                  fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                  timezone: Asia/Calcutta
                  country: DE
                  source: xyz form
                  dateAdded: '2020-10-29T09:31:30.255Z'
                  customField:
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: ea laboris consectetur elit sit
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: incididunt cupidatat nostrud qu
                  tags:
                    - laboris esse ut irure
                    - eiusmod exercitation irure ut
                  __moreField__: consequat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id:
                  message: The contact id is invalid.
                  rule: invalid
    put:
      tags:
        - Contact
      summary: /v1/contacts/:id
      description: >-
        <h4>Update a contact.</h4><p>Update contact will allow this fields.
        ex:</p>
        <table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>firstName</td><td>string</td><td>John</td></tr><tr><td>lastName</td><td>string</td><td>Deo</td></tr><tr><td>name</td><td>string</td><td>John
        Deo</td></tr><tr><td>email</td><td>string</td><td>johndeo@gmail.com</td></tr><tr><td>phone</td><td>string</td><td>+1
        888-888-8888</td></tr><tr><td>address1</td><td>long</td><td>Tonkawa
        Trail
        W</td></tr><tr><td>city</td><td>string</td><td>Austin</td></tr><tr><td>state</td><td>string</td><td>Texas</td></tr><tr><td>postalCode</td><td>string</td><td>45001</td></tr><tr><td>website</td><td>string(url)</td><td>https://www.google.com</td></tr><tr><td>timezone</td><td>string</td><td>America/Chihuahua</td></tr><tr><td>dnd</td><td>boolean</td><td><code>true</code></td></tr><tr><td>tags</td><td>array</td><td><code>["tag1",
        "tag2"]</code></td></tr><tr><td>customField</td><td>object</td><td><code>{"3r6dEOnsApNaKIhnFM6u":
        "Value 1", "MgobCB14YMVKuE4Ka8p1": "Value 2"}</code>.
        <strong>Notes:</strong> <code>3r6dEOnsApNaKIhnFM6u</code> and
        <code>MgobCB14YMVKuE4Ka8p1</code> is a custom field id. You can find it
        using *Custom Fields*
        endpoints.</td></tr><tr><td>source</td><td>string</td><td>Public
        API</td></tr></tbody></table><br
        /><strong>Validation:</strong><p><strong>Email</strong> or
        <strong>Phone</strong> are required to update contact <br /><br />
        <strong>Authorization:</strong> <p>Provide your location api key (Bearer
        Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: John
                lastName: Deo
                name: John Deo
                email: john@deo.com
                phone: '+18887324197'
                dateOfBirth: '1990-09-25'
                address1: 3535 1st St N
                city: Dolomite
                state: AL
                country: US
                postalCode: '35061'
                companyName: DGS VolMAX
                website: '35061'
                tags:
                  - ea deserunt culpa laboris
                  - quis in veniam qui
                source: public api
                customField:
                  __custom_field_id__: ea d
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                contact:
                  id: ocQHyuzHvysMo5N5VsXc
                  locationId: C2QujeCh8ZnC7al2InWR
                  email: JohnDeo@gmail.com
                  emailLowerCase: johndeo@gmail.com
                  fingerprint: 91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24
                  timezone: Asia/Calcutta
                  country: DE
                  source: xyz form
                  dateAdded: '2020-10-29T09:31:30.255Z'
                  customField:
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: ea laboris consectetur elit sit
                    - id: MgobCB14YMVKuE4Ka8p1
                      value: incididunt cupidatat nostrud qu
                  tags:
                    - laboris esse ut irure
                    - eiusmod exercitation irure ut
                  __moreField__: consequat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id:
                  message: The contact id is invalid.
                  rule: required
    delete:
      tags:
        - Contact
      summary: /v1/contacts/:id
      description: >-
        <h4>Delete contact by id.</h4><strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id:
                  message: The contact id is invalid.
                  rule: invalid
  /v1/custom-fields/:
    get:
      tags:
        - Custom Field
      summary: /v1/custom-fields/
      description: >-
        <h4>Get all available custom fields.</h4><strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                customFields:
                  - id: ocQHyuzHvysMo5N5VsXc
                    name: Select
                    fieldKey: contact.select
                    placeholder: Placeholder Text
                    position: 0
                    dateType: SINGLE_OPTIONS
                    picklistOptions:
                      - first
                      - first
                  - id: ocQHyuzHvysMo5N5VsXc
                    name: Select
                    fieldKey: contact.select
                    placeholder: Placeholder Text
                    position: 0
                    dateType: SINGLE_OPTIONS
                    picklistOptions:
                      - first
                      - first
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    post:
      tags:
        - Custom Field
      summary: /v1/custom-fields/
      description: >-
        <h4>Creating Custom Field.</h4><p>Data Type Fields will allow these
        options.
        ex:</p><strong>Options:</strong><ul><li>TEXT</li><li>LARGE_TEXT</li><li>NUMERICAL</li><li>PHONE</li><li>MONETORY</li><li>CHECKBOX</li><li>SINGLE_OPTIONS</li><li>MULTIPLE_OPTIONS</li><li>FLOAT</li><li>TIME</li><li>DATE</li><li>TEXTBOX_LIST</li><li>FILE_UPLOAD</li><li>SIGNATURE</li></ul><strong>Validation:</strong><p><strong>Name</strong>
        and <strong>Date Type</strong> are required to create every custom
        field.<p>On every data type of field have diffrent validation rules.
        These are the different validation
        rules.</p><strong>FILE_UPLOAD:</strong><ul><li><strong>acceptedFormat</strong>
        *(required) This will allow array of file
        format.<ul><li>.pdf</li><li>.docx</li><li>.jpeg</li><li>.png</li><li>.gif</li><li>.csv</li><li>all</li></ul></li><li><strong>isMulitpalFile</strong>
        (optional) it allow <code>true</code> or <code>false</code>. If you want
        to allow multipal files pass <code>true</code>
        </li><li><strong>maxNumberOfFiles</strong> (options) It will allow
        maximum these number of files.</li></ul><strong>SINGLE_OPTIONS /
        MULTIPLE_OPTIONS / CHECKBOX:</strong><br
        /><ul><li><strong>options</strong> *(required) This will allow array of
        options.</li></ul><strong>TEXTBOX_LIST</strong><ul><li><strong>textBoxListOptions:</strong>
        (required) This will allow array of textbox list. Array will contanis
        label and prefillValue. ex.: <code>{label": "Hello", "prefillValue":
        "value"}</code></li></ul>  <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Custom Field
                dataType: TEXT
                placeholder: Placeholder Text
                options:
                  - first option
                  - last option
                acceptedFormat:
                  - .pdf
                  - .docx
                  - .jpeg
                isMultipalFile: false
                maxNumberOfFiles: 2
                textBoxListOptions:
                  - label: First
                    prefillValue: ''
                  - label: First
                    prefillValue: ''
                position: 0
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ocQHyuzHvysMo5N5VsXc
                name: Select
                fieldKey: contact.select
                placeholder: Placeholder Text
                position: 0
                dateType: SINGLE_OPTIONS
                picklistOptions:
                  - first
                  - first
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name:
                  message: The name field is mandatory.
                  rule: required
                dataType:
                  message: The data type field is mandatory.
                  rule: required
                options or acceptedFormat or textBoxListOptions:
                  message: >-
                    The options or acceptedFormat or textBoxListOptions field is
                    mandatory.
                  rule: required
  /v1/custom-fields/{customFieldId}:
    get:
      tags:
        - Custom Field
      summary: /v1/custom-fields/:customFieldId
      description: >-
        <h4>Get custom fields by id</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: customFieldId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Custom Field Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ocQHyuzHvysMo5N5VsXc
                name: Select
                fieldKey: contact.select
                placeholder: Placeholder Text
                position: 0
                dateType: SINGLE_OPTIONS
                picklistOptions:
                  - first
                  - first
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    put:
      tags:
        - Custom Field
      summary: /v1/custom-fields/:customFieldId
      description: >-
        <h4>Updating Custom Field.</h4><p>Data Type Fields will allow these
        options.
        ex:</p><strong>Options:</strong><ul><li>TEXT</li><li>LARGE_TEXT</li><li>NUMERICAL</li><li>PHONE</li><li>MONETORY</li><li>CHECKBOX</li><li>SINGLE_OPTIONS</li><li>MULTIPLE_OPTIONS</li><li>FLOAT</li><li>TIME</li><li>DATE</li><li>TEXTBOX_LIST</li><li>FILE_UPLOAD</li><li>SIGNATURE</li></ul><strong>Validation:</strong><p><strong>Name</strong>
        and <strong>Date Type</strong> are required to create every custom
        field.<p>On every data type of field have diffrent validation rules.
        These are the different validation
        rules.</p><strong>FILE_UPLOAD:</strong><ul><li><strong>acceptedFormat</strong>
        *(required) This will allow array of file
        format.<ul><li>.pdf</li><li>.docx</li><li>.jpeg</li><li>.png</li><li>.gif</li><li>.csv</li><li>all</li></ul></li><li><strong>isMulitpalFile</strong>
        (optional) it allow <code>true</code> or <code>false</code>. If you want
        to allow multipal files pass <code>true</code>
        </li><li><strong>maxNumberOfFiles</strong> (options) It will allow
        maximum these number of files.</li></ul><strong>SINGLE_OPTIONS /
        MULTIPLE_OPTIONS / CHECKBOX:</strong><br
        /><ul><li><strong>options</strong> *(required) This will allow array of
        options.</li></ul><strong>TEXTBOX_LIST</strong><ul><li><strong>textBoxListOptions:</strong>
        (required) This will allow array of textbox list. Array will contanis
        label and prefillValue. ex.: <code>{label": "Hello", "prefillValue":
        "value"}</code></li></ul>  <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Custom Field
                dataType: TEXT
                placeholder: Placeholder Text
                options:
                  - first option
                  - last option
                acceptedFormat:
                  - .pdf
                  - .docx
                  - .jpeg
                isMultipalFile: false
                maxNumberOfFiles: 2
                textBoxListOptions:
                  - label: First
                    prefillValue: ''
                  - label: First
                    prefillValue: ''
                position: 0
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: customFieldId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Custom Field Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ocQHyuzHvysMo5N5VsXc
                name: Select
                fieldKey: contact.select
                placeholder: Placeholder Text
                position: 0
                dateType: SINGLE_OPTIONS
                picklistOptions:
                  - first
                  - first
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name:
                  message: The name field is mandatory.
                  rule: required
                dataType:
                  message: The data type field is mandatory.
                  rule: required
                options or acceptedFormat or textBoxListOptions:
                  message: >-
                    The options or acceptedFormat or textBoxListOptions field is
                    mandatory.
                  rule: required
    delete:
      tags:
        - Custom Field
      summary: /v1/custom-fields/:customFieldId
      description: >-
        <h4>Delete one of custom fields.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: customFieldId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Custom Field Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                customFieldId:
                  message: The custom field id is invalid.
                  rule: invalid
  /v1/custom-values/:
    get:
      tags:
        - Custom Value
      summary: /v1/custom-values/
      description: >-
        <h4>Get all available custom values.</h4>
        <strong>Authorization:</strong> <p>Provide your location api key (Bearer
        Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                customFields:
                  - id: ocQHyuzHvysMo5N5VsXc
                    name: Select
                    fieldKey: '{{ custom_value.test }}'
                    value: test
                  - id: ocQHyuzHvysMo5N5VsXc
                    name: Select
                    fieldKey: '{{ custom_value.test }}'
                    value: test
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    post:
      tags:
        - Custom Value
      summary: /v1/custom-values/
      description: >-
        <h4>Create custom value.</h4> <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Custom Field
                value: Value
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ocQHyuzHvysMo5N5VsXc
                name: Select
                fieldKey: '{{ custom_value.test }}'
                value: test
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name:
                  message: The name field is mandatory.
                  rule: required
                value:
                  message: The value field is mandatory.
                  rule: required
  /v1/custom-values/{customValueId}:
    get:
      tags:
        - Custom Value
      summary: /v1/custom-values/:customValueId
      description: >-
        <h4>Get custom value by id.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: customValueId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Custom Value Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ocQHyuzHvysMo5N5VsXc
                name: Select
                fieldKey: '{{ custom_value.test }}'
                value: test
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    put:
      tags:
        - Custom Value
      summary: /v1/custom-values/:customValueId
      description: >-
        <h4>Update custom value.</h4> <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Custom Field
                value: Value
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: customValueId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Custom Value Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ocQHyuzHvysMo5N5VsXc
                name: Select
                fieldKey: '{{ custom_value.test }}'
                value: test
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name:
                  message: The name field is mandatory.
                  rule: required
                value:
                  message: The value field is mandatory.
                  rule: required
    delete:
      tags:
        - Custom Value
      summary: /v1/custom-values/:customValueId
      description: >-
        <h4>Delete one of custom value.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: customValueId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Custom Value Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                customValueId:
                  message: The custom field id is invalid.
                  rule: invalid
  /v1/forms/:
    get:
      tags:
        - Form
      summary: /v1/forms/
      description: >-
        <h4>Get Forms.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                forms:
                  - id: uP9CBUzKKZkP5BtkHeK3
                    name: Form 1
                  - id: uP9CBUzKKZkP5BtkHeK3
                    name: Form 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/forms/submissions:
    get:
      tags:
        - Form
      summary: /v1/forms/submissions
      description: >-
        <h4>Get form submissions.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          description: Page No. By default it will be 1
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            Limit Per Page records count. will allow maximum up to 100 and
            default will be 20
          example: '20'
        - name: formId
          in: query
          schema:
            type: string
          description: Filter submission by form id
          example: jjusM6EOngDExnbo2DbU
        - name: q
          in: query
          schema:
            type: string
          description: Filter by contactId, name, email or phone no.
          example: john@deo.com
        - name: startAt
          in: query
          schema:
            type: string
          description: >-
            Get submission by starting of this date. By default it will be same
            date of last month.
          example: '2020-11-14'
        - name: endAt
          in: query
          schema:
            type: string
          description: >-
            Get submission by ending of this date. By default it will be current
            date.
          example: '2020-12-14'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                submissions:
                  - id: be759b9a-c3ec-4b29-ba07-fc3c89c77673
                    contactId: 9NkT25Vor1v4aQatFsv2
                    __submissions_other_field__: john@deo.com
                    __custom_field_id__: '20'
                    createdAt: '2020-11-01T18:02:21.000Z'
                    formId: jjusM6EOngDExnbo2DbU
                    pageDetails:
                      url: https://www.gohighlevel.com/
                      source: Social Media
                      referrer: http://m.facebook.com
                      fbclid: >-
                        IwAR1JoTTltt3EKJE3O-MrQij_lTeA6BKGTy8M2wKepSzs4oUbTYhL2Lns18w
                  - id: be759b9a-c3ec-4b29-ba07-fc3c89c77673
                    contactId: 9NkT25Vor1v4aQatFsv2
                    __submissions_other_field__: john@deo.com
                    __custom_field_id__: '20'
                    createdAt: '2020-11-01T18:02:21.000Z'
                    formId: jjusM6EOngDExnbo2DbU
                    pageDetails:
                      url: https://www.gohighlevel.com/
                      source: Social Media
                      referrer: http://m.facebook.com
                      fbclid: >-
                        IwAR1JoTTltt3EKJE3O-MrQij_lTeA6BKGTy8M2wKepSzs4oUbTYhL2Lns18w
                meta:
                  total: 250
                  currentPage: 2
                  nextPage: 3
                  prevPage: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/locations/:
    get:
      tags:
        - Location
      summary: /v1/locations/
      description: >-
        <h4>Get all agency location.</h4> <strong>Authorization:</strong>
        <p>Provide your agency api key (Bearer Token). You can find it on Agency
        -> Settings -> API keys</p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                locations:
                  - id: i2SpAtBVHSVea1sL6oah
                    name: Tesla inc
                    address: 3500 Deer Creek Road
                    city: Palo Alto
                    country: US
                    state: CA
                    postalCode: '94304'
                    website: https://www.tesla.com
                    timezone: US/Central
                    firstName: John
                    lastName: Deo
                    email: john@deo.com
                    phone: +1202-555-0107
                    apiKey: 2c359c82-590a-4d6f-ac76-32b7a1e649ea
                    business:
                      name: Tesla inc
                      address: 3500 Deer Creek Road
                      city: Palo Alto
                      country: US
                      state: CA
                      postalCode: '94304'
                      website: https://www.tesla.com
                      timezone: US/Central
                    social:
                      facebookUrl: https://facebook.com/groups/XXX
                      googlePlus: https://groups.google.com/d/XXX
                      linkedIn: https://www.linkedin.com/groups/XXX/profile
                      foursquare: https://foursquare.com/groups/XXX
                      twitter: https://twitter.com/XXX
                      yelp: https://yelp.com/XXX
                      instagram: https://instagram.com/XXX
                      youtube: https://youtube.com/XXX
                      pinterest: https://pinterest.com/XXX
                      blogRss: https://rss.xyz.com
                      googlePlaceId: redfdfdere
                    settings:
                      allowDuplicateContact: false
                      allowDuplicateOpportunity: false
                      allowFacebookNameMerge: false
                      disableContactTimezone: false
                  - id: i2SpAtBVHSVea1sL6oah
                    name: Tesla inc
                    address: 3500 Deer Creek Road
                    city: Palo Alto
                    country: US
                    state: CA
                    postalCode: '94304'
                    website: https://www.tesla.com
                    timezone: US/Central
                    firstName: John
                    lastName: Deo
                    email: john@deo.com
                    phone: +1202-555-0107
                    apiKey: 2c359c82-590a-4d6f-ac76-32b7a1e649ea
                    business:
                      name: Tesla inc
                      address: 3500 Deer Creek Road
                      city: Palo Alto
                      country: US
                      state: CA
                      postalCode: '94304'
                      website: https://www.tesla.com
                      timezone: US/Central
                    social:
                      facebookUrl: https://facebook.com/groups/XXX
                      googlePlus: https://groups.google.com/d/XXX
                      linkedIn: https://www.linkedin.com/groups/XXX/profile
                      foursquare: https://foursquare.com/groups/XXX
                      twitter: https://twitter.com/XXX
                      yelp: https://yelp.com/XXX
                      instagram: https://instagram.com/XXX
                      youtube: https://youtube.com/XXX
                      pinterest: https://pinterest.com/XXX
                      blogRss: https://rss.xyz.com
                      googlePlaceId: redfdfdere
                    settings:
                      allowDuplicateContact: false
                      allowDuplicateOpportunity: false
                      allowFacebookNameMerge: false
                      disableContactTimezone: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    post:
      tags:
        - Location
      summary: /v1/locations/
      description: >-
        <h4>Create a Location.</h4><p>Required JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>businessName</td><td>string</td><td>ACME
        Agency</td></tr></tbody></table><p>Allowed JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>address</td><td>string</td><td>3500
        Deer Creek Road</td></tr><tr><td>city</td><td>string</td><td>Palo
        Alto</td></tr><tr><td>state</td><td>string</td><td>CA</td></tr><tr><td>country</td><td>string</td><td>US</td></tr><tr><td>postalCode</td><td>string</td><td>94304</td></tr><tr><td>website</td><td>string</td><td>https://www.tesla.com</td></tr><tr><td>timezone</td><td>string</td><td>US/Central</td></tr><tr><td>firstName</td><td>string</td><td>John</td></tr><tr><td>lastName</td><td>string</td><td>Deno</td></tr><tr><td>email</td><td>string</td><td>johndeo@gmail.com</td></tr><tr><td>phone</td><td>string</td><td>+1202-555-0107</td></tr><tr><td>settings</td><td>object</td><td><code>{
        "allowDuplicateContact": false, "allowDuplicateOpportunity": false,
        "allowFacebookNameMerge": false, "disableContactTimezone": false
        }</code></td></tr><tr><td>twilio</td><td>object</td><td><code>{ "sid":
        "AC_XXXXXXXXXXX", "authToken": "77_XXXXXXXXXXX"
        }</code></td></tr><tr><td>snapshot</td><td>object</td><td><code>{ "id":
        "XXXXXXXXXXX", "type": "vertical"
        }</code></td></tr><tr><td>mailgun</td><td>object</td><td><code>{"mailgun":
        {"apiKey": "key-XXXXXXXXXXX", "domain":
        "replies.yourdomain.com"}</code></td></tr></tbody></table><p>Twilio
        field required two field to
        setup</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>sid</td><td>string</td><td>AC_XXXXXXXXXXX
        (Twilio Account
        SID)</td></tr><tr><td>authToken</td><td>string</td><td>77_XXXXXXXXXXX
        (Twilio Auth Token)</td></tr></tbody></table><p>Snapshot field required
        two field to
        import</p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Option</th></thead><tbody><tr><td>id</td><td>string</td><td>XXXXXXXXXXX
        (Find it from snapshot
        api)</td><td></td></tr><tr><td>type</td><td>string</td><td>own</td><td><ul><li>own</li><li>imported</li></ul></td></tr></tbody></table><p>Mailgun
        field required two field to
        setup</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>apiKey</td><td>string</td><td>key-XXXXXXXXXXX</td><td></td></tr><tr><td>domain</td><td>string</td><td>replies.yourdomain.com</td></tr></tbody></table><p>Timezone
        field allowed options, Can grab it from the timezone list api.</p><br
        /><h5>Authorization:</h5><p>Provide your agency api key (Bearer Token).
        You can find it on Agency -&gt; Settings -&gt; API keys</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                businessName: Tesla inc
                address: 3500 Deer Creek Road
                city: Palo Alto
                country: US
                state: CA
                postalCode: '94304'
                website: https://www.tesla.com
                timezone: US/Central
                firstName: John
                lastName: Deo
                email: john@deo.com
                phone: +1202-555-0107
                settings:
                  allowDuplicateContact: false
                  allowDuplicateOpportunity: false
                  allowFacebookNameMerge: false
                  disableContactTimezone: false
                twilio:
                  sid: AC_XXXXXXXXXXX
                  authToken: 77_XXXXXXXXXXX
                snapshot:
                  id: XXXXXXXXXXX
                  type: vertical
                mailgun:
                  apiKey: key-XXXXXXXXXXX
                  domain: replies.yourdomain.com
                social:
                  facebookUrl: https://facebook.com/groups/XXX
                  googlePlus: https://groups.google.com/d/XXX
                  linkedIn: https://www.linkedin.com/groups/XXX/profile
                  foursquare: https://foursquare.com/groups/XXX
                  twitter: https://twitter.com/XXX
                  yelp: https://yelp.com/XXX
                  instagram: https://instagram.com/XXX
                  youtube: https://youtube.com/XXX
                  pinterest: https://pinterest.com/XXX
                  blogRss: https://rss.xyz.com
                  googlePlaceId: redfdfdere
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: i2SpAtBVHSVea1sL6oah
                name: Tesla inc
                address: 3500 Deer Creek Road
                city: Palo Alto
                country: US
                state: CA
                postalCode: '94304'
                website: https://www.tesla.com
                timezone: US/Central
                firstName: John
                lastName: Deo
                email: john@deo.com
                phone: +1202-555-0107
                apiKey: 2c359c82-590a-4d6f-ac76-32b7a1e649ea
                business:
                  name: Tesla inc
                  email: johndeo@gmail.com
                  address: 3500 Deer Creek Road
                  city: Palo Alto
                  country: US
                  state: CA
                  postalCode: '94304'
                  website: https://www.tesla.com
                  timezone: US/Central
                social:
                  facebookUrl: https://facebook.com/groups/XXX
                  googlePlus: https://groups.google.com/d/XXX
                  linkedIn: https://www.linkedin.com/groups/XXX/profile
                  foursquare: https://foursquare.com/groups/XXX
                  twitter: https://twitter.com/XXX
                  yelp: https://yelp.com/XXX
                  instagram: https://instagram.com/XXX
                  youtube: https://youtube.com/XXX
                  pinterest: https://pinterest.com/XXX
                  blogRss: https://rss.xyz.com
                  googlePlaceId: redfdfdere
                settings:
                  allowDuplicateContact: false
                  allowDuplicateOpportunity: false
                  allowFacebookNameMerge: false
                  disableContactTimezone: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                firstName:
                  message: The first name field is mandatory.
                  rule: required
                lastName:
                  message: The last name field is mandatory.
                  rule: required
                email:
                  message: The email field is mandatory.
                  rule: required
                phone:
                  message: The email field is mandatory.
                  rule: required
                businessName:
                  message: The business name field is mandatory.
                  rule: required
                address:
                  message: The address field is mandatory.
                  rule: required
                city:
                  message: The city field is mandatory.
                  rule: required
                state:
                  message: The state field is mandatory.
                  rule: required
                country:
                  message: The country field is mandatory.
                  rule: required
                postalCode:
                  message: The postal code field is mandatory.
                  rule: required
  /v1/locations/lookup:
    get:
      tags:
        - Location
      summary: /v1/locations/lookup
      description: >-
        <h4>Find location by email.</h4><strong>Authorization:</strong>
        <p>Provide your agency api key (Bearer Token). You can find it on Agency
        -> Settings -> API keys</p>
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: query
          schema:
            type: string
          description: (Required) Email
          example: john@deo.com
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: i2SpAtBVHSVea1sL6oah
                name: Tesla inc
                address: 3500 Deer Creek Road
                city: Palo Alto
                country: US
                state: CA
                postalCode: '94304'
                website: https://www.tesla.com
                timezone: US/Central
                firstName: John
                lastName: Deo
                email: john@deo.com
                phone: +1202-555-0107
                apiKey: 2c359c82-590a-4d6f-ac76-32b7a1e649ea
                business:
                  name: Tesla inc
                  email: johndeo@gmail.com
                  address: 3500 Deer Creek Road
                  city: Palo Alto
                  country: US
                  state: CA
                  postalCode: '94304'
                  website: https://www.tesla.com
                  timezone: US/Central
                social:
                  facebookUrl: https://facebook.com/groups/XXX
                  googlePlus: https://groups.google.com/d/XXX
                  linkedIn: https://www.linkedin.com/groups/XXX/profile
                  foursquare: https://foursquare.com/groups/XXX
                  twitter: https://twitter.com/XXX
                  yelp: https://yelp.com/XXX
                  instagram: https://instagram.com/XXX
                  youtube: https://youtube.com/XXX
                  pinterest: https://pinterest.com/XXX
                  blogRss: https://rss.xyz.com
                  googlePlaceId: redfdfdere
                settings:
                  allowDuplicateContact: false
                  allowDuplicateOpportunity: false
                  allowFacebookNameMerge: false
                  disableContactTimezone: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/locations/{locationId}:
    get:
      tags:
        - Location
      summary: /v1/locations/:locationId
      description: >-
        <h4>Get location by location id.</h4><strong>Authorization:</strong>
        <p>Provide your agency api key (Bearer Token). You can find it on Agency
        -> Settings -> API keys</p>
      security:
        - bearerAuth: []
      parameters:
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Location Id
          example: i2SpAtBVHSVea1sL6oah
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: i2SpAtBVHSVea1sL6oah
                name: Tesla inc
                address: 3500 Deer Creek Road
                city: Palo Alto
                country: US
                state: CA
                postalCode: '94304'
                website: https://www.tesla.com
                timezone: US/Central
                firstName: John
                lastName: Deo
                email: john@deo.com
                phone: +1202-555-0107
                apiKey: 2c359c82-590a-4d6f-ac76-32b7a1e649ea
                business:
                  name: Tesla inc
                  email: johndeo@gmail.com
                  address: 3500 Deer Creek Road
                  city: Palo Alto
                  country: US
                  state: CA
                  postalCode: '94304'
                  website: https://www.tesla.com
                  timezone: US/Central
                social:
                  facebookUrl: https://facebook.com/groups/XXX
                  googlePlus: https://groups.google.com/d/XXX
                  linkedIn: https://www.linkedin.com/groups/XXX/profile
                  foursquare: https://foursquare.com/groups/XXX
                  twitter: https://twitter.com/XXX
                  yelp: https://yelp.com/XXX
                  instagram: https://instagram.com/XXX
                  youtube: https://youtube.com/XXX
                  pinterest: https://pinterest.com/XXX
                  blogRss: https://rss.xyz.com
                  googlePlaceId: redfdfdere
                settings:
                  allowDuplicateContact: false
                  allowDuplicateOpportunity: false
                  allowFacebookNameMerge: false
                  disableContactTimezone: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    put:
      tags:
        - Location
      summary: /v1/locations/:locationId
      description: >-
        <h4>Update a Location.</h4><p>Required JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>businessName</td><td>string</td><td>ACME
        Agency</td></tr></tbody></table><p>Allowed JSON fields in the
        body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>address</td><td>string</td><td>3500
        Deer Creek Road</td></tr><tr><td>city</td><td>string</td><td>Palo
        Alto</td></tr><tr><td>state</td><td>string</td><td>CA</td></tr><tr><td>country</td><td>string</td><td>US</td></tr><tr><td>postalCode</td><td>string</td><td>94304</td></tr><tr><td>website</td><td>string</td><td>https://www.tesla.com</td></tr><tr><td>timezone</td><td>string</td><td>US/Central</td></tr><tr><td>firstName</td><td>string</td><td>John</td></tr><tr><td>lastName</td><td>string</td><td>Deno</td></tr><tr><td>email</td><td>string</td><td>johndeo@gmail.com</td></tr><tr><td>phone</td><td>string</td><td>+1202-555-0107</td></tr><tr><td>settings</td><td>object</td><td><code>{
        "allowDuplicateContact": false, "allowDuplicateOpportunity": false,
        "allowFacebookNameMerge": false, "disableContactTimezone": false
        }</code></td></tr><tr><td>twilio</td><td>object</td><td><code>{ "sid":
        "AC_XXXXXXXXXXX", "authToken": "77_XXXXXXXXXXX"
        }</code></td></tr><tr><td>mailgun</td><td>object</td><td><code>{"mailgun":
        {"apiKey": "key-XXXXXXXXXXX", "domain":
        "replies.yourdomain.com"}</code></td></tr></tbody></table><p>Twilio
        field required two field to
        setup</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>sid</td><td>string</td><td>AC_XXXXXXXXXXX
        (Twilio Account
        SID)</td></tr><tr><td>authToken</td><td>string</td><td>77_XXXXXXXXXXX
        (Twilio Auth Token)</td></tr></tbody></table><p>Mailgun field required
        two field to
        setup</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>apiKey</td><td>string</td><td>key-XXXXXXXXXXX</td><td></td></tr><tr><td>domain</td><td>string</td><td>replies.yourdomain.com</td></tr></tbody></table><p>Timezone
        field allowed options, Can grab it from the timezone list api.</p> <br
        /><h5>Authorization:</h5><p>Provide your agency api key (Bearer Token).
        You can find it on Agency -&gt; Settings -&gt; API keys</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                businessName: Tesla inc
                address: 3500 Deer Creek Road
                city: Palo Alto
                country: US
                state: CA
                postalCode: '94304'
                website: https://www.tesla.com
                timezone: US/Central
                firstName: John
                lastName: Deo
                email: john@deo.com
                phone: +1202-555-0107
                settings:
                  allowDuplicateContact: false
                  allowDuplicateOpportunity: false
                  allowFacebookNameMerge: false
                  disableContactTimezone: false
                twilio:
                  sid: AC_XXXXXXXXXXX
                  authToken: 77_XXXXXXXXXXX
                snapshot:
                  id: XXXXXXXXXXX
                  type: vertical
                mailgun:
                  apiKey: key-XXXXXXXXXXX
                  domain: replies.yourdomain.com
                social:
                  facebookUrl: https://facebook.com/groups/XXX
                  googlePlus: https://groups.google.com/d/XXX
                  linkedIn: https://www.linkedin.com/groups/XXX/profile
                  foursquare: https://foursquare.com/groups/XXX
                  twitter: https://twitter.com/XXX
                  yelp: https://yelp.com/XXX
                  instagram: https://instagram.com/XXX
                  youtube: https://youtube.com/XXX
                  pinterest: https://pinterest.com/XXX
                  blogRss: https://rss.xyz.com
                  googlePlaceId: redfdfdere
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Location Id
          example: i2SpAtBVHSVea1sL6oah
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: i2SpAtBVHSVea1sL6oah
                name: Tesla inc
                address: 3500 Deer Creek Road
                city: Palo Alto
                country: US
                state: CA
                postalCode: '94304'
                website: https://www.tesla.com
                timezone: US/Central
                firstName: John
                lastName: Deo
                email: john@deo.com
                phone: +1202-555-0107
                apiKey: 2c359c82-590a-4d6f-ac76-32b7a1e649ea
                business:
                  name: Tesla inc
                  email: johndeo@gmail.com
                  address: 3500 Deer Creek Road
                  city: Palo Alto
                  country: US
                  state: CA
                  postalCode: '94304'
                  website: https://www.tesla.com
                  timezone: US/Central
                social:
                  facebookUrl: https://facebook.com/groups/XXX
                  googlePlus: https://groups.google.com/d/XXX
                  linkedIn: https://www.linkedin.com/groups/XXX/profile
                  foursquare: https://foursquare.com/groups/XXX
                  twitter: https://twitter.com/XXX
                  yelp: https://yelp.com/XXX
                  instagram: https://instagram.com/XXX
                  youtube: https://youtube.com/XXX
                  pinterest: https://pinterest.com/XXX
                  blogRss: https://rss.xyz.com
                  googlePlaceId: redfdfdere
                settings:
                  allowDuplicateContact: false
                  allowDuplicateOpportunity: false
                  allowFacebookNameMerge: false
                  disableContactTimezone: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                firstName:
                  message: The first name field is mandatory.
                  rule: required
                lastName:
                  message: The last name field is mandatory.
                  rule: required
                email:
                  message: The email field is mandatory.
                  rule: required
                phone:
                  message: The email field is mandatory.
                  rule: required
                businessName:
                  message: The business name field is mandatory.
                  rule: required
                address:
                  message: The address field is mandatory.
                  rule: required
                city:
                  message: The city field is mandatory.
                  rule: required
                state:
                  message: The state field is mandatory.
                  rule: required
                country:
                  message: The country field is mandatory.
                  rule: required
                postalCode:
                  message: The postal code field is mandatory.
                  rule: required
    delete:
      tags:
        - Location
      summary: /v1/locations/:locationId
      description: >-
        <h4>Delete location.</h4><p>Allowed fields in the query
        parameter.</p><table role="table"><thead><tr><th>Fields</th><th>Allowed
        Options</th><th>Default
        value</th><th>Description</th></tr></thead><tbody><tr><td>deleteTwilioAccount</td><td><code>true</code>
        or <code>false</code></td><td><code>false</code></td><td>If you pass
        <code>true</code>, When deleting the subaccount. We delete Twilio
        subaccount (on Twilio side) as
        well.</td></tr></tbody></table><h5>Authorization:</h5><p>Provide your
        agency api key (Bearer Token). You can find it on Agency -&gt; Settings
        -&gt; API keys</p>
      security:
        - bearerAuth: []
      parameters:
        - name: deleteTwilioAccount
          in: query
          schema:
            type: boolean
          description: Delete Twilio Account
          example: 'false'
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Location Id
          example: i2SpAtBVHSVea1sL6oah
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Success
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                locationId:
                  message: The location id is invalid.
                  rule: invalid
  /v1/locations/{locationId}/load-snapshot/{snapshotId}:
    put:
      tags:
        - Location
      summary: /v1/locations/:locationId/load-snapshot/:snapshotId
      description: >-
        <h4>Load
        Snapshot.</h4><h5>Fields</h5><ol><li><strong>override</strong>*: We will
        allow <code>true</code> or <code>false</code>. If you want override all
        conflict assets then pass <code>true</code>. By default it
        <code>false</code>. By default it
        <code>false</code></li></ol><h5>Authorization:</h5><p>Provide your
        agency api key (Bearer Token). You can find it on Agency -&gt; Settings
        -&gt; API keys</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                override: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Location Id
          example: i2SpAtBVHSVea1sL6oah
        - name: snapshotId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Snapshot Id
          example: 5bFKHqudfotv3c1xFUuP
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: >-
                  Copying the data, we will send a notification once it's
                  completed.
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                locationId:
                  message: The location id is invalid.
                  rule: invalid
                snapshotId:
                  message: The snapshot id is invalid.
                  rule: invalid
  /v1/contacts/{contactId}/notes/:
    get:
      tags:
        - Note
      summary: /v1/contacts/:contactId/notes/
      description: >-
        <h4>Get all contact notes.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                notes:
                  - id: Lj371SHlVMyfVlMcKiuk
                    body: Loram ipsum
                    createdBy: Loram ipsum
                    createdAt: '2020-10-20T12:52:17.561Z'
                  - id: Lj371SHlVMyfVlMcKiuk
                    body: Loram ipsum
                    createdBy: Loram ipsum
                    createdAt: '2020-10-20T12:52:17.561Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    post:
      tags:
        - Note
      summary: /v1/contacts/:contactId/notes/
      description: >-
        <h4>Create Notes.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                body: lorem ipsum
                userId: GCs5KuzPqTls7vWclkEV
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: Lj371SHlVMyfVlMcKiuk
                body: Loram ipsum
                createdBy: Loram ipsum
                createdAt: '2020-10-20T12:52:17.561Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                body:
                  message: The body field is mandatory.
                  rule: required
  /v1/contacts/{contactId}/notes/{noteId}:
    get:
      tags:
        - Note
      summary: /v1/contacts/:contactId/notes/:noteId
      description: >-
        <h4>Get note by id.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
        - name: noteId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Note Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: Lj371SHlVMyfVlMcKiuk
                body: Loram ipsum
                createdBy: Loram ipsum
                createdAt: '2020-10-20T12:52:17.561Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    put:
      tags:
        - Note
      summary: /v1/contacts/:contactId/notes/:noteId
      description: >-
        <h4>Update Note.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                body: lorem ipsum
                userId: GCs5KuzPqTls7vWclkEV
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
        - name: noteId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Note Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: Lj371SHlVMyfVlMcKiuk
                body: Loram ipsum
                createdBy: Loram ipsum
                createdAt: '2020-10-20T12:52:17.561Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                body:
                  message: The body field is mandatory.
                  rule: required
    delete:
      tags:
        - Note
      summary: /v1/contacts/:contactId/notes/:noteId
      description: >-
        <h4>Delete one of Notes.</h4> <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
        - name: noteId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Note Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/pipelines/{pipelineId}/opportunities:
    get:
      tags:
        - Opportunity
      summary: /v1/pipelines/:pipelineId/opportunities
      description: >-
        <h4>Get opportunities.</h4><p><p>Allowed filter in the query</p><table>
        <thead> <tr> <th>Fields</th> <th>Types</th> <th>Example</th> <th>Allowed
        Options</th> </tr></thead> <tbody> <tr>
        <td>stageId</td><td>string</td><td>7915dedc-8f18-44d5-8bc3-77c04e994a10</td><td></td></tr><tr>
        <td>monetaryValue</td><td>number</td><td>220</td><td></td></tr><tr>
        <td>assignedTo</td><td>string</td><td>082goXVW3lIExEQPOnd3</td><td></td></tr><tr>
        <td>campaignId</td><td>string</td><td>Y2I9XM7aO1hncuSOlc9L</td><td></td></tr><tr>
        <td>startDate</td><td>number</td><td>epoch timestamp. for ex:
        <code>1598107050459</code></td><td></td></tr><tr>
        <td>endDate</td><td>number</td><td>epoch timestamp. for ex:
        <code>1614091050459</code></td><td></td></tr><tr>
        <td>query</td><td>string</td><td><code>?query=john@deo.com</code></td><td></td></tr><tr>
        <td>status</td><td>string</td><td>open</td><td> <ul>
        <li>open</li><li>won</li><li>lost</li><li>abandoned</li></ul>
        </td></tr></tbody> </table><br /><strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: startAfterId
          in: query
          schema:
            type: string
          description: Start After Id
          example: UIaE1WjAwWKdlyD7osQI
        - name: startAfter
          in: query
          schema:
            type: integer
          description: Start After
          example: '1603870249758'
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            Limit Per Page records count. will allow maximum up to 100 and
            default will be 20
          example: '20'
        - name: pipelineId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Pipeline Id
          example: bCkKGpDsyPP4peuKowkG
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                opportunities:
                  - id: 7XExm1wr8gFeZpl6rQny
                    name: First Opp
                    monetaryValue: 120
                    pipelineId: bCkKGpDsyPP4peuKowkG
                    pipelineStageId: 8b897c8f-b859-49c1-88f2-ed590708a85c
                    assignedTo: hxHGVRb1YJUscrCB8eXK
                    status: open
                    source: form
                    lastStatusChangeAt: '2020-10-29T09:39:35.472Z'
                    createdAt: '2020-10-29T09:31:30.255Z'
                    updatedAt: '2020-10-29T09:44:02.263Z'
                    contact:
                      id: byMEV0NQinDhq8ZfiOi2
                      name: John Deo
                      companyName: Tesla Inc
                      email: john@deo.com
                      phone: +1202-555-0107
                      tags:
                        - ipsum sunt
                        - ipsum mollit deserunt id veniam
                  - id: 7XExm1wr8gFeZpl6rQny
                    name: First Opp
                    monetaryValue: 120
                    pipelineId: bCkKGpDsyPP4peuKowkG
                    pipelineStageId: 8b897c8f-b859-49c1-88f2-ed590708a85c
                    assignedTo: hxHGVRb1YJUscrCB8eXK
                    status: open
                    source: form
                    lastStatusChangeAt: '2020-10-29T09:39:35.472Z'
                    createdAt: '2020-10-29T09:31:30.255Z'
                    updatedAt: '2020-10-29T09:44:02.263Z'
                    contact:
                      id: byMEV0NQinDhq8ZfiOi2
                      name: John Deo
                      companyName: Tesla Inc
                      email: john@deo.com
                      phone: +1202-555-0107
                      tags:
                        - laborum officia consequat consectetur
                        - amet ea pariatur cupidatat
                meta:
                  total: 250
                  nextPageUrl: >-
                    https://rest.gohighlevel.com/v1/pipelines/bCkKGpDsyPP4peuKowkG/opportunities?limit=1&startAfter=1603870249758&startAfterId=UIaE1WjAwWKdlyD7osQI
                  startAfterId: UIaE1WjAwWKdlyD7osQI
                  startAfter: 1603870249758
                  currentPage: 2
                  nextPage: 3
                  prevPage: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/pipelines/{pipelineId}/opportunities/{opportunityId}:
    get:
      tags:
        - Opportunity
      summary: /v1/pipelines/:pipelineId/opportunities/:opportunityId
      description: >-
        <h4>Get opportunity by id.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: pipelineId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Pipeline Id
          example: bCkKGpDsyPP4peuKowkG
        - name: opportunityId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Opportunity Id
          example: 123akv4LFn6C9frZoy3e
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 7XExm1wr8gFeZpl6rQny
                name: First Opp
                monetaryValue: 120
                pipelineId: bCkKGpDsyPP4peuKowkG
                pipelineStageId: 8b897c8f-b859-49c1-88f2-ed590708a85c
                assignedTo: hxHGVRb1YJUscrCB8eXK
                status: open
                source: form
                lastStatusChangeAt: '2020-10-29T09:39:35.472Z'
                createdAt: '2020-10-29T09:31:30.255Z'
                updatedAt: '2020-10-29T09:44:02.263Z'
                contact:
                  id: byMEV0NQinDhq8ZfiOi2
                  name: John Deo
                  companyName: Tesla Inc
                  email: john@deo.com
                  phone: +1202-555-0107
                  tags:
                    - occaecat do Lorem
                    - magna ipsum in
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    put:
      tags:
        - Opportunity
      summary: /v1/pipelines/:pipelineId/opportunities/:opportunityId
      description: >-
        <h4>Update Opportunity.</h4><p>Required JSON fields in the
        body</p><table> <thead> <tr> <th>Fields</th> <th>Types</th>
        <th>Example</th> <th>Allowed Options</th> </tr></thead> <tbody> <tr>
        <td>title</td><td>string</td><td>First Opps</td><td></td></tr><tr>
        <td>stageId</td><td>string</td><td>7915dedc-8f18-44d5-8bc3-77c04e994a10</td><td></td></tr><tr>
        <td>status</td><td>string</td><td>open</td><td> <ul>
        <li>open</li><li>won</li><li>lost</li><li>abandoned</li></ul>
        </td></tr></tbody></table><p>Allowed JSON fields in the body</p><table>
        <thead> <tr> <th>Fields</th> <th>Types</th> <th>Example</th>
        </tr></thead> <tbody> <tr>
        <td>monetaryValue</td><td>number</td><td>220</td></tr><tr>
        <td>assignedTo</td><td>string</td><td>082goXVW3lIExEQPOnd3</td></tr><tr>
        <td>contactId</td><td>string</td><td>mTkSCb1UBjb5tk4OvB69</td></tr><tr>
        <td>email</td><td>string</td><td>john@deo.com</td></tr><tr>
        <td>name</td><td>string</td><td>John Deo</td></tr><tr>
        <td>phone</td><td>string</td><td>+1202-555-0107</td></tr><tr>
        <td>tags</td><td>array</td><td><code>["tag1",
        "tag2"]</code></td></tr><tr>
        <td>companyName</td><td>string</td><td>Tesla Inc</td></tr></tbody>
        </table> <br /><strong>Authorization:</strong> <p>Provide your location
        api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: First Opp
                status: open
                stageId: 7915dedc-8f18-44d5-8bc3-77c04e994a10
                email: elon@musk.com
                phone: +1202-555-0107
                assignedTo: 082goXVW3lIExEQPOnd3
                monetaryValue: 122.22
                source: public api
                contactId: mTkSCb1UBjb5tk4OvB69
                name: Elon Musk
                companyName: Tesla
                tags:
                  - voluptate do et sed
                  - voluptate dolore Ut
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: pipelineId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Pipeline Id
          example: bCkKGpDsyPP4peuKowkG
        - name: opportunityId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Opportunity Id
          example: 123akv4LFn6C9frZoy3e
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 7XExm1wr8gFeZpl6rQny
                name: First Opp
                monetaryValue: 120
                pipelineId: bCkKGpDsyPP4peuKowkG
                pipelineStageId: 8b897c8f-b859-49c1-88f2-ed590708a85c
                assignedTo: hxHGVRb1YJUscrCB8eXK
                status: open
                source: form
                lastStatusChangeAt: '2020-10-29T09:39:35.472Z'
                createdAt: '2020-10-29T09:31:30.255Z'
                updatedAt: '2020-10-29T09:44:02.263Z'
                contact:
                  id: byMEV0NQinDhq8ZfiOi2
                  name: John Deo
                  companyName: Tesla Inc
                  email: john@deo.com
                  phone: +1202-555-0107
                  tags:
                    - occaecat do Lorem
                    - magna ipsum in
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title:
                  message: The title field is mandatory.
                  rule: required
                status:
                  message: The status field is mandatory.
                  rule: required
                stageId:
                  message: The stage id field is mandatory.
                  rule: required
                contactId or email:
                  message: The contactId or email field is mandatory.
                  rule: required
    delete:
      tags:
        - Opportunity
      summary: /v1/pipelines/:pipelineId/opportunities/:opportunityId
      description: >-
        <h4>Delete opportunity.</h4> <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: pipelineId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Pipeline Id
          example: bCkKGpDsyPP4peuKowkG
        - name: opportunityId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Opportunity Id
          example: 123akv4LFn6C9frZoy3e
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/pipelines/{pipelineId}/opportunities/:
    post:
      tags:
        - Opportunity
      summary: /v1/pipelines/:pipelineId/opportunities/
      description: >-
        <h4>Create opportunity.</h4><p>Required JSON fields in the
        body</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th><th>Allowed
        Options</th></tr></thead><tbody><tr><td>title</td><td>string</td><td>First
        Opps</td><td></td></tr><tr><td>stageId</td><td>string</td><td>7915dedc-8f18-44d5-8bc3-77c04e994a10</td><td></td></tr><tr><td>contactId
        (or email or
        phone)</td><td>string</td><td>mTkSCb1UBjb5tk4OvB69</td><td></td></tr><tr><td>email
        (or contactId or
        phone)</td><td>string</td><td>john@deo.com</td><td></td></tr><tr><td>phone
        (or contactId or
        email)</td><td>string</td><td>+1202-555-0107</td><td></td></tr><tr><td>status</td><td>string</td><td>open</td><td><ul><li>open</li><li>won</li><li>lost</li><li>abandoned</li></ul></td></tr></tbody></table><p>Allowed
        JSON fields in the
        body</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th></tr></thead><tbody><tr><td>monetaryValue</td><td>number</td><td>220</td></tr><tr><td>assignedTo</td><td>string</td><td>082goXVW3lIExEQPOnd3</td></tr><tr><td>name</td><td>string</td><td>John
        Deo</td></tr><tr><td>tags</td><td>array</td><td><code>["tag1",
        "tag2"]</code></td></tr><tr><td>companyName</td><td>string</td><td>Tesla
        Inc</td></tr></tbody></table> <br /> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: First Opp
                status: open
                stageId: 7915dedc-8f18-44d5-8bc3-77c04e994a10
                email: elon@musk.com
                phone: +1202-555-0107
                assignedTo: 082goXVW3lIExEQPOnd3
                monetaryValue: 122.22
                source: public api
                contactId: mTkSCb1UBjb5tk4OvB69
                name: Elon Musk
                companyName: Tesla
                tags:
                  - tempor ea adipisicing ut amet
                  - voluptate irure
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: pipelineId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Pipeline Id
          example: bCkKGpDsyPP4peuKowkG
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 7XExm1wr8gFeZpl6rQny
                name: First Opp
                monetaryValue: 120
                pipelineId: bCkKGpDsyPP4peuKowkG
                pipelineStageId: 8b897c8f-b859-49c1-88f2-ed590708a85c
                assignedTo: hxHGVRb1YJUscrCB8eXK
                status: open
                source: form
                lastStatusChangeAt: '2020-10-29T09:39:35.472Z'
                createdAt: '2020-10-29T09:31:30.255Z'
                updatedAt: '2020-10-29T09:44:02.263Z'
                contact:
                  id: byMEV0NQinDhq8ZfiOi2
                  name: John Deo
                  companyName: Tesla Inc
                  email: john@deo.com
                  phone: +1202-555-0107
                  tags:
                    - occaecat do Lorem
                    - magna ipsum in
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title:
                  message: The title field is mandatory.
                  rule: required
                status:
                  message: The status field is mandatory.
                  rule: required
                stageId:
                  message: The stage id field is mandatory.
                  rule: required
                contactId or email:
                  message: The contactId or email field is mandatory.
                  rule: required
  /v1/pipelines/{pipelineId}/opportunities/{opportunityId}/status:
    put:
      tags:
        - Opportunity
      summary: /v1/pipelines/:pipelineId/opportunities/:opportunityId/status
      description: >-
        <h4>Update opportunity status and stage.</h4>
        <strong>Authorization:</strong> <p>Provide your location api key (Bearer
        Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: open
                stageId: 7915dedc-8f18-44d5-8bc3-77c04e994a10
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: pipelineId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Pipeline Id
          example: bCkKGpDsyPP4peuKowkG
        - name: opportunityId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Opportunity Id
          example: 123akv4LFn6C9frZoy3e
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status:
                  message: The status field is invalid.
                  rule: invalid
                stageId:
                  message: The stage id field is invalid.
                  rule: invalid
  /v1/pipelines/:
    get:
      tags:
        - Pipeline
      summary: /v1/pipelines/
      description: >-
        <h4>Get Pipelines.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                pipelines:
                  - id: bCkKGpDsyPP4peuKowkG
                    name: First Pipeline
                    stages:
                      - id: >-
                          bCkKGp8b897c8f-b859-49c1-88f2-ed590708a85csyPP4peuKowkG
                        name: First Stage
                      - id: >-
                          bCkKGp8b897c8f-b859-49c1-88f2-ed590708a85csyPP4peuKowkG
                        name: First Stage
                  - id: bCkKGpDsyPP4peuKowkG
                    name: First Pipeline
                    stages:
                      - id: >-
                          bCkKGp8b897c8f-b859-49c1-88f2-ed590708a85csyPP4peuKowkG
                        name: First Stage
                      - id: >-
                          bCkKGp8b897c8f-b859-49c1-88f2-ed590708a85csyPP4peuKowkG
                        name: First Stage
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/contacts/{contactId}/tasks/:
    get:
      tags:
        - Task
      summary: /v1/contacts/:contactId/tasks/
      description: >-
        <h4>Get all contact tasks.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tasks:
                  - id: Lj371SHlVMyfVlMcKiuk
                    title: Loram ipsum
                    description: Loram ipsum
                    assignedTo: hxHGVRb1YJUscrCB8eXK
                    dueDate: '2020-10-25T11:00:00Z'
                    isCompleted: false
                  - id: Lj371SHlVMyfVlMcKiuk
                    title: Loram ipsum
                    description: Loram ipsum
                    assignedTo: hxHGVRb1YJUscrCB8eXK
                    dueDate: '2020-10-25T11:00:00Z'
                    isCompleted: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    post:
      tags:
        - Task
      summary: /v1/contacts/:contactId/tasks/
      description: >-
        <h4>Create Tasks.</h4> <p><strong>Status:</strong> (optional) Field have
        following options.</p><ul><li>completed</li><li>incompleted
        (default)</li></ul><strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: First Task
                dueDate: '2020-10-25T11:00:00Z'
                description: loram ipsum
                assignedTo: hxHGVRb1YJUscrCB8eXK
                status: incompleted
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: Lj371SHlVMyfVlMcKiuk
                title: Loram ipsum
                description: Loram ipsum
                assignedTo: hxHGVRb1YJUscrCB8eXK
                dueDate: '2020-10-25T11:00:00Z'
                isCompleted: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title:
                  message: The title field is mandatory.
                  rule: required
                dueDate:
                  message: The due date field is mandatory.
                  rule: required
  /v1/contacts/{contactId}/tasks/{taskId}:
    get:
      tags:
        - Task
      summary: /v1/contacts/:contactId/tasks/:taskId
      description: >-
        <h4>Get task by id.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
        - name: taskId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Task Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: Lj371SHlVMyfVlMcKiuk
                title: Loram ipsum
                description: Loram ipsum
                assignedTo: hxHGVRb1YJUscrCB8eXK
                dueDate: '2020-10-25T11:00:00Z'
                isCompleted: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    put:
      tags:
        - Task
      summary: /v1/contacts/:contactId/tasks/:taskId
      description: >-
        <h4>Update Task.</h4><p><p><strong>Status:</strong> (optional) Field
        have following options.</p><ul><li>completed</li><li>incompleted
        (default)</li></ul><strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: First Task
                dueDate: '2020-10-25T11:00:00Z'
                description: loram ipsum
                assignedTo: hxHGVRb1YJUscrCB8eXK
                status: incompleted
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
        - name: taskId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Task Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: Lj371SHlVMyfVlMcKiuk
                title: Loram ipsum
                description: Loram ipsum
                assignedTo: hxHGVRb1YJUscrCB8eXK
                dueDate: '2020-10-25T11:00:00Z'
                isCompleted: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title:
                  message: The title field is mandatory.
                  rule: required
                dueDate:
                  message: The due date field is mandatory.
                  rule: required
    delete:
      tags:
        - Task
      summary: /v1/contacts/:contactId/tasks/:taskId
      description: >-
        <h4>Delete one of Task.</h4> <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
        - name: taskId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Task Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/contacts/{contactId}/tasks/{taskId}/status:
    put:
      tags:
        - Task
      summary: /v1/contacts/:contactId/tasks/:taskId/status
      description: >-
        <h4>Update Task status.</h4><p><strong>Status:</strong> Field have
        following
        option</p><ul><li>completed</li><li>incompleted</li></ul><strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: completed
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Contact Id
          example: sx6wyHhbFdRXh302LLNR
        - name: taskId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Task Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: Lj371SHlVMyfVlMcKiuk
                title: Loram ipsum
                description: Loram ipsum
                assignedTo: hxHGVRb1YJUscrCB8eXK
                dueDate: '2020-10-25T11:00:00Z'
                isCompleted: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title:
                  message: The title field is mandatory.
                  rule: required
                dueDate:
                  message: The due date field is mandatory.
                  rule: required
  /v1/tags/:
    get:
      tags:
        - Tag
      summary: /v1/tags/
      description: >-
        <h4>Get Tags.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tags:
                  - id: kAllGzwHkSVZC11GYKF9
                    name: Hello
                  - id: kAllGzwHkSVZC11GYKF9
                    name: Hello
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    post:
      tags:
        - Tag
      summary: /v1/tags/
      description: >-
        <h4>Create Tag.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: first tag
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: kAllGzwHkSVZC11GYKF9
                name: Hello
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name:
                  message: The name field is mandatory.
                  rule: required
  /v1/tags/{tagId}:
    get:
      tags:
        - Tag
      summary: /v1/tags/:tagId
      description: >-
        <h4>Get tag by id.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: tagId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Tag Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: kAllGzwHkSVZC11GYKF9
                name: Hello
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    put:
      tags:
        - Tag
      summary: /v1/tags/:tagId
      description: >-
        <h4>Update tag.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: first tag
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: tagId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Tag Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: kAllGzwHkSVZC11GYKF9
                name: Hello
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name:
                  message: The name field is mandatory.
                  rule: required
    delete:
      tags:
        - Tag
      summary: /v1/tags/:tagId
      description: >-
        <h4>Delete one of tag.</h4> <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: tagId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Custom Value Id
          example: ocQHyuzHvysMo5N5VsXc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                customValueId:
                  message: The custom field id is invalid.
                  rule: invalid
  /v1/timezones/:
    get:
      tags:
        - Timezone
      summary: /v1/timezones/
      description: >-
        <h4>Get timezone list.</h4> <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                timezones:
                  - UTC
                  - UTC
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/links/:
    get:
      tags:
        - Trigger Links
      summary: /v1/links/
      description: >-
        <h4>Get Links.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                links:
                  - id: ikMFj5x3rrKOQgu0k8y1
                    name: Trigger Link
                    redirectTo: https://www.google.com/
                    fieldKey: '{{trigger_link.ClK3HFY3WH9L5McNwyy1}}'
                    locationId: Lx1EI6YIgQYMQi0ytFXv
                  - id: ikMFj5x3rrKOQgu0k8y1
                    name: Trigger Link
                    redirectTo: https://www.google.com/
                    fieldKey: '{{trigger_link.ClK3HFY3WH9L5McNwyy1}}'
                    locationId: Lx1EI6YIgQYMQi0ytFXv
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    post:
      tags:
        - Trigger Links
      summary: /v1/links/
      description: >-
        <h4>Create trigger link.</h4> <strong>Authorization:</strong> <p>Provide
        your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: first tag
                redirectTo: https://www.google.com/
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ikMFj5x3rrKOQgu0k8y1
                name: Trigger Link
                redirectTo: https://www.google.com/
                fieldKey: '{{trigger_link.ClK3HFY3WH9L5McNwyy1}}'
                locationId: Lx1EI6YIgQYMQi0ytFXv
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name:
                  message: The name field is mandatory.
                  rule: required
                redirectTo:
                  message: The redirect to field is mandatory.
                  rule: required
  /v1/links/{linkId}:
    put:
      tags:
        - Trigger Links
      summary: /v1/links/:linkId
      description: >-
        <h4>Update trigger links.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: first tag
                redirectTo: https://www.google.com/
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: linkId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Link Id
          example: ClK3HFY3WH9L5McNwyy1
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ikMFj5x3rrKOQgu0k8y1
                name: Trigger Link
                redirectTo: https://www.google.com/
                fieldKey: '{{trigger_link.ClK3HFY3WH9L5McNwyy1}}'
                locationId: Lx1EI6YIgQYMQi0ytFXv
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                linkId:
                  message: The link id is invalid.
                  rule: invalid
    delete:
      tags:
        - Trigger Links
      summary: /v1/links/:linkId
      description: >-
        <h4>Delete one of trigger links.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: linkId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Link Id Id
          example: ClK3HFY3WH9L5McNwyy1
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                linkId:
                  message: The link id is invalid.
                  rule: invalid
  /v1/users/:
    get:
      tags:
        - User
      summary: /v1/users/
      description: >-
        <h4>Get all agency users.</h4> <strong>Authorization:</strong>
        <p>Provide your agency api key (Bearer Token). You can find it on Agency
        -> Settings -> API keys</p>
      security:
        - bearerAuth: []
      parameters:
        - name: locationId
          in: query
          schema:
            type: string
          description: (Optional) Filter users by location.
          example: i2SpAtBVHSVea1sL6oah
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                users:
                  - id: 3g3ltlwEJBoXArLowV3e
                    firstName: John
                    lastName: Deo
                    email: john@deo.com
                    roles:
                      type: agency
                      role: admin
                      locationIds:
                        - C2QujeCh8ZnC7al2InWR
                    permissions:
                      campaignsEnabled: true
                      campaignsReadOnly: false
                      contactsEnabled: true
                      workflowsEnabled: true
                      triggersEnabled: true
                      funnelsEnabled: true
                      websitesEnabled: false
                      opportunitiesEnabled: true
                      dashboardStatsEnabled: true
                      bulkRequestsEnabled: true
                      appointmentsEnabled: true
                      reviewsEnabled: true
                      onlineListingsEnabled: true
                      phoneCallEnabled: true
                      conversationsEnabled: true
                      assignedDataOnly: false
                      adwordsReportingEnabled: false
                      membershipEnabled: false
                      facebookAdsReportingEnabled: false
                      attributionsReportingEnabled: false
                      settingsEnabled: true
                      tagsEnabled: true
                      leadValueEnabled: true
                      marketingEnabled: true
                  - id: 3g3ltlwEJBoXArLowV3e
                    firstName: John
                    lastName: Deo
                    email: john@deo.com
                    roles:
                      type: agency
                      role: admin
                      locationIds:
                        - C2QujeCh8ZnC7al2InWR
                    permissions:
                      campaignsEnabled: true
                      campaignsReadOnly: false
                      contactsEnabled: true
                      workflowsEnabled: true
                      triggersEnabled: true
                      funnelsEnabled: true
                      websitesEnabled: false
                      opportunitiesEnabled: true
                      dashboardStatsEnabled: true
                      bulkRequestsEnabled: true
                      appointmentsEnabled: true
                      reviewsEnabled: true
                      onlineListingsEnabled: true
                      phoneCallEnabled: true
                      conversationsEnabled: true
                      assignedDataOnly: false
                      adwordsReportingEnabled: false
                      membershipEnabled: false
                      facebookAdsReportingEnabled: false
                      attributionsReportingEnabled: false
                      settingsEnabled: true
                      tagsEnabled: true
                      leadValueEnabled: true
                      marketingEnabled: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    post:
      tags:
        - User
      summary: /v1/users/
      description: >-
        <h4>Create a User.</h4><p>Small description for the field allow
        options.<p><strong>type</strong> fields will allow these
        options:</p><ul><li>account</li><li>agency</li></ul></p><p><strong>role</strong>
        fields will allow these
        options:</p><ul><li>admin</li><li>user</li></ul></p><p><strong>locationIds</strong>
        fields will allow valid locations id of the
        agency.</p><strong>Authorization:</strong> <p>Provide your agency api
        key (Bearer Token). You can find it on Agency -> Settings -> API
        keys</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: John
                lastName: Deo
                email: john@deo.com
                password: '*******'
                type: account
                role: admin
                locationIds:
                  - C2QujeCh8ZnC7al2InWR
                permissions:
                  campaignsEnabled: true
                  campaignsReadOnly: false
                  contactsEnabled: true
                  workflowsEnabled: true
                  triggersEnabled: true
                  funnelsEnabled: true
                  websitesEnabled: false
                  opportunitiesEnabled: true
                  dashboardStatsEnabled: true
                  bulkRequestsEnabled: true
                  appointmentsEnabled: true
                  reviewsEnabled: true
                  onlineListingsEnabled: true
                  phoneCallEnabled: true
                  conversationsEnabled: true
                  assignedDataOnly: false
                  adwordsReportingEnabled: false
                  membershipEnabled: false
                  facebookAdsReportingEnabled: false
                  attributionsReportingEnabled: false
                  settingsEnabled: true
                  tagsEnabled: true
                  leadValueEnabled: true
                  marketingEnabled: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 3g3ltlwEJBoXArLowV3e
                firstName: John
                lastName: Deo
                email: john@deo.com
                roles:
                  type: agency
                  role: admin
                  locationIds:
                    - C2QujeCh8ZnC7al2InWR
                permissions:
                  campaignsEnabled: true
                  campaignsReadOnly: false
                  contactsEnabled: true
                  workflowsEnabled: true
                  triggersEnabled: true
                  funnelsEnabled: true
                  websitesEnabled: false
                  opportunitiesEnabled: true
                  dashboardStatsEnabled: true
                  bulkRequestsEnabled: true
                  appointmentsEnabled: true
                  reviewsEnabled: true
                  onlineListingsEnabled: true
                  phoneCallEnabled: true
                  conversationsEnabled: true
                  assignedDataOnly: false
                  adwordsReportingEnabled: false
                  membershipEnabled: false
                  facebookAdsReportingEnabled: false
                  attributionsReportingEnabled: false
                  settingsEnabled: true
                  tagsEnabled: true
                  leadValueEnabled: true
                  marketingEnabled: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                firstName:
                  message: The first name field is mandatory.
                  rule: required
                lastName:
                  message: The last name field is mandatory.
                  rule: required
                email:
                  message: The email field is mandatory.
                  rule: required
                type:
                  message: The type is mandatory.
                  rule: required
                role:
                  message: The role is mandatory.
                  rule: required
                locationIds:
                  message: The location ide must be a array.
                  rule: required
                permissions:
                  message: >-
                    Ther permissions field every key must contains only true or
                    false.
                  rule: required
  /v1/users/location:
    get:
      tags:
        - User
      summary: /v1/users/location
      description: >-
        <h4>Get user by location.</h4>  <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                users:
                  - id: 3g3ltlwEJBoXArLowV3e
                    firstName: John
                    lastName: Deo
                    email: john@deo.com
                    roles:
                      type: agency
                      role: admin
                      locationIds:
                        - C2QujeCh8ZnC7al2InWR
                    permissions:
                      campaignsEnabled: true
                      campaignsReadOnly: false
                      contactsEnabled: true
                      workflowsEnabled: true
                      triggersEnabled: true
                      funnelsEnabled: true
                      websitesEnabled: false
                      opportunitiesEnabled: true
                      dashboardStatsEnabled: true
                      bulkRequestsEnabled: true
                      appointmentsEnabled: true
                      reviewsEnabled: true
                      onlineListingsEnabled: true
                      phoneCallEnabled: true
                      conversationsEnabled: true
                      assignedDataOnly: false
                      adwordsReportingEnabled: false
                      membershipEnabled: false
                      facebookAdsReportingEnabled: false
                      attributionsReportingEnabled: false
                      settingsEnabled: true
                      tagsEnabled: true
                      leadValueEnabled: true
                      marketingEnabled: true
                  - id: 3g3ltlwEJBoXArLowV3e
                    firstName: John
                    lastName: Deo
                    email: john@deo.com
                    roles:
                      type: agency
                      role: admin
                      locationIds:
                        - C2QujeCh8ZnC7al2InWR
                    permissions:
                      campaignsEnabled: true
                      campaignsReadOnly: false
                      contactsEnabled: true
                      workflowsEnabled: true
                      triggersEnabled: true
                      funnelsEnabled: true
                      websitesEnabled: false
                      opportunitiesEnabled: true
                      dashboardStatsEnabled: true
                      bulkRequestsEnabled: true
                      appointmentsEnabled: true
                      reviewsEnabled: true
                      onlineListingsEnabled: true
                      phoneCallEnabled: true
                      conversationsEnabled: true
                      assignedDataOnly: false
                      adwordsReportingEnabled: false
                      membershipEnabled: false
                      facebookAdsReportingEnabled: false
                      attributionsReportingEnabled: false
                      settingsEnabled: true
                      tagsEnabled: true
                      leadValueEnabled: true
                      marketingEnabled: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/users/lookup:
    get:
      tags:
        - User
      summary: /v1/users/lookup
      description: >-
        <h4>Find user by email.</h4> <strong>Authorization:</strong> <p>Provide
        your agency api key (Bearer Token). You can find it on Agency ->
        Settings -> API keys</p>
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: query
          schema:
            type: string
          description: (Required) Email
          example: hello@google.com
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 3g3ltlwEJBoXArLowV3e
                firstName: John
                lastName: Deo
                email: john@deo.com
                roles:
                  type: agency
                  role: admin
                  locationIds:
                    - C2QujeCh8ZnC7al2InWR
                permissions:
                  campaignsEnabled: true
                  campaignsReadOnly: false
                  contactsEnabled: true
                  workflowsEnabled: true
                  triggersEnabled: true
                  funnelsEnabled: true
                  websitesEnabled: false
                  opportunitiesEnabled: true
                  dashboardStatsEnabled: true
                  bulkRequestsEnabled: true
                  appointmentsEnabled: true
                  reviewsEnabled: true
                  onlineListingsEnabled: true
                  phoneCallEnabled: true
                  conversationsEnabled: true
                  assignedDataOnly: false
                  adwordsReportingEnabled: false
                  membershipEnabled: false
                  facebookAdsReportingEnabled: false
                  attributionsReportingEnabled: false
                  settingsEnabled: true
                  tagsEnabled: true
                  leadValueEnabled: true
                  marketingEnabled: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/users/{userId}:
    get:
      tags:
        - User
      summary: /v1/users/:userId
      description: >-
        <h4>Get agency by user id.</h4> <strong>Authorization:</strong>
        <p>Provide your agency api key (Bearer Token). You can find it on Agency
        -> Settings -> API keys</p>
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) User Id
          example: 082goXVW3lIExEQPOnd3
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 3g3ltlwEJBoXArLowV3e
                firstName: John
                lastName: Deo
                email: john@deo.com
                roles:
                  type: agency
                  role: admin
                  locationIds:
                    - C2QujeCh8ZnC7al2InWR
                permissions:
                  campaignsEnabled: true
                  campaignsReadOnly: false
                  contactsEnabled: true
                  workflowsEnabled: true
                  triggersEnabled: true
                  funnelsEnabled: true
                  websitesEnabled: false
                  opportunitiesEnabled: true
                  dashboardStatsEnabled: true
                  bulkRequestsEnabled: true
                  appointmentsEnabled: true
                  reviewsEnabled: true
                  onlineListingsEnabled: true
                  phoneCallEnabled: true
                  conversationsEnabled: true
                  assignedDataOnly: false
                  adwordsReportingEnabled: false
                  membershipEnabled: false
                  facebookAdsReportingEnabled: false
                  attributionsReportingEnabled: false
                  settingsEnabled: true
                  tagsEnabled: true
                  leadValueEnabled: true
                  marketingEnabled: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
    put:
      tags:
        - User
      summary: /v1/users/:userId
      description: >-
        <h4>Update a User.</h4><p>Small description for the field allow
        options.<p><strong>type</strong> fields will allow these
        options:</p><ul><li>account</li><li>agency</li></ul></p><p><strong>role</strong>
        fields will allow these
        options:</p><ul><li>admin</li><li>user</li></ul></p><p><strong>locationIds</strong>
        fields will allow valid locations id of the
        agency.</p><strong>Authorization:</strong> <p>Provide your agency api
        key (Bearer Token). You can find it on Agency -> Settings -> API
        keys</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: John
                lastName: Deo
                email: john@deo.com
                password: '*******'
                type: account
                role: admin
                locationIds:
                  - C2QujeCh8ZnC7al2InWR
                permissions:
                  campaignsEnabled: true
                  campaignsReadOnly: false
                  contactsEnabled: true
                  workflowsEnabled: true
                  triggersEnabled: true
                  funnelsEnabled: true
                  websitesEnabled: false
                  opportunitiesEnabled: true
                  dashboardStatsEnabled: true
                  bulkRequestsEnabled: true
                  appointmentsEnabled: true
                  reviewsEnabled: true
                  onlineListingsEnabled: true
                  phoneCallEnabled: true
                  conversationsEnabled: true
                  assignedDataOnly: false
                  adwordsReportingEnabled: false
                  membershipEnabled: false
                  facebookAdsReportingEnabled: false
                  attributionsReportingEnabled: false
                  settingsEnabled: true
                  tagsEnabled: true
                  leadValueEnabled: true
                  marketingEnabled: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) User Id
          example: 082goXVW3lIExEQPOnd3
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 3g3ltlwEJBoXArLowV3e
                firstName: John
                lastName: Deo
                email: john@deo.com
                roles:
                  type: agency
                  role: admin
                  locationIds:
                    - C2QujeCh8ZnC7al2InWR
                permissions:
                  campaignsEnabled: true
                  campaignsReadOnly: false
                  contactsEnabled: true
                  workflowsEnabled: true
                  triggersEnabled: true
                  funnelsEnabled: true
                  websitesEnabled: false
                  opportunitiesEnabled: true
                  dashboardStatsEnabled: true
                  bulkRequestsEnabled: true
                  appointmentsEnabled: true
                  reviewsEnabled: true
                  onlineListingsEnabled: true
                  phoneCallEnabled: true
                  conversationsEnabled: true
                  assignedDataOnly: false
                  adwordsReportingEnabled: false
                  membershipEnabled: false
                  facebookAdsReportingEnabled: false
                  attributionsReportingEnabled: false
                  settingsEnabled: true
                  tagsEnabled: true
                  leadValueEnabled: true
                  marketingEnabled: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                firstName:
                  message: The first name field is mandatory.
                  rule: required
                lastName:
                  message: The last name field is mandatory.
                  rule: required
                email:
                  message: The email field is mandatory.
                  rule: required
                type:
                  message: The type is mandatory.
                  rule: required
                role:
                  message: The role is mandatory.
                  rule: required
                locationIds:
                  message: The location ide must be a array.
                  rule: required
                permissions:
                  message: >-
                    Ther permissions field every key must contains only true or
                    false.
                  rule: required
    delete:
      tags:
        - User
      summary: /v1/users/:userId
      description: ' Delete one of user.<strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>'
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) User Id
          example: 082goXVW3lIExEQPOnd3
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/saas/locations:
    get:
      tags:
        - Saas
      summary: /v1/saas/locations
      description: >-
        <h4>Get saas locations.</h4> <strong>Authorization:</strong> <p>Provide
        your agency api key (Bearer Token). You can find it on Agency ->
        Settings -> API keys</p>
      security:
        - bearerAuth: []
      parameters:
        - name: customerId
          in: query
          schema:
            type: string
          description: Customer Id
          example: cus_xxxxxxxxxx
        - name: subscriptionId
          in: query
          schema:
            type: string
          description: Subscription Id (optional)
          example: sub_xxxxxxxxxxxx
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                locationIds:
                  - F6V8F8Nxxxxxxxx
                  - F6V8F8Nxxxxxxxx
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                customerId:
                  message: The customerId field is mandatory.
                  rule: requiredWithout
                subscriptionId:
                  message: The subscriptionId field is mandatory.
                  rule: requiredWithout
  /v1/saas/update-saas-subscription/{locationId}:
    put:
      tags:
        - Saas
      summary: /v1/saas/update-saas-subscription/:locationId
      description: >-
        <h4>Update saas subscription.</h4> <strong>Authorization:</strong>
        <p>Provide your agency api key (Bearer Token). You can find it on Agency
        -> Settings -> API keys</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                customerId: cus_KXxx1xxxx
                subscriptionId: sub_1K9Rksxxxxx
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Location Id
          example: KXD1dw233GU1Zrvyp
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                locationIds:
                  - F6V8F8Nxxxxxxxx
                  - F6V8F8Nxxxxxxxx
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                customerId:
                  message: The customerId field is mandatory.
                  rule: requiredWithout
                subscriptionId:
                  message: The subscriptionId field is mandatory.
                  rule: requiredWithout
  /v1/snapshots/:
    get:
      tags:
        - Snapshot
      summary: /v1/snapshots/
      description: >-
        <h4>Get all snapshots.</h4> <strong>Authorization:</strong> <p>Provide
        your agency api key (Bearer Token). You can find it on Agency ->
        Settings -> API keys</p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                snapshots:
                  - id: 1eM2UgkfaECOYyUdCo9P
                    name: Martial Arts Snapshot
                    type: vertical
                  - id: 1eM2UgkfaECOYyUdCo9P
                    name: Martial Arts Snapshot
                    type: vertical
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/surveys/:
    get:
      tags:
        - Survey
      summary: /v1/surveys/
      description: >-
        <h4>Get Surveys.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                surveys:
                  - id: 8qS1AwSo1k0536WJu9kk
                    name: Survey 1
                  - id: 8qS1AwSo1k0536WJu9kk
                    name: Survey 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/surveys/submissions:
    get:
      tags:
        - Survey
      summary: /v1/surveys/submissions
      description: >-
        <h4>Get survey submissions.</h4> <strong>Authorization:</strong>
        <p>Provide your location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          description: Page No. By default it will be 1
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            Limit Per Page records count. will allow maximum up to 100 and
            default will be 20
          example: '20'
        - name: surveyId
          in: query
          schema:
            type: string
          description: Filter submission by survey id
          example: jjusM6EOngDExnbo2DbU
        - name: q
          in: query
          schema:
            type: string
          description: Filter by contactId, name, email or phone no.
          example: john@deo.com
        - name: startAt
          in: query
          schema:
            type: string
          description: >-
            Get submission by starting of this date. By default it will be same
            date of last month.
          example: '2020-11-14'
        - name: endAt
          in: query
          schema:
            type: string
          description: >-
            Get submission by ending of this date. By default it will be current
            date.
          example: '2020-12-14'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                submissions:
                  - id: be759b9a-c3ec-4b29-ba07-fc3c89c77673
                    contactId: 9NkT25Vor1v4aQatFsv2
                    __submissions_other_field__: john@deo.com
                    __custom_field_id__: '20'
                    createdAt: '2020-11-01T18:02:21.000Z'
                    surveyId: jjusM6EOngDExnbo2DbU
                    pageDetails:
                      url: https://www.gohighlevel.com/
                      source: Social Media
                      referrer: http://m.facebook.com
                      fbclid: >-
                        IwAR1JoTTltt3EKJE3O-MrQij_lTeA6BKGTy8M2wKepSzs4oUbTYhL2Lns18w
                  - id: be759b9a-c3ec-4b29-ba07-fc3c89c77673
                    contactId: 9NkT25Vor1v4aQatFsv2
                    __submissions_other_field__: john@deo.com
                    __custom_field_id__: '20'
                    createdAt: '2020-11-01T18:02:21.000Z'
                    surveyId: jjusM6EOngDExnbo2DbU
                    pageDetails:
                      url: https://www.gohighlevel.com/
                      source: Social Media
                      referrer: http://m.facebook.com
                      fbclid: >-
                        IwAR1JoTTltt3EKJE3O-MrQij_lTeA6BKGTy8M2wKepSzs4oUbTYhL2Lns18w
                meta:
                  total: 250
                  currentPage: 2
                  nextPage: 3
                  prevPage: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized
  /v1/workflows/:
    get:
      tags:
        - Workflow
      summary: /v1/workflows/
      description: >-
        <h4>Get Workflow.</h4> <strong>Authorization:</strong> <p>Provide your
        location api key (Bearer Token). <a
        href="https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings"
        target="_blank">You can find here</a></p>
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                workflow:
                  - id: 78559bb3-b920-461e-b010-7b2a2816d2a9
                    name: First Workflow
                    status: draft
                    version: 2
                    createdAt: '2021-05-26T11:33:49.000Z'
                    updatedAt: '2021-05-26T11:33:49.000Z'
                  - id: 78559bb3-b920-461e-b010-7b2a2816d2a9
                    name: First Workflow
                    status: draft
                    version: 2
                    createdAt: '2021-05-26T11:33:49.000Z'
                    updatedAt: '2021-05-26T11:33:49.000Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                msg: Unauthorized

