{
	"components": {
		"securitySchemes": {
			"bearer": {
				"name": "Authorization",
				"scheme": "bearer",
				"type": "http"
			}
		}
	},
	"info": {
		"description": "> API v1 is End-of-Life and is no longer maintained. \n  \n> Please use the v2 API - [https://highlevel.stoplight.io/docs/integrations/0443d7d1a4bd0-api-2-0-overview](https://highlevel.stoplight.io/docs/integrations/0443d7d1a4bd0-api-2-0-overview) \n  \n> If you're using API v1 and encountering difficulties with the transition to API v2, please share your feedback with us at [https://ideas.gohighlevel.com/apis](https://ideas.gohighlevel.com/apis) \n  \n> For any queries email us at [support@gohighlevel.com](https://mailto:support@gohighlevel.com) \n  \n\nWelcome\n\nWelcome to the GoHighLevel Developer Documentation Portal. This is documentation for public APIs provide by us which you can use use to automate some process or build any custom integration.In order to use this APIs you will need API Keys (Location/Agency).\n\n1. Agency API Key\n    \n\n- You can get your location API key from agency setting -> API Key -> Agency API Keys\n    \n- This key is required to manage the agency level objects like sub accounts, users.\n    \n\n2\\. Location API Key\n\n- You can get your location API key from sub account -> setting -> Business Info -> API Key\n    \n- This will be used for all the APIs manage all the objects which is part of sub accounts (contacts, appointments, opportunities etc.)\n    \n\n**Important Announcement for API Rate Limit**\n\n1. For Burst Requests - 100/10 seconds\n    \n2. For Daily - 200,000/Day",
		"title": "GoHighLevel API V1.1.20",
		"version": "1.0.0"
	},
	"openapi": "3.0.0",
	"paths": {
		"/v1/appointments/": {
			"get": {
				"description": "<h4>Get all booked events.</h4> <p>Required fields in the query</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th></tr></thead><tbody><tr><td>startDate</td><td>integer</td><td>epoch timestamp. for ex: <code>1548898600000</code></td></tr><tr><td>endDate</td><td>integer</td><td>epoch timestamp. for ex: <code>1601490599999</code></td></tr><tr><td>userId(or calendarId or teamId)</td><td>string</td><td>082goXVW3lIExEQPOnd3</td></tr><tr><td>calendarId(or userId or teamId)</td><td>string</td><td>0nU7uKSrtT2RVM1KknuF</td></tr><tr><td>teamId(or userId or calendarId)</td><td>string</td><td>O4qa8K1M6xA4oPXu1b8O</td></tr></tbody></table><p>Allowed field in the query</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th></tr></thead><tbody><tr><td>includeAll</td><td>boolean</td><td>Include contact and more data. for ex: <code>true</code></td></tr></tbody></table> <br /> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) epoch timestamp",
						"example": "1548898600000",
						"in": "query",
						"name": "startDate",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "(Required) epoch timestamp",
						"example": "1601490599999",
						"in": "query",
						"name": "endDate",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "User Id",
						"example": "082goXVW3lIExEQPOnd3",
						"in": "query",
						"name": "userId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Calendar Id",
						"example": "0nU7uKSrtT2RVM1KknuF",
						"in": "query",
						"name": "calendarId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Team Id",
						"example": "O4qa8K1M6xA4oPXu1b8O",
						"in": "query",
						"name": "teamId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Include contact and more data.",
						"example": "true",
						"in": "query",
						"name": "includeAll",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"appointments": [
										{
											"appoinmentStatus": "confirmed",
											"calendarId": "9qFx5qCKr3jIdBw0DiqB",
											"calendarProviderId": "0nU7uKSrtT2RVM1KknuF",
											"calendarServiceId": "CVokAlI8fgw4WYWoCtQz",
											"contact": {
												"__moreField__": "id ex nulla",
												"country": "DE",
												"customField": [
													{
														"id": "MgobCB14YMVKuE4Ka8p1",
														"value": "tempor in ut"
													},
													{
														"id": "MgobCB14YMVKuE4Ka8p1",
														"value": "Duis"
													}
												],
												"email": "JohnDeo@gmail.com",
												"emailLowerCase": "johndeo@gmail.com",
												"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
												"id": "ocQHyuzHvysMo5N5VsXc",
												"locationId": "C2QujeCh8ZnC7al2InWR",
												"tags": ["nulla", "minim est"],
												"timezone": "Asia/Calcutta"
											},
											"contactId": "v1kbP2GBSZq6yzRkh7KT",
											"endTime": "2020-07-22T16:30:00+05:30",
											"id": "EaALh02zfPo8VB3JOnpq",
											"isRecurring": false,
											"locationId": "C2QujeCh8ZnC7al2InWR",
											"selectedTimezone": "Asia/Calcutta",
											"startTime": "2020-07-22T16:00:00+05:30",
											"status": "booked",
											"title": "Calendar Standup",
											"userId": "GCs5KuzPqTls7vWclkEV"
										},
										{
											"appoinmentStatus": "confirmed",
											"calendarId": "9qFx5qCKr3jIdBw0DiqB",
											"calendarProviderId": "0nU7uKSrtT2RVM1KknuF",
											"calendarServiceId": "CVokAlI8fgw4WYWoCtQz",
											"contact": {
												"__moreField__": "no",
												"country": "DE",
												"customField": [
													{
														"id": "MgobCB14YMVKuE4Ka8p1",
														"value": "adipisicing eu"
													},
													{
														"id": "MgobCB14YMVKuE4Ka8p1",
														"value": "nostrud"
													}
												],
												"email": "JohnDeo@gmail.com",
												"emailLowerCase": "johndeo@gmail.com",
												"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
												"id": "ocQHyuzHvysMo5N5VsXc",
												"locationId": "C2QujeCh8ZnC7al2InWR",
												"tags": ["in voluptate", "id culpa sit ad dolore"],
												"timezone": "Asia/Calcutta"
											},
											"contactId": "v1kbP2GBSZq6yzRkh7KT",
											"endTime": "2020-07-22T16:30:00+05:30",
											"id": "EaALh02zfPo8VB3JOnpq",
											"isRecurring": false,
											"locationId": "C2QujeCh8ZnC7al2InWR",
											"selectedTimezone": "Asia/Calcutta",
											"startTime": "2020-07-22T16:00:00+05:30",
											"status": "booked",
											"title": "Calendar Standup",
											"userId": "GCs5KuzPqTls7vWclkEV"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"endDate": {
										"message": "The end date field is mandatory.",
										"rule": "required"
									},
									"startDate": {
										"message": "The start date field is mandatory.",
										"rule": "required"
									},
									"userId or calendarProviderId": {
										"message": "The user id or calendar provider id field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/appointments/",
				"tags": ["Calendar > Appointment"]
			},
			"post": {
				"description": "<h4>Booking Appoinment.</h4><p>HL Appointments API provides several different ways the endpoints can be leveraged, You can examine its application depending on any of the following use cases:</p><p><strong>Use case #1</strong>: Schedule Appointments</p><p>This predominantly focuses on consumer facing online booking applications. To be able to use it effectively, consider the following parameters during your set-up.</p><p>Required JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>email(or phone)</td><td>string</td><td>johndeo@gmail.com</td></tr><tr><td>phone(or email)</td><td>string</td><td>+1 888-888-8888</td></tr><tr><td>selectedSlot</td><td>datetime</td><td>2021-02-05T11:00:00+05:30</td></tr><tr><td>selectedTimezone</td><td>string</td><td>Asia/Calcutta</td></tr><tr><td>calendarId</td><td>string</td><td>J37gEVtdFMRYVQWPdXIc</td></tr></tbody></table><p>Allowed JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>firstName</td><td>string</td><td>John</td></tr><tr><td>lastName</td><td>string</td><td>Deo</td></tr><tr><td>name</td><td>string</td><td>John Deo</td></tr><tr><td>title</td><td>string</td><td>Best Event</td></tr><tr><td>address1</td><td>long</td><td>Tonkawa Trail W</td></tr><tr><td>city</td><td>string</td><td>Austin</td></tr><tr><td>state</td><td>string</td><td>Texas</td></tr><tr><td>website</td><td>string(url)</td><td>https://www.google.com</td></tr><tr><td>__custome_field_id__</td><td>string/array</td><td>Test</td></tr><tr><td>calendarNotes</td><td>long</td><td>Booked from public api</td></tr></tbody></table><p><strong>Use case #2</strong>: Block Off Time (Event Blocks)</p><p>This focuses specifically on actions surrounding internal applications such as posting a custom event block availability within your own application. While its application covers a range of different scenarios, you can use the following parameters during your set-up.</p><p>Required JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>selectedSlot</td><td>datetime</td><td>2021-02-10T10:00:00Z</td></tr><tr><td>endAt</td><td>datetime</td><td>2021-02-12T10:00:00Z</td></tr><tr><td>calendarId/userId</td><td>string</td><td>J37gEVtdFMRYVQWPdXIc</td></tr></tbody></table><p>Allowed JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>title</td><td>string</td><td>Blocking Event</td></tr></tbody></table> <br /> <strong>Authorization:</strong><p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"calendarId": "CVokAlI8fgw4WYWoCtQz",
									"email": "john@deo.com",
									"phone": "+18887324197",
									"selectedSlot": "2021-06-23T03:30:00+05:30",
									"selectedTimezone": "Asia/Calcutta"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"contact": {
										"__moreField__": "sin",
										"country": "DE",
										"customField": [
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "anim esse"
											},
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "culpa anim nulla Ut"
											}
										],
										"email": "JohnDeo@gmail.com",
										"emailLowerCase": "johndeo@gmail.com",
										"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
										"id": "0007BWpSzSwfiuSl0tR2",
										"locationId": "C2QujeCh8ZnC7al2InWR",
										"timezone": "Asia/Calcutta"
									},
									"contactId": "0007BWpSzSwfiuSl0tR2",
									"id": "004B1SpcAvh3s9E3rqk8"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"calendarId": {
										"message": "The calendar id field is mandatory.",
										"rule": "required"
									},
									"email or phone": {
										"message": "The email or phone field is mandatory.",
										"rule": "required"
									},
									"selectedSlot": {
										"message": "The selected slot field is mandatory.",
										"rule": "required"
									},
									"selectedTimezone": {
										"message": "The selected timezone field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/appointments/",
				"tags": ["Calendar > Appointment"]
			}
		},
		"/v1/appointments/slots": {
			"get": {
				"description": "<h4>Get free slots.</h4><p>Required fields in the query</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th></tr></thead><tbody><tr><td>calendarId</td><td>string</td><td>CVokAlI8fgw4WYWoCtQz</td></tr><tr><td>startDate</td><td>integer</td><td>epoch timestamp. for ex: <code>1548898600000</code></td></tr><tr><td>endDate</td><td>integer</td><td>epoch timestamp. for ex: <code>1601490599999</code></td></tr></tbody></table><p>Allowed field in the query</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th></tr></thead><tbody><tr><td>userId</td><td>string</td><td>082goXVW3lIExEQPOnd3</td></tr><tr><td>timezone</td><td>string</td><td>America/Chihuahua</td></tr></tbody></table> <br /> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Calendar Id",
						"example": "CVokAlI8fgw4WYWoCtQz",
						"in": "query",
						"name": "calendarId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) epoch timestamp",
						"example": "1598898600000",
						"in": "query",
						"name": "startDate",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "(Required) epoch timestamp",
						"example": "1601490599999",
						"in": "query",
						"name": "endDate",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "Timezone",
						"example": "America/Chihuahua",
						"in": "query",
						"name": "timezone",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "User Id",
						"example": "082goXVW3lIExEQPOnd3",
						"in": "query",
						"name": "userId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"_dates_": {
										"slots": [
											"2020-09-04T08:00:00+05:30",
											"2020-09-04T08:00:00+05:30"
										]
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"calendarId": {
										"message": "The calendar id field is mandatory.",
										"rule": "required"
									},
									"endDate": {
										"message": "The end date field is mandatory.",
										"rule": "required"
									},
									"startDate": {
										"message": "The start date field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/appointments/slots",
				"tags": ["Calendar > Appointment"]
			}
		},
		"/v1/appointments/{appointmentId}": {
			"delete": {
				"description": "<h4>Delete exisiting appoinment.</h4><br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Appointment Id",
						"example": "004B1SpcAvh3s9E3rqk8",
						"in": "path",
						"name": "appointmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/appointments/:appointmentId",
				"tags": ["Calendar > Appointment"]
			},
			"get": {
				"description": "<h4>Get appointment by id.</h4><br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Appointment Id",
						"example": "004B1SpcAvh3s9E3rqk8",
						"in": "path",
						"name": "appointmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"appoinmentStatus": "confirmed",
									"calendarId": "9qFx5qCKr3jIdBw0DiqB",
									"calendarProviderId": "0nU7uKSrtT2RVM1KknuF",
									"calendarServiceId": "CVokAlI8fgw4WYWoCtQz",
									"contact": {
										"__moreField__": "nisi reprehenderit velit fugiat",
										"country": "DE",
										"customField": [
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "sit adipisicing"
											},
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "minim consequa"
											}
										],
										"email": "JohnDeo@gmail.com",
										"emailLowerCase": "johndeo@gmail.com",
										"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
										"id": "ocQHyuzHvysMo5N5VsXc",
										"locationId": "C2QujeCh8ZnC7al2InWR",
										"tags": ["proident ipsum deserunt", "laborum est"],
										"timezone": "Asia/Calcutta"
									},
									"contactId": "v1kbP2GBSZq6yzRkh7KT",
									"endTime": "2020-07-22T16:30:00+05:30",
									"id": "EaALh02zfPo8VB3JOnpq",
									"isRecurring": false,
									"locationId": "C2QujeCh8ZnC7al2InWR",
									"selectedTimezone": "Asia/Calcutta",
									"startTime": "2020-07-22T16:00:00+05:30",
									"status": "booked",
									"title": "Calendar Standup",
									"userId": "GCs5KuzPqTls7vWclkEV"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/appointments/:appointmentId",
				"tags": ["Calendar > Appointment"]
			},
			"put": {
				"description": "<h4>Update exisiting appoinment.</h4><br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Appointment Id",
						"example": "004B1SpcAvh3s9E3rqk8",
						"in": "path",
						"name": "appointmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"selectedSlot": "2020-08-28T15:30:00",
									"selectedTimezone": "Asia/Calcutta"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"contact": {
										"__moreField__": "ipsum",
										"country": "DE",
										"customField": [
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "ea minim"
											},
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "qui culpa Ut"
											}
										],
										"email": "JohnDeo@gmail.com",
										"emailLowerCase": "johndeo@gmail.com",
										"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
										"id": "0007BWpSzSwfiuSl0tR2",
										"locationId": "C2QujeCh8ZnC7al2InWR",
										"timezone": "Asia/Calcutta"
									},
									"contactId": "0007BWpSzSwfiuSl0tR2",
									"id": "004B1SpcAvh3s9E3rqk8"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"selectedSlot": {
										"message": "The selected slot field is mandatory.",
										"rule": "required"
									},
									"selectedTimezone": {
										"message": "The selected timezone field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/appointments/:appointmentId",
				"tags": ["Calendar > Appointment"]
			}
		},
		"/v1/appointments/{appointmentId}/status": {
			"put": {
				"description": "<h4>Update exisiting appoinment status.</h4><p>Required JSON fields in the body</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Options</th></tr></thead><tbody><tr><td>status</td><td>string</td><td>confirmed</td><td><ul><li>confirmed</li><li>cancelled</li><li>showed</li><li>noshow</li><li>invalid</li></ul></td></tr></tbody></table><br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Appointment Id",
						"example": "004B1SpcAvh3s9E3rqk8",
						"in": "path",
						"name": "appointmentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"status": "confirmed"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"text/plain": {
								"example": "",
								"schema": {
									"type": "string"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "text/plain",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"status": {
										"message": "The status field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/appointments/:appointmentId/status",
				"tags": ["Calendar > Appointment"]
			}
		},
		"/v1/calendars/check-slug-availability/{slug}": {
			"get": {
				"description": "<h4>Check Calendar (Provider) slug availability.</h4><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Slug",
						"example": "xyz",
						"in": "path",
						"name": "slug",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"isSlugAvailable": true,
									"slug": "sales-services"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"email or phone": {
										"message": "The email or phone field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/calendars/check-slug-availability/:slug",
				"tags": ["Calendar > Calendar/Team"]
			}
		},
		"/v1/calendars/services": {
			"get": {
				"description": "<h4>Get all calendar services.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "Filter service by team id.",
						"example": "ABXdTR0kegkPcTvtdr1L",
						"in": "query",
						"name": "teamId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"services": [
										{
											"appointmentTitle": "{{contact.name}}",
											"availability": {
												"appointmentInfo": {
													"perDay": 8,
													"perSlot": 1
												},
												"eventTiming": {
													"slotBuffer": 0,
													"slotDuration": 30,
													"slotInterval": 30
												},
												"officeHours": {
													"friday": [
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														},
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														}
													],
													"monday": [
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														},
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														}
													],
													"thursday": [
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														},
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														}
													],
													"tuesday": [
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														},
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														}
													],
													"wednesday": [
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														},
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														}
													]
												},
												"schedule": {
													"allowBookingAfter": 1,
													"allowBookingAfterUnit": "Hours",
													"allowBookingFor": 8,
													"allowBookingForUnit": "Hours"
												}
											},
											"confirmation": {
												"form": {
													"customFormId": "jjusM6EOngDExnbo2DbU",
													"stickyContact": false
												},
												"formSubmission": {
													"content": "",
													"type": "ThankYouMessage"
												},
												"notificationAndOther": {
													"alertEmail": "quis aute",
													"customCode": "",
													"facebookPixelId": "",
													"hasAllowCancellation": false,
													"hasAllowReschedule": false,
													"hasAutoConfirm": false,
													"hasGoogleSendInvitationEmail": false,
													"hasSendEmailToAssignedMember": false,
													"notes": ""
												}
											},
											"description": "Test Service Desc.",
											"eventColor": "#FF0000",
											"id": "OW59k4IchTgKjIDy3VMO",
											"linkedCalendars": {
												"clio": {
													"id": "in labore Lorem ex",
													"name": "est nostrud"
												},
												"drchrono": {
													"id": "mollit sint",
													"name": "fugiat dolore non"
												},
												"google": {
													"id": "eiusmod commodo non",
													"name": "pari"
												}
											},
											"meetingLocation": "location",
											"name": "Test Service",
											"syncOption": "oneway",
											"teamId": "#FF0000",
											"teamMembers": [
												{
													"meetingLocation": "https://zoom.us",
													"priority": 0,
													"selected": false,
													"userId": ""
												},
												{
													"meetingLocation": "https://zoom.us",
													"priority": 0,
													"selected": false,
													"userId": ""
												}
											]
										},
										{
											"appointmentTitle": "{{contact.name}}",
											"availability": {
												"appointmentInfo": {
													"perDay": 8,
													"perSlot": 1
												},
												"eventTiming": {
													"slotBuffer": 0,
													"slotDuration": 30,
													"slotInterval": 30
												},
												"officeHours": {
													"friday": [
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														},
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														}
													],
													"monday": [
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														},
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														}
													],
													"thursday": [
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														},
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														}
													],
													"tuesday": [
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														},
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														}
													],
													"wednesday": [
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														},
														{
															"closeHour": 17,
															"closeMinute": 0,
															"openHour": 8,
															"openMinute": 0
														}
													]
												},
												"schedule": {
													"allowBookingAfter": 1,
													"allowBookingAfterUnit": "Hours",
													"allowBookingFor": 8,
													"allowBookingForUnit": "Hours"
												}
											},
											"confirmation": {
												"form": {
													"customFormId": "jjusM6EOngDExnbo2DbU",
													"stickyContact": false
												},
												"formSubmission": {
													"content": "",
													"type": "ThankYouMessage"
												},
												"notificationAndOther": {
													"alertEmail": "incididunt Duis",
													"customCode": "",
													"facebookPixelId": "",
													"hasAllowCancellation": false,
													"hasAllowReschedule": false,
													"hasAutoConfirm": false,
													"hasGoogleSendInvitationEmail": false,
													"hasSendEmailToAssignedMember": false,
													"notes": ""
												}
											},
											"description": "Test Service Desc.",
											"eventColor": "#FF0000",
											"id": "OW59k4IchTgKjIDy3VMO",
											"linkedCalendars": {
												"clio": {
													"id": "aliqua aute dolore",
													"name": "esse"
												},
												"drchrono": {
													"id": "ullamco deserunt in",
													"name": "incidid"
												},
												"google": {
													"id": "in esse do non",
													"name": "laborum non proident veniam"
												}
											},
											"meetingLocation": "location",
											"name": "Test Service",
											"syncOption": "oneway",
											"teamId": "#FF0000",
											"teamMembers": [
												{
													"meetingLocation": "https://zoom.us",
													"priority": 0,
													"selected": false,
													"userId": ""
												},
												{
													"meetingLocation": "https://zoom.us",
													"priority": 0,
													"selected": false,
													"userId": ""
												}
											]
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/calendars/services",
				"tags": ["Calendar > Calendar/Service"]
			}
		},
		"/v1/calendars/services/": {
			"post": {
				"description": "<h4>Create a service</h4> <p>Required JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Option?</th></thead><tbody><tr><td>teamId</td><td>string</td><td>O4qa8K1M6xA4oPXu1b8O</td><td></td></tr><tr><td>name</td><td>string</td><td>Awsome Service</td><td></td></tr><tr><td>description</td><td>string</td><td>Awsome description</td><td></td></tr><tr><td>eventType</td><td>string</td><td>RoundRobin_OptimizeForAvailability</td><td><ul><li>RoundRobin_OptimizeForAvailability</li><li>RoundRobin_OptimizeForEqualDistribution</li></ul></td></tr><tr><td>teamMembers</td><td>obbject</td><td>See field info on the <code>teamMembers</code> table</td><td></td></tr><tr><td>slug</td><td>string</td><td>awsome-service</td><td></td></tr><tr><td>appointmentTitle</td><td>string</td><td><code>{{contact.name}}</code></td><td></td></tr><tr><td>eventColor</td><td>string</td><td>Tomato</td><td><ul><li>Banana</li><li>Basil</li><li>Blueberry</li><li>Flamingo</li><li>Grape</li><li>Graphite</li><li>Lavender</li><li>Peacock</li><li>Sage</li><li>Tangerine</li><li>Tomato</li></ul></td></tr><tr><td>availability</td><td>object</td><td>See field info on <code>availability</code> table.</td><td></td></tr><tr><td>confirmation</td><td>object</td><td>See field info on <code>confirmation</code> table.</td><td></td></tr></tbody></table><p>Allowed JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Option</th></thead><tbody><tr><td>isActive</td><td>boolean</td><td><code>true</code></td><td></td></tr><tr><td>syncOption</td><td>string</td><td>oneway</td><td><ul><li>oneway</li><li>twoway</li></ul></td></tr><tr><td>slug</td><td>string</td><td>first-calendar</td></tr></tbody></table><p>Allowed JSON fields in the <code>teamMembers</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Options</th><th>is Required?</th></thead><tbody><tr><td>userId</td><td>string</td><td>GCs5KuzPqTls7vWclkEV</td><td></td><td>Yes</td></tr><tr><td>priority</td><td>string</td><td>High</td><td><ul><li>High</li><li>Medium</li><li>Low</li></ul></td><td>Yes</td></tr><tr><td>selected</td><td>boolean</td><td>true</td><td></td><td>Yes</td></tr><tr><td>meetingLocation</td><td>string</td><td>https://zoom.us/j/XXXXXXXXXX</td><td></td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>eventTiming</td><td>object</td><td>See field info on <code>availability.eventTiming</code> table.</td><td>Yes</td></tr><tr><td>officeHours</td><td>object</td><td>See field info on <code>availability.officeHours</code> table.</td><td>Yes</td></tr><tr><td>appointmentInfo</td><td>object</td><td>See field info on <code>availability.appointmentInfo</code> table.</td><td>No</td></tr><tr><td>schedule</td><td>object</td><td>See field info on <code>availability.schedule</code> table.</td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability.eventTiming</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Options</th><th>is Required?</th></thead><tbody><tr><td>slotDuration</td><td>number</td><td>30</td><td><ul><li>10</li><li>15</li><li>20</li><li>30</li><li>45</li><li>60</li><li>90</li><li>120</li><li>180</li><li>240</li><li>300</li><li>360</li><li>420</li><li>480</li></ul></td><td>Yes</td></tr><tr><td>slotInterval</td><td>number</td><td>30</td><td><ul><li>10</li><li>15</li><li>20</li><li>30</li><li>45</li><li>60</li><li>90</li><li>120</li><li>180</li><li>240</li><li>300</li><li>360</li><li>420</li><li>480</li></ul></td><td>Yes</td></tr><tr><td>slotBuffer</td><td>number</td><td>1</td><td></td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability.appointmentInfo</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>perSlot</td><td>number</td><td>1</td><td>No</td></tr><tr><td>perDay</td><td>number</td><td>5</td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability.schedule</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Options</th><th>is Required?</th></thead><tbody><tr><td>allowBookingAfter</td><td>number</td><td>1</td><td></td><td>No</td></tr><tr><td>allowBookingAfterUnit</td><td>string</td><td>days</td><td><ul><li>hours</li><li>days</li><li>weeks</li><li>months</li></ul></td><td>No</td></tr><tr><td>allowBookingFor</td><td>number</td><td>5</td><td>No</td></tr><tr><td>allowBookingForUnit</td><td>string</td><td>days</td><td><ul><li>hours</li><li>days</li><li>weeks</li><li>months</li></ul></td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability.officeHours</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>monday</td><td>array</td><td>Please see field info <code>availability.officeHours.days</code> table. include as a array.</td><td>Yes</td></tr><tr><td>tuesday</td><td>array</td><td>Please see field info <code>availability.officeHours.days</code> table. include as a array.</td><td>Yes</td></tr><tr><td>wednesday</td><td>array</td><td>Please see field info <code>availability.officeHours.days</code> table. include as a array.</td><td>Yes</td></tr><tr><td>thursday</td><td>array</td><td>Please see field info <code>availability.officeHours.days</code> table. include as a array.</td><td>Yes</td></tr><tr><td>friday</td><td>array</td><td>Please see field info <code>availability.officeHours.days</code> table. include as a array.</td><td>Yes</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability.officeHours.days</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>openMinute</td><td>number</td><td>0</td><td>Yes</td></tr><tr><td>openHour</td><td>number</td><td>8</td><td>Yes</td></tr><tr><td>closeMinute</td><td>number</td><td>0</td><td>Yes</td></tr><tr><td>closeHour</td><td>number</td><td>17</td><td>Yes</td></tr></tbody></table><p>Allowed JSON fields in the <code>confirmation</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>form</td><td>object</td><td>See field info on <code>confirmation.form</code> table.</td><td>No</td></tr><tr><td>notificationAndOther</td><td>object</td><td>See field info on <code>confirmation.notificationAndOther</code> table.</td><td>Yes</td></tr><tr><td>formSubmission</td><td>object</td><td>See field info on <code>confirmation.formSubmission</code> table.</td><td>Yes</td></tr></tbody></table><p>Allowed JSON fields in the <code>confirmation.form</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>customFormId</td><td>string</td><td>jjusM6EOngDExnbo2DbU</td><td>No</td></tr><tr><td>stickyContact</td><td>boolean</td><td>false</td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>confirmation.notificationAndOther</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>autoConfirm</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>shouldSendAlertEmailsToAssignedMember</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>googleInvitationEmails</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>allowReschedule</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>allowCancellation</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>alertEmail</td><td>string</td><td>john@deo.com</td><td>No</td></tr><tr><td>notes</td><td>string</td><td>Awesome Notes</td><td>No</td></tr><tr><td>facebookPixelId</td><td>string</td><td>XXXXXXXXXX</td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>confirmation.formSubmission</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Options</th><th>is Required?</th></thead><tbody><tr><td>type</td><td>string</td><td>ThankYouMessage</td><td><ul><li>ThankYouMessage</li><li>RedirectURL</li></ul></td><td>Yes</td></tr><tr><td>content</td><td>string</td><td>Thank you for your appointment request.</td><td></td><td>Yes</td></tr></tbody></table><br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"appointmentTitle": "{{contact.name}}",
									"availability": {
										"appointmentInfo": {
											"perDay": 0,
											"perSlot": 0
										},
										"eventTiming": {
											"slotBuffer": 0,
											"slotDuration": 30,
											"slotInterval": 30
										},
										"officeHours": {
											"friday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"monday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"saturday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"sunday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"thursday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"tuesday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"wednesday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											]
										},
										"schedule": {
											"allowBookingAfter": 0,
											"allowBookingAfterUnit": "days",
											"allowBookingFor": 0,
											"allowBookingForUnit": "days"
										}
									},
									"confirmation": {
										"form": {
											"customFormId": "",
											"stickyContact": false,
											"stripe": {
												"amount": 0,
												"chargeDescription": "Your will be billed X amount for this appointment",
												"currency": "USD"
											}
										},
										"formSubmission": {
											"content": "https://www.bing.com or Thank you for your appointment request. We will contact you shortly to confirm your request. Please call our office at {{contactMethod}} if you have any questions.",
											"type": "ThankYouMessage"
										},
										"notificationAndOther": {
											"allowCancellation": true,
											"allowReschedule": true,
											"autoConfirm": true,
											"facebookPixelId": "",
											"googleInvitationEmails": false,
											"notes": "Phone:- {{contact.phone}} Email:- {{contact.email}} Need to make a change to this event? Reschedule:- {{reschedule_link}} Cancel:- {{cancellation_link}}",
											"shouldSendAlertEmailsToAssignedMember": true
										}
									},
									"description": "30 Minutes Call",
									"eventColor": "Peacock",
									"eventType": "RoundRobin_OptimizeForAvailability",
									"name": "30 Mins Call",
									"slug": "30-mins-call",
									"teamId": "0RXEzw5UVe5oLFm6GQls",
									"teamMembers": [
										{
											"meetingLocation": "PhoneNumber/ZoomLink/GoogleMeet/Location",
											"priority": "Low",
											"selected": true,
											"userId": "0nU7uKSrtT2RVM1KknuF"
										},
										{
											"meetingLocation": "PhoneNumber/ZoomLink/GoogleMeet/Location",
											"priority": "Low",
											"selected": true,
											"userId": "0nU7uKSrtT2RVM1KknuF"
										}
									]
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"appointmentTitle": "{{contact.name}}",
									"availability": {
										"appointmentInfo": {
											"perDay": 8,
											"perSlot": 1
										},
										"eventTiming": {
											"slotBuffer": 0,
											"slotDuration": 30,
											"slotInterval": 30
										},
										"officeHours": {
											"friday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"monday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"thursday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"tuesday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"wednesday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											]
										},
										"schedule": {
											"allowBookingAfter": 1,
											"allowBookingAfterUnit": "Hours",
											"allowBookingFor": 8,
											"allowBookingForUnit": "Hours"
										}
									},
									"confirmation": {
										"form": {
											"customFormId": "jjusM6EOngDExnbo2DbU",
											"stickyContact": false
										},
										"formSubmission": {
											"content": "",
											"type": "ThankYouMessage"
										},
										"notificationAndOther": {
											"alertEmail": "dolor elit",
											"customCode": "",
											"facebookPixelId": "",
											"hasAllowCancellation": false,
											"hasAllowReschedule": false,
											"hasAutoConfirm": false,
											"hasGoogleSendInvitationEmail": false,
											"hasSendEmailToAssignedMember": false,
											"notes": ""
										}
									},
									"description": "Test Service Desc.",
									"eventColor": "#FF0000",
									"id": "OW59k4IchTgKjIDy3VMO",
									"linkedCalendars": {
										"clio": {
											"id": "esse non adip",
											"name": "tempor Excepteur"
										},
										"drchrono": {
											"id": "magna in sunt veniam",
											"name": "ut sed adipisicing nisi"
										},
										"google": {
											"id": "adipisicing laboris veniam ",
											"name": "ipsum fugiat ut"
										}
									},
									"meetingLocation": "location",
									"name": "Test Service",
									"syncOption": "oneway",
									"teamId": "#FF0000",
									"teamMembers": [
										{
											"meetingLocation": "https://zoom.us",
											"priority": 0,
											"selected": false,
											"userId": ""
										},
										{
											"meetingLocation": "https://zoom.us",
											"priority": 0,
											"selected": false,
											"userId": ""
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"appointmentTitle": {
										"message": "The team members field is mandatory.",
										"rule": "required"
									},
									"availability.eventTiming.slotDuration": {
										"message": "The availability.eventTiming.slotDuration members field is mandatory.",
										"rule": "required"
									},
									"availability.eventTiming.slotInterval": {
										"message": "The availability.eventTiming.slotInterval members field is mandatory.",
										"rule": "required"
									},
									"availability.officeHours": {
										"message": "The availability.officeHours members field is mandatory.",
										"rule": "required"
									},
									"confirmation.formSubmission.content": {
										"message": "The confirmation.formSubmission.content members field is mandatory.",
										"rule": "required"
									},
									"confirmation.formSubmission.type": {
										"message": "The confirmation.formSubmission.type members field is mandatory.",
										"rule": "required"
									},
									"confirmation.notificationAndOther.allowCancellation": {
										"message": "The confirmation.notificationAndOther.allowCancellation members field is mandatory.",
										"rule": "required"
									},
									"confirmation.notificationAndOther.allowReschedule": {
										"message": "The confirmation.notificationAndOther.allowReschedule members field is mandatory.",
										"rule": "required"
									},
									"confirmation.notificationAndOther.autoConfirm": {
										"message": "The confirmation.notificationAndOther.autoConfirm members field is mandatory.",
										"rule": "required"
									},
									"confirmation.notificationAndOther.googleInvitationEmails": {
										"message": "The confirmation.notificationAndOther.googleInvitationEmails members field is mandatory.",
										"rule": "required"
									},
									"confirmation.notificationAndOther.shouldSendAlertEmailsToAssignedMember": {
										"message": "The confirmation.notificationAndOther.shouldSendAlertEmailsToAssignedMember members field is mandatory.",
										"rule": "required"
									},
									"description": {
										"message": "The description field is mandatory.",
										"rule": "required"
									},
									"eventColor": {
										"message": "The event color field is mandatory.",
										"rule": "required"
									},
									"eventType": {
										"message": "The event type field is mandatory.",
										"rule": "required"
									},
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									},
									"slug": {
										"message": "The slug field is mandatory.",
										"rule": "required"
									},
									"teamId": {
										"message": "The team id field is mandatory.",
										"rule": "required"
									},
									"teamMembers": {
										"message": "The team members field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/calendars/services/",
				"tags": ["Calendar > Calendar/Service"]
			}
		},
		"/v1/calendars/services/{serviceId}": {
			"delete": {
				"description": "<h4>Delete Service.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Service Id",
						"example": "0RXEzw5UVe5oLFm6GQls",
						"in": "path",
						"name": "serviceId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"text/plain": {
								"example": "",
								"schema": {
									"type": "string"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "text/plain",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"id": {
										"message": "The contact id is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/calendars/services/:serviceId",
				"tags": ["Calendar > Calendar/Service"]
			},
			"put": {
				"description": "<h4>Update existing service</h4> <p>Required JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Option?</th></thead><tbody><tr><td>teamId</td><td>string</td><td>O4qa8K1M6xA4oPXu1b8O</td><td></td></tr><tr><td>name</td><td>string</td><td>Awsome Service</td><td></td></tr><tr><td>description</td><td>string</td><td>Awsome description</td><td></td></tr><tr><td>eventType</td><td>string</td><td>RoundRobin_OptimizeForAvailability</td><td><ul><li>RoundRobin_OptimizeForAvailability</li><li>RoundRobin_OptimizeForEqualDistribution</li></ul></td></tr><tr><td>teamMembers</td><td>obbject</td><td>See field info on the <code>teamMembers</code> table</td><td></td></tr><tr><td>slug</td><td>string</td><td>awsome-service</td><td></td></tr><tr><td>appointmentTitle</td><td>string</td><td><code>{{contact.name}}</code></td><td></td></tr><tr><td>eventColor</td><td>string</td><td>Tomato</td><td><ul><li>Banana</li><li>Basil</li><li>Blueberry</li><li>Flamingo</li><li>Grape</li><li>Graphite</li><li>Lavender</li><li>Peacock</li><li>Sage</li><li>Tangerine</li><li>Tomato</li></ul></td></tr><tr><td>availability</td><td>object</td><td>See field info on <code>availability</code> table.</td><td></td></tr><tr><td>confirmation</td><td>object</td><td>See field info on <code>confirmation</code> table.</td><td></td></tr></tbody></table><p>Allowed JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Option</th></thead><tbody><tr><td>isActive</td><td>boolean</td><td><code>true</code></td><td></td></tr><tr><td>syncOption</td><td>string</td><td>oneway</td><td><ul><li>oneway</li><li>twoway</li></ul></td></tr><tr><td>slug</td><td>string</td><td>first-calendar</td></tr></tbody></table><p>Allowed JSON fields in the <code>teamMembers</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Options</th><th>is Required?</th></thead><tbody><tr><td>userId</td><td>string</td><td>GCs5KuzPqTls7vWclkEV</td><td></td><td>Yes</td></tr><tr><td>priority</td><td>string</td><td>High</td><td><ul><li>High</li><li>Medium</li><li>Low</li></ul></td><td>Yes</td></tr><tr><td>selected</td><td>boolean</td><td>true</td><td></td><td>Yes</td></tr><tr><td>meetingLocation</td><td>string</td><td>https://zoom.us/j/XXXXXXXXXX</td><td></td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>eventTiming</td><td>object</td><td>See field info on <code>availability.eventTiming</code> table.</td><td>Yes</td></tr><tr><td>officeHours</td><td>object</td><td>See field info on <code>availability.officeHours</code> table.</td><td>Yes</td></tr><tr><td>appointmentInfo</td><td>object</td><td>See field info on <code>availability.appointmentInfo</code> table.</td><td>No</td></tr><tr><td>schedule</td><td>object</td><td>See field info on <code>availability.schedule</code> table.</td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability.eventTiming</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Options</th><th>is Required?</th></thead><tbody><tr><td>slotDuration</td><td>number</td><td>30</td><td><ul><li>10</li><li>15</li><li>20</li><li>30</li><li>45</li><li>60</li><li>90</li><li>120</li><li>180</li><li>240</li><li>300</li><li>360</li><li>420</li><li>480</li></ul></td><td>Yes</td></tr><tr><td>slotInterval</td><td>number</td><td>30</td><td><ul><li>10</li><li>15</li><li>20</li><li>30</li><li>45</li><li>60</li><li>90</li><li>120</li><li>180</li><li>240</li><li>300</li><li>360</li><li>420</li><li>480</li></ul></td><td>Yes</td></tr><tr><td>slotBuffer</td><td>number</td><td>1</td><td></td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability.appointmentInfo</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>perSlot</td><td>number</td><td>1</td><td>No</td></tr><tr><td>perDay</td><td>number</td><td>5</td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability.schedule</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Options</th><th>is Required?</th></thead><tbody><tr><td>allowBookingAfter</td><td>number</td><td>1</td><td></td><td>No</td></tr><tr><td>allowBookingAfterUnit</td><td>string</td><td>days</td><td><ul><li>hours</li><li>days</li><li>weeks</li><li>months</li></ul></td><td>No</td></tr><tr><td>allowBookingFor</td><td>number</td><td>5</td><td>No</td></tr><tr><td>allowBookingForUnit</td><td>string</td><td>days</td><td><ul><li>hours</li><li>days</li><li>weeks</li><li>months</li></ul></td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability.officeHours</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>monday</td><td>array</td><td>Please see field info <code>availability.officeHours.days</code> table. include as a array.</td><td>Yes</td></tr><tr><td>tuesday</td><td>array</td><td>Please see field info <code>availability.officeHours.days</code> table. include as a array.</td><td>Yes</td></tr><tr><td>wednesday</td><td>array</td><td>Please see field info <code>availability.officeHours.days</code> table. include as a array.</td><td>Yes</td></tr><tr><td>thursday</td><td>array</td><td>Please see field info <code>availability.officeHours.days</code> table. include as a array.</td><td>Yes</td></tr><tr><td>friday</td><td>array</td><td>Please see field info <code>availability.officeHours.days</code> table. include as a array.</td><td>Yes</td></tr></tbody></table><p>Allowed JSON fields in the <code>availability.officeHours.days</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>openMinute</td><td>number</td><td>0</td><td>Yes</td></tr><tr><td>openHour</td><td>number</td><td>8</td><td>Yes</td></tr><tr><td>closeMinute</td><td>number</td><td>0</td><td>Yes</td></tr><tr><td>closeHour</td><td>number</td><td>17</td><td>Yes</td></tr></tbody></table><p>Allowed JSON fields in the <code>confirmation</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>form</td><td>object</td><td>See field info on <code>confirmation.form</code> table.</td><td>No</td></tr><tr><td>notificationAndOther</td><td>object</td><td>See field info on <code>confirmation.notificationAndOther</code> table.</td><td>Yes</td></tr><tr><td>formSubmission</td><td>object</td><td>See field info on <code>confirmation.formSubmission</code> table.</td><td>Yes</td></tr></tbody></table><p>Allowed JSON fields in the <code>confirmation.form</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>customFormId</td><td>string</td><td>jjusM6EOngDExnbo2DbU</td><td>No</td></tr><tr><td>stickyContact</td><td>boolean</td><td>false</td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>confirmation.notificationAndOther</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>is Required?</th></thead><tbody><tr><td>autoConfirm</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>shouldSendAlertEmailsToAssignedMember</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>googleInvitationEmails</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>allowReschedule</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>allowCancellation</td><td>boolean</td><td>false</td><td>Yes</td></tr><tr><td>alertEmail</td><td>string</td><td>john@deo.com</td><td>No</td></tr><tr><td>notes</td><td>string</td><td>Awesome Notes</td><td>No</td></tr><tr><td>facebookPixelId</td><td>string</td><td>XXXXXXXXXX</td><td>No</td></tr></tbody></table><p>Allowed JSON fields in the <code>confirmation.formSubmission</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Options</th><th>is Required?</th></thead><tbody><tr><td>type</td><td>string</td><td>ThankYouMessage</td><td><ul><li>ThankYouMessage</li><li>RedirectURL</li></ul></td><td>Yes</td></tr><tr><td>content</td><td>string</td><td>Thank you for your appointment request.</td><td></td><td>Yes</td></tr></tbody></table><br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Service Id",
						"example": "0RXEzw5UVe5oLFm6GQls",
						"in": "path",
						"name": "serviceId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"appointmentTitle": "{{contact.name}}",
									"availability": {
										"appointmentInfo": {
											"perDay": 0,
											"perSlot": 0
										},
										"eventTiming": {
											"slotBuffer": 0,
											"slotDuration": 30,
											"slotInterval": 30
										},
										"officeHours": {
											"friday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"monday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"saturday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"sunday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"thursday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"tuesday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"wednesday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											]
										},
										"schedule": {
											"allowBookingAfter": 0,
											"allowBookingAfterUnit": "days",
											"allowBookingFor": 0,
											"allowBookingForUnit": "days"
										}
									},
									"confirmation": {
										"form": {
											"customFormId": "",
											"stickyContact": false,
											"stripe": {
												"amount": 0,
												"chargeDescription": "Your will be billed X amount for this appointment",
												"currency": "USD"
											}
										},
										"formSubmission": {
											"content": "https://www.bing.com or Thank you for your appointment request. We will contact you shortly to confirm your request. Please call our office at {{contactMethod}} if you have any questions.",
											"type": "ThankYouMessage"
										},
										"notificationAndOther": {
											"allowCancellation": true,
											"allowReschedule": true,
											"autoConfirm": true,
											"facebookPixelId": "",
											"googleInvitationEmails": false,
											"notes": "Phone:- {{contact.phone}} Email:- {{contact.email}} Need to make a change to this event? Reschedule:- {{reschedule_link}} Cancel:- {{cancellation_link}}",
											"shouldSendAlertEmailsToAssignedMember": true
										}
									},
									"description": "30 Minutes Call",
									"eventColor": "Peacock",
									"eventType": "RoundRobin_OptimizeForAvailability",
									"name": "30 Mins Call",
									"slug": "30-mins-call",
									"teamId": "0RXEzw5UVe5oLFm6GQls",
									"teamMembers": [
										{
											"meetingLocation": "PhoneNumber/ZoomLink/GoogleMeet/Location",
											"priority": "Low",
											"selected": true,
											"userId": "0nU7uKSrtT2RVM1KknuF"
										},
										{
											"meetingLocation": "PhoneNumber/ZoomLink/GoogleMeet/Location",
											"priority": "Low",
											"selected": true,
											"userId": "0nU7uKSrtT2RVM1KknuF"
										}
									]
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"appointmentTitle": "{{contact.name}}",
									"availability": {
										"appointmentInfo": {
											"perDay": 8,
											"perSlot": 1
										},
										"eventTiming": {
											"slotBuffer": 0,
											"slotDuration": 30,
											"slotInterval": 30
										},
										"officeHours": {
											"friday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"monday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"thursday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"tuesday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											],
											"wednesday": [
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												},
												{
													"closeHour": 17,
													"closeMinute": 0,
													"openHour": 8,
													"openMinute": 0
												}
											]
										},
										"schedule": {
											"allowBookingAfter": 1,
											"allowBookingAfterUnit": "Hours",
											"allowBookingFor": 8,
											"allowBookingForUnit": "Hours"
										}
									},
									"confirmation": {
										"form": {
											"customFormId": "jjusM6EOngDExnbo2DbU",
											"stickyContact": false
										},
										"formSubmission": {
											"content": "",
											"type": "ThankYouMessage"
										},
										"notificationAndOther": {
											"alertEmail": "dolor elit",
											"customCode": "",
											"facebookPixelId": "",
											"hasAllowCancellation": false,
											"hasAllowReschedule": false,
											"hasAutoConfirm": false,
											"hasGoogleSendInvitationEmail": false,
											"hasSendEmailToAssignedMember": false,
											"notes": ""
										}
									},
									"description": "Test Service Desc.",
									"eventColor": "#FF0000",
									"id": "OW59k4IchTgKjIDy3VMO",
									"linkedCalendars": {
										"clio": {
											"id": "esse non adip",
											"name": "tempor Excepteur"
										},
										"drchrono": {
											"id": "magna in sunt veniam",
											"name": "ut sed adipisicing nisi"
										},
										"google": {
											"id": "adipisicing laboris veniam ",
											"name": "ipsum fugiat ut"
										}
									},
									"meetingLocation": "location",
									"name": "Test Service",
									"syncOption": "oneway",
									"teamId": "#FF0000",
									"teamMembers": [
										{
											"meetingLocation": "https://zoom.us",
											"priority": 0,
											"selected": false,
											"userId": ""
										},
										{
											"meetingLocation": "https://zoom.us",
											"priority": 0,
											"selected": false,
											"userId": ""
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"appointmentTitle": {
										"message": "The team members field is mandatory.",
										"rule": "required"
									},
									"availability.eventTiming.slotDuration": {
										"message": "The availability.eventTiming.slotDuration members field is mandatory.",
										"rule": "required"
									},
									"availability.eventTiming.slotInterval": {
										"message": "The availability.eventTiming.slotInterval members field is mandatory.",
										"rule": "required"
									},
									"availability.officeHours": {
										"message": "The availability.officeHours members field is mandatory.",
										"rule": "required"
									},
									"confirmation.formSubmission.content": {
										"message": "The confirmation.formSubmission.content members field is mandatory.",
										"rule": "required"
									},
									"confirmation.formSubmission.type": {
										"message": "The confirmation.formSubmission.type members field is mandatory.",
										"rule": "required"
									},
									"confirmation.notificationAndOther.allowCancellation": {
										"message": "The confirmation.notificationAndOther.allowCancellation members field is mandatory.",
										"rule": "required"
									},
									"confirmation.notificationAndOther.allowReschedule": {
										"message": "The confirmation.notificationAndOther.allowReschedule members field is mandatory.",
										"rule": "required"
									},
									"confirmation.notificationAndOther.autoConfirm": {
										"message": "The confirmation.notificationAndOther.autoConfirm members field is mandatory.",
										"rule": "required"
									},
									"confirmation.notificationAndOther.googleInvitationEmails": {
										"message": "The confirmation.notificationAndOther.googleInvitationEmails members field is mandatory.",
										"rule": "required"
									},
									"confirmation.notificationAndOther.shouldSendAlertEmailsToAssignedMember": {
										"message": "The confirmation.notificationAndOther.shouldSendAlertEmailsToAssignedMember members field is mandatory.",
										"rule": "required"
									},
									"description": {
										"message": "The description field is mandatory.",
										"rule": "required"
									},
									"eventColor": {
										"message": "The event color field is mandatory.",
										"rule": "required"
									},
									"eventType": {
										"message": "The event type field is mandatory.",
										"rule": "required"
									},
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									},
									"slug": {
										"message": "The slug field is mandatory.",
										"rule": "required"
									},
									"teamId": {
										"message": "The team id field is mandatory.",
										"rule": "required"
									},
									"teamMembers": {
										"message": "The team members field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/calendars/services/:serviceId",
				"tags": ["Calendar > Calendar/Service"]
			}
		},
		"/v1/calendars/teams": {
			"get": {
				"description": "<h4>Get all teams. <h4><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"teams": [
										{
											"calendarConfig": {
												"calendarName": "Test Calendar",
												"description": "Desc.",
												"link": "/widget/appointment/slug",
												"shouldAssignContactToTeamMember": false,
												"shouldSkipAssigningContactForExisting": false,
												"slug": "slug"
											},
											"id": "OW59k4IchTgKjIDy3VMO",
											"members": [
												{
													"email": "elon@musk.com",
													"id": "mnUXmpG2MhhHKmjegzBZ",
													"name": "Elon Musk"
												},
												{
													"email": "elon@musk.com",
													"id": "mnUXmpG2MhhHKmjegzBZ",
													"name": "Elon Musk"
												}
											],
											"name": "Test Team"
										},
										{
											"calendarConfig": {
												"calendarName": "Test Calendar",
												"description": "Desc.",
												"link": "/widget/appointment/slug",
												"shouldAssignContactToTeamMember": false,
												"shouldSkipAssigningContactForExisting": false,
												"slug": "slug"
											},
											"id": "OW59k4IchTgKjIDy3VMO",
											"members": [
												{
													"email": "elon@musk.com",
													"id": "mnUXmpG2MhhHKmjegzBZ",
													"name": "Elon Musk"
												},
												{
													"email": "elon@musk.com",
													"id": "mnUXmpG2MhhHKmjegzBZ",
													"name": "Elon Musk"
												}
											],
											"name": "Test Team"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/calendars/teams",
				"tags": ["Calendar > Calendar/Team"]
			}
		},
		"/v1/calendars/teams/": {
			"post": {
				"description": "<h4>Create a team.</h4> <p>Required JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>name</td><td>string</td><td>Test Team</td></tr><tr><td>userIds</td><td>array</td><td><code>[\"J37gEVtdFMRYVQWPdXIc\"]</code></td></tr><tr><td>calendarConfig</td><td>object</td><td><code>{\"calendarName\": \"test\", \"description\": \"dfsadfsd\", \"slug\": \"tesfdsafdsa\", \"link\": \"/widget/appointment/tesfdsafdsa\", \"shouldAssignContactToTeamMember\": false, \"shouldSkipAssigningContactForExisting\": false}</code></td></tr></tbody></table><p>Required JSON fields in the <code>calendarConfig</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>calendarName</td><td>string</td><td>First Calendar</td></tr><tr><td>description</td><td>string</td><td>Some description</td></tr><tr><td>slug</td><td>string</td><td>first-calendar</td></tr></tbody></table><p>Allowed JSON fields in the <code>calendarConfig</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>shouldAssignContactToTeamMember</td><td>boolean</td><td><code>false</code></td></tr><tr><td>shouldSkipAssigningContactForExisting</td><td>boolean</td><td><code>false</code></td></tr></tbody></table><br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"calendarConfig": {
										"calendarName": "Sales Team Calendar",
										"description": "Sales Team Calendar Services",
										"shouldAssignContactToTeamMember": false,
										"shouldSkipAssigningContactForExisting": false,
										"slug": "sales-team"
									},
									"name": "Sales Team",
									"userIds": ["nisi incididunt", "laboris veniam Ut"]
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"calendarConfig": {
										"calendarName": "Test Calendar",
										"description": "Desc.",
										"link": "/widget/appointment/slug",
										"shouldAssignContactToTeamMember": false,
										"shouldSkipAssigningContactForExisting": false,
										"slug": "slug"
									},
									"id": "OW59k4IchTgKjIDy3VMO",
									"members": [
										{
											"email": "elon@musk.com",
											"id": "mnUXmpG2MhhHKmjegzBZ",
											"name": "Elon Musk"
										},
										{
											"email": "elon@musk.com",
											"id": "mnUXmpG2MhhHKmjegzBZ",
											"name": "Elon Musk"
										}
									],
									"name": "Test Team"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"calendarConfig.calendarName": {
										"message": "The calendarConfig.calendarName field is mandatory.",
										"rule": "required"
									},
									"calendarConfig.description": {
										"message": "The calendarConfig.description field is mandatory.",
										"rule": "required"
									},
									"calendarConfig.slug": {
										"message": "The calendarConfig.slug field is mandatory.",
										"rule": "required"
									},
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									},
									"userIds": {
										"message": "The user ids field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/calendars/teams/",
				"tags": ["Calendar > Calendar/Team"]
			}
		},
		"/v1/calendars/teams/{teamId}": {
			"delete": {
				"description": "<h4>Delete Team. </h4><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Team Id",
						"example": "0nU7uKSrtT2RVM1KknuF",
						"in": "path",
						"name": "teamId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"text/plain": {
								"example": "",
								"schema": {
									"type": "string"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "text/plain",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/calendars/teams/:teamId",
				"tags": ["Calendar > Calendar/Team"]
			},
			"put": {
				"description": "<h4>Updating existing team.</h4> <p>Required JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>name</td><td>string</td><td>Test Team</td></tr><tr><td>userIds</td><td>array</td><td><code>[\"J37gEVtdFMRYVQWPdXIc\"]</code></td></tr><tr><td>calendarConfig</td><td>object</td><td><code>{\"calendarName\": \"test\", \"description\": \"dfsadfsd\", \"slug\": \"tesfdsafdsa\", \"link\": \"/widget/appointment/tesfdsafdsa\", \"shouldAssignContactToTeamMember\": false, \"shouldSkipAssigningContactForExisting\": false}</code></td></tr></tbody></table><p>Required JSON fields in the <code>calendarConfig</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>calendarName</td><td>string</td><td>First Calendar</td></tr><tr><td>description</td><td>string</td><td>Some description</td></tr><tr><td>slug</td><td>string</td><td>first-calendar</td></tr></tbody></table><p>Allowed JSON fields in the <code>calendarConfig</code></p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>shouldAssignContactToTeamMember</td><td>boolean</td><td><code>false</code></td></tr><tr><td>shouldSkipAssigningContactForExisting</td><td>boolean</td><td><code>false</code></td></tr></tbody></table><br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Team Id",
						"example": "0nU7uKSrtT2RVM1KknuF",
						"in": "path",
						"name": "teamId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"calendarConfig": {
										"calendarName": "Sales Team Calendar",
										"description": "Sales Team Calendar Services",
										"shouldAssignContactToTeamMember": false,
										"shouldSkipAssigningContactForExisting": false,
										"slug": "sales-team"
									},
									"name": "Sales Team",
									"userIds": ["ea est esse ad velit", "ex ut et eiusmod"]
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"calendarConfig": {
										"calendarName": "Test Calendar",
										"description": "Desc.",
										"link": "/widget/appointment/slug",
										"shouldAssignContactToTeamMember": false,
										"shouldSkipAssigningContactForExisting": false,
										"slug": "slug"
									},
									"id": "OW59k4IchTgKjIDy3VMO",
									"members": [
										{
											"email": "elon@musk.com",
											"id": "mnUXmpG2MhhHKmjegzBZ",
											"name": "Elon Musk"
										},
										{
											"email": "elon@musk.com",
											"id": "mnUXmpG2MhhHKmjegzBZ",
											"name": "Elon Musk"
										}
									],
									"name": "Test Team"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"calendarConfig.calendarName": {
										"message": "The calendarConfig.calendarName field is mandatory.",
										"rule": "required"
									},
									"calendarConfig.description": {
										"message": "The calendarConfig.description field is mandatory.",
										"rule": "required"
									},
									"calendarConfig.slug": {
										"message": "The calendarConfig.slug field is mandatory.",
										"rule": "required"
									},
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									},
									"userIds": {
										"message": "The user ids field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/calendars/teams/:teamId",
				"tags": ["Calendar > Calendar/Team"]
			}
		},
		"/v1/campaigns/": {
			"get": {
				"description": "<h4>Get Campaigns.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "Filter by status, Allowed option are draft or published.",
						"example": "published",
						"in": "query",
						"name": "status",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"campaigns": [
										{
											"id": "Y2I9XM7aO1hncuSOlc9L",
											"name": "Test Campaign",
											"status": "draft"
										},
										{
											"id": "Y2I9XM7aO1hncuSOlc9L",
											"name": "Test Campaign",
											"status": "draft"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/campaigns/",
				"tags": ["Campaign"]
			}
		},
		"/v1/contacts/": {
			"get": {
				"description": "<h4>Get Contacts.</h4><strong>Filters:</strong><table role=\"table\"><thead><tr><th>Fields</th><th>Description</th></tr></thead><tbody><tr><td>query</td><td>It will search on these fields: <code>Name</code>, <code>Phone</code>, <code>Email</code>, <code>Tags</code>, and <code>Company Name</code>.</td></tr></tbody></table><strong>Sorting:</strong><table role=\"table\"><thead><tr><th>Fields</th><th>Allowed Options</th><th>Default value</th></tr></thead><tbody><tr><td>sortBy</td><td><code>date_added</code> or <code>date_updated</code></td><td><code>date_added</code></td></tr><tr><td>order</td><td><code>asc</code> or <code>desc</code></td><td><code>desc</code></td></tr></tbody></table><strong>Pagination:</strong><p>We will by default return the first matched 20 contacts. You can fetched next and more by passing the page on the query params <span style=\"color: red;\">(deprecated)</span>. You can see page info and total records count on to the <code>meta</code> <br /><br /> <strong>New: </strong>You can fetched next and more by passing the startAfter and startAfterId on the query params. You can see <code>startAfterId</code> and <code>startAfter</code> fields found into the response <code>meta</code> field.</p><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "Start After Id",
						"example": "UIaE1WjAwWKdlyD7osQI",
						"in": "query",
						"name": "startAfterId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Start After",
						"example": "1603870249758",
						"in": "query",
						"name": "startAfter",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "Limit Per Page records count. will allow maximum up to 100 and default will be 20",
						"example": "20",
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "Contact Query",
						"example": "John",
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"contacts": [
										{
											"__moreField__": "ut consequat sit",
											"country": "DE",
											"customField": [
												{
													"id": "MgobCB14YMVKuE4Ka8p1",
													"value": "cillum in ullamco dolor commodo"
												},
												{
													"id": "MgobCB14YMVKuE4Ka8p1",
													"value": "tempor"
												}
											],
											"dateAdded": "2020-10-29T09:31:30.255Z",
											"email": "JohnDeo@gmail.com",
											"emailLowerCase": "johndeo@gmail.com",
											"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
											"id": "ocQHyuzHvysMo5N5VsXc",
											"locationId": "C2QujeCh8ZnC7al2InWR",
											"source": "xyz form",
											"tags": ["magna ut sint labore lab", "Duis nulla cillum"],
											"timezone": "Asia/Calcutta"
										},
										{
											"__moreField__": "cupidatat sit anim",
											"country": "DE",
											"customField": [
												{
													"id": "MgobCB14YMVKuE4Ka8p1",
													"value": "Duis Excepteur cupidatat d"
												},
												{
													"id": "MgobCB14YMVKuE4Ka8p1",
													"value": "pariatur"
												}
											],
											"dateAdded": "2020-10-29T09:31:30.255Z",
											"email": "JohnDeo@gmail.com",
											"emailLowerCase": "johndeo@gmail.com",
											"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
											"id": "ocQHyuzHvysMo5N5VsXc",
											"locationId": "C2QujeCh8ZnC7al2InWR",
											"source": "xyz form",
											"tags": [
												"veniam amet velit commodo",
												"ullamco eu sit mollit"
											],
											"timezone": "Asia/Calcutta"
										}
									],
									"meta": {
										"currentPage": 2,
										"nextPage": 3,
										"nextPageUrl": "https://rest.gohighlevel.com/v1/contacts?limit=1&q=j&startAfter=1603870249758&startAfterId=UIaE1WjAwWKdlyD7osQI",
										"prevPage": 1,
										"startAfter": 1603870249758,
										"startAfterId": "UIaE1WjAwWKdlyD7osQI",
										"total": 250
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/",
				"tags": ["Contact"]
			},
			"post": {
				"description": "<h4>Create a contact.</h4><p>Create contact will allow this fields. ex:</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>firstName</td><td>string</td><td>John</td></tr><tr><td>lastName</td><td>string</td><td>Deo</td></tr><tr><td>name</td><td>string</td><td>John Deo</td></tr><tr><td>email</td><td>string</td><td>johndeo@gmail.com</td></tr><tr><td>phone</td><td>string</td><td>+1 888-888-8888</td></tr><tr><td>address1</td><td>long</td><td>Tonkawa Trail W</td></tr><tr><td>city</td><td>string</td><td>Austin</td></tr><tr><td>state</td><td>string</td><td>Texas</td></tr><tr><td>postalCode</td><td>string</td><td>45001</td></tr><tr><td>website</td><td>string(url)</td><td>https://www.google.com</td></tr><tr><td>timezone</td><td>string</td><td>America/Chihuahua</td></tr><tr><td>dnd</td><td>boolean</td><td><code>true</code></td></tr><tr><td>tags</td><td>array</td><td><code>[\"tag1\", \"tag2\"]</code></td></tr><tr><td>customField</td><td>object</td><td><code>{\"3r6dEOnsApNaKIhnFM6u\": \"Value 1\", \"MgobCB14YMVKuE4Ka8p1\": \"Value 2\"}</code>. <strong>Notes:</strong> <code>3r6dEOnsApNaKIhnFM6u</code> and <code>MgobCB14YMVKuE4Ka8p1</code> is a custom field id. You can find it using *Custom Fields* endpoints.</td></tr><tr><td>source</td><td>string</td><td>Public API</td></tr></tbody></table><br /><strong>Validation:</strong><p><strong>Email</strong> or <strong>Phone</strong> are required to create contact <br /><br /> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"address1": "3535 1st St N",
									"city": "Dolomite",
									"companyName": "DGS VolMAX",
									"country": "US",
									"customField": {
										"__custom_field_id__": "exercitation"
									},
									"dateOfBirth": "1990-09-25",
									"email": "john@deo.com",
									"firstName": "John",
									"lastName": "Deo",
									"name": "John Deo",
									"phone": "+18887324197",
									"postalCode": "35061",
									"source": "public api",
									"state": "AL",
									"tags": ["aute consequat ad ea", "dolor sed"],
									"website": "35061"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"contact": {
										"__moreField__": "consequat",
										"country": "DE",
										"customField": [
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "ea laboris consectetur elit sit"
											},
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "incididunt cupidatat nostrud qu"
											}
										],
										"dateAdded": "2020-10-29T09:31:30.255Z",
										"email": "JohnDeo@gmail.com",
										"emailLowerCase": "johndeo@gmail.com",
										"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
										"id": "ocQHyuzHvysMo5N5VsXc",
										"locationId": "C2QujeCh8ZnC7al2InWR",
										"source": "xyz form",
										"tags": [
											"laboris esse ut irure",
											"eiusmod exercitation irure ut"
										],
										"timezone": "Asia/Calcutta"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"email or phone": {
										"message": "The email or phone field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/",
				"tags": ["Contact"]
			}
		},
		"/v1/contacts/lookup": {
			"get": {
				"description": "<h4>Search contact by email or phone number.</h4> <p>If you will pass email or phone, it will try find and give contacts based on that.<p><p>OR If you will pass both first it will try to find contact with email first and if it is not able to find contact then it will try to find the match based on the phone.</p><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p> <strong>Validation:</strong><p><strong>Email</strong> or <strong>Phone</strong> are required to lookup contact.</p>",
				"parameters": [
					{
						"description": "(Required) Contact email",
						"example": "john@deo.com",
						"in": "query",
						"name": "email",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Contact phone",
						"example": "+491971259866",
						"in": "query",
						"name": "phone",
						"schema": {
							"type": "number"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"contacts": [
										{
											"__moreField__": "exercitation nostrud ea",
											"country": "DE",
											"customField": [
												{
													"id": "MgobCB14YMVKuE4Ka8p1",
													"value": "quis Excepteur nisi officia"
												},
												{
													"id": "MgobCB14YMVKuE4Ka8p1",
													"value": "laborum"
												}
											],
											"dateAdded": "2020-10-29T09:31:30.255Z",
											"email": "JohnDeo@gmail.com",
											"emailLowerCase": "johndeo@gmail.com",
											"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
											"id": "ocQHyuzHvysMo5N5VsXc",
											"locationId": "C2QujeCh8ZnC7al2InWR",
											"source": "xyz form",
											"tags": ["et incidi", "nulla eu commodo aliqua"],
											"timezone": "Asia/Calcutta"
										},
										{
											"__moreField__": "qui dolor Lorem",
											"country": "DE",
											"customField": [
												{
													"id": "MgobCB14YMVKuE4Ka8p1",
													"value": "consequat tempor sed cillum"
												},
												{
													"id": "MgobCB14YMVKuE4Ka8p1",
													"value": "occaecat anim"
												}
											],
											"dateAdded": "2020-10-29T09:31:30.255Z",
											"email": "JohnDeo@gmail.com",
											"emailLowerCase": "johndeo@gmail.com",
											"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
											"id": "ocQHyuzHvysMo5N5VsXc",
											"locationId": "C2QujeCh8ZnC7al2InWR",
											"source": "xyz form",
											"tags": ["deserunt sed est", "consequat id irure"],
											"timezone": "Asia/Calcutta"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"email or phone": {
										"message": "The email or phone field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/lookup",
				"tags": ["Contact"]
			}
		},
		"/v1/contacts/{contactId}/appointments/": {
			"get": {
				"description": "<h4>Get contact appointments.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/appointments/",
				"tags": ["Contact > Contact Appointment"]
			}
		},
		"/v1/contacts/{contactId}/campaigns/remove-all": {
			"delete": {
				"description": "<h4>Remove contact from every campaign.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"tags": {
										"message": "The tags field is mandatory.",
										"rules": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/campaigns/remove-all",
				"tags": ["Contact > Contact Campaign"]
			}
		},
		"/v1/contacts/{contactId}/campaigns/{campaignId}": {
			"delete": {
				"description": "<h4>Remove contact from campaign.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Campaign Id",
						"example": "Y2I9XM7aO1hncuSOlc9L",
						"in": "path",
						"name": "campaignId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"tags": {
										"message": "The tags field is mandatory.",
										"rules": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/campaigns/:campaignId",
				"tags": ["Contact > Contact Campaign"]
			},
			"post": {
				"description": "<h4>Add contact to campaign.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Campaign Id",
						"example": "Y2I9XM7aO1hncuSOlc9L",
						"in": "path",
						"name": "campaignId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"tags": {
										"message": "The tags field is mandatory.",
										"rules": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/campaigns/:campaignId",
				"tags": ["Contact > Contact Campaign"]
			}
		},
		"/v1/contacts/{contactId}/notes/": {
			"get": {
				"description": "<h4>Get all contact notes.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"notes": [
										{
											"body": "Loram ipsum",
											"createdAt": "2020-10-20T12:52:17.561Z",
											"createdBy": "Loram ipsum",
											"id": "Lj371SHlVMyfVlMcKiuk"
										},
										{
											"body": "Loram ipsum",
											"createdAt": "2020-10-20T12:52:17.561Z",
											"createdBy": "Loram ipsum",
											"id": "Lj371SHlVMyfVlMcKiuk"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/notes/",
				"tags": ["Note"]
			},
			"post": {
				"description": "<h4>Create Notes.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"body": "lorem ipsum",
									"userId": "GCs5KuzPqTls7vWclkEV"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"body": "Loram ipsum",
									"createdAt": "2020-10-20T12:52:17.561Z",
									"createdBy": "Loram ipsum",
									"id": "Lj371SHlVMyfVlMcKiuk"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"body": {
										"message": "The body field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/notes/",
				"tags": ["Note"]
			}
		},
		"/v1/contacts/{contactId}/notes/{noteId}": {
			"delete": {
				"description": "<h4>Delete one of Notes.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Note Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "noteId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/notes/:noteId",
				"tags": ["Note"]
			},
			"get": {
				"description": "<h4>Get note by id.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Note Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "noteId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"body": "Loram ipsum",
									"createdAt": "2020-10-20T12:52:17.561Z",
									"createdBy": "Loram ipsum",
									"id": "Lj371SHlVMyfVlMcKiuk"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/notes/:noteId",
				"tags": ["Note"]
			},
			"put": {
				"description": "<h4>Update Note.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Note Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "noteId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"body": "lorem ipsum",
									"userId": "GCs5KuzPqTls7vWclkEV"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"body": "Loram ipsum",
									"createdAt": "2020-10-20T12:52:17.561Z",
									"createdBy": "Loram ipsum",
									"id": "Lj371SHlVMyfVlMcKiuk"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"body": {
										"message": "The body field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/notes/:noteId",
				"tags": ["Note"]
			}
		},
		"/v1/contacts/{contactId}/tags/": {
			"delete": {
				"description": "<h4>Delete tags from the contact.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"tags": ["consequat", "culpa ut"]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"tags": {
										"message": "The tags field is mandatory.",
										"rules": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/tags/",
				"tags": ["Contact > Contact Tag"]
			},
			"post": {
				"description": "<h4>Add Tags on contacts.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"tags": ["dolore cillum", "ex proident cillum sed sint"]
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"tags": ["velit exer", "sed ad"]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"tags": {
										"message": "The tags field is mandatory.",
										"rules": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/tags/",
				"tags": ["Contact > Contact Tag"]
			}
		},
		"/v1/contacts/{contactId}/tasks/": {
			"get": {
				"description": "<h4>Get all contact tasks.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"tasks": [
										{
											"assignedTo": "hxHGVRb1YJUscrCB8eXK",
											"description": "Loram ipsum",
											"dueDate": "2020-10-25T11:00:00Z",
											"id": "Lj371SHlVMyfVlMcKiuk",
											"isCompleted": false,
											"title": "Loram ipsum"
										},
										{
											"assignedTo": "hxHGVRb1YJUscrCB8eXK",
											"description": "Loram ipsum",
											"dueDate": "2020-10-25T11:00:00Z",
											"id": "Lj371SHlVMyfVlMcKiuk",
											"isCompleted": false,
											"title": "Loram ipsum"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/tasks/",
				"tags": ["Task"]
			},
			"post": {
				"description": "<h4>Create Tasks.</h4> <p><strong>Status:</strong> (optional) Field have following options.</p><ul><li>completed</li><li>incompleted (default)</li></ul><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"assignedTo": "hxHGVRb1YJUscrCB8eXK",
									"description": "loram ipsum",
									"dueDate": "2020-10-25T11:00:00Z",
									"status": "incompleted",
									"title": "First Task"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"assignedTo": "hxHGVRb1YJUscrCB8eXK",
									"description": "Loram ipsum",
									"dueDate": "2020-10-25T11:00:00Z",
									"id": "Lj371SHlVMyfVlMcKiuk",
									"isCompleted": false,
									"title": "Loram ipsum"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"dueDate": {
										"message": "The due date field is mandatory.",
										"rule": "required"
									},
									"title": {
										"message": "The title field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/tasks/",
				"tags": ["Task"]
			}
		},
		"/v1/contacts/{contactId}/tasks/{taskId}": {
			"delete": {
				"description": "<h4>Delete one of Task.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Task Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "taskId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/tasks/:taskId",
				"tags": ["Task"]
			},
			"get": {
				"description": "<h4>Get task by id.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Task Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "taskId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"assignedTo": "hxHGVRb1YJUscrCB8eXK",
									"description": "Loram ipsum",
									"dueDate": "2020-10-25T11:00:00Z",
									"id": "Lj371SHlVMyfVlMcKiuk",
									"isCompleted": false,
									"title": "Loram ipsum"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/tasks/:taskId",
				"tags": ["Task"]
			},
			"put": {
				"description": "<h4>Update Task.</h4><p><p><strong>Status:</strong> (optional) Field have following options.</p><ul><li>completed</li><li>incompleted (default)</li></ul><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Task Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "taskId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"assignedTo": "hxHGVRb1YJUscrCB8eXK",
									"description": "loram ipsum",
									"dueDate": "2020-10-25T11:00:00Z",
									"status": "incompleted",
									"title": "First Task"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"assignedTo": "hxHGVRb1YJUscrCB8eXK",
									"description": "Loram ipsum",
									"dueDate": "2020-10-25T11:00:00Z",
									"id": "Lj371SHlVMyfVlMcKiuk",
									"isCompleted": false,
									"title": "Loram ipsum"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"dueDate": {
										"message": "The due date field is mandatory.",
										"rule": "required"
									},
									"title": {
										"message": "The title field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/tasks/:taskId",
				"tags": ["Task"]
			}
		},
		"/v1/contacts/{contactId}/tasks/{taskId}/status": {
			"put": {
				"description": "<h4>Update Task status.</h4><p><strong>Status:</strong> Field have following option</p><ul><li>completed</li><li>incompleted</li></ul><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Task Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "taskId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"status": "completed"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"assignedTo": "hxHGVRb1YJUscrCB8eXK",
									"description": "Loram ipsum",
									"dueDate": "2020-10-25T11:00:00Z",
									"id": "Lj371SHlVMyfVlMcKiuk",
									"isCompleted": false,
									"title": "Loram ipsum"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"dueDate": {
										"message": "The due date field is mandatory.",
										"rule": "required"
									},
									"title": {
										"message": "The title field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/tasks/:taskId/status",
				"tags": ["Task"]
			}
		},
		"/v1/contacts/{contactId}/workflow/{workflowId}": {
			"post": {
				"description": "<h4>Add contact to the workflow.</h4><p>Adding contact into workflow will allow these fields.</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>eventStartTime</td><td>string(datetime with timezone offset).</td><td>2021-06-23T03:30:00+01:00</td></tr></tbody></table> <br><strong>Note:</strong><p>This request will add contact in queue to be added in workflow. This will not get to be added realtime.</p><br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Contact Id",
						"example": "sx6wyHhbFdRXh302LLNR",
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Workflow Id",
						"example": "78559bb3-b920-461e-b010-7b2a2816d2a9",
						"in": "path",
						"name": "workflowId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"eventStartTime": "2021-05-26T11:33:49.000Z"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"contactId": "The contact id is invalid.",
									"workflowId": "The workflow id is invalid."
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:contactId/workflow/:workflowId",
				"tags": ["Contact > Contact Workflow"]
			}
		},
		"/v1/contacts/{id}": {
			"delete": {
				"description": "<h4>Delete contact by id.</h4><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"text/plain": {
								"example": "",
								"schema": {
									"type": "string"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "text/plain",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"id": {
										"message": "The contact id is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:id",
				"tags": ["Contact"]
			},
			"get": {
				"description": "<h4>Get contact by id.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Contact Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"contact": {
										"__moreField__": "consequat",
										"country": "DE",
										"customField": [
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "ea laboris consectetur elit sit"
											},
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "incididunt cupidatat nostrud qu"
											}
										],
										"dateAdded": "2020-10-29T09:31:30.255Z",
										"email": "JohnDeo@gmail.com",
										"emailLowerCase": "johndeo@gmail.com",
										"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
										"id": "ocQHyuzHvysMo5N5VsXc",
										"locationId": "C2QujeCh8ZnC7al2InWR",
										"source": "xyz form",
										"tags": [
											"laboris esse ut irure",
											"eiusmod exercitation irure ut"
										],
										"timezone": "Asia/Calcutta"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"id": {
										"message": "The contact id is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:id",
				"tags": ["Contact"]
			},
			"put": {
				"description": "<h4>Update a contact.</h4><p>Update contact will allow this fields. ex:</p> <table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>firstName</td><td>string</td><td>John</td></tr><tr><td>lastName</td><td>string</td><td>Deo</td></tr><tr><td>name</td><td>string</td><td>John Deo</td></tr><tr><td>email</td><td>string</td><td>johndeo@gmail.com</td></tr><tr><td>phone</td><td>string</td><td>+1 888-888-8888</td></tr><tr><td>address1</td><td>long</td><td>Tonkawa Trail W</td></tr><tr><td>city</td><td>string</td><td>Austin</td></tr><tr><td>state</td><td>string</td><td>Texas</td></tr><tr><td>postalCode</td><td>string</td><td>45001</td></tr><tr><td>website</td><td>string(url)</td><td>https://www.google.com</td></tr><tr><td>timezone</td><td>string</td><td>America/Chihuahua</td></tr><tr><td>dnd</td><td>boolean</td><td><code>true</code></td></tr><tr><td>tags</td><td>array</td><td><code>[\"tag1\", \"tag2\"]</code></td></tr><tr><td>customField</td><td>object</td><td><code>{\"3r6dEOnsApNaKIhnFM6u\": \"Value 1\", \"MgobCB14YMVKuE4Ka8p1\": \"Value 2\"}</code>. <strong>Notes:</strong> <code>3r6dEOnsApNaKIhnFM6u</code> and <code>MgobCB14YMVKuE4Ka8p1</code> is a custom field id. You can find it using *Custom Fields* endpoints.</td></tr><tr><td>source</td><td>string</td><td>Public API</td></tr></tbody></table><br /><strong>Validation:</strong><p><strong>Email</strong> or <strong>Phone</strong> are required to update contact <br /><br /> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Contact Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"address1": "3535 1st St N",
									"city": "Dolomite",
									"companyName": "DGS VolMAX",
									"country": "US",
									"customField": {
										"__custom_field_id__": "ea d"
									},
									"dateOfBirth": "1990-09-25",
									"email": "john@deo.com",
									"firstName": "John",
									"lastName": "Deo",
									"name": "John Deo",
									"phone": "+18887324197",
									"postalCode": "35061",
									"source": "public api",
									"state": "AL",
									"tags": ["ea deserunt culpa laboris", "quis in veniam qui"],
									"website": "35061"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"contact": {
										"__moreField__": "consequat",
										"country": "DE",
										"customField": [
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "ea laboris consectetur elit sit"
											},
											{
												"id": "MgobCB14YMVKuE4Ka8p1",
												"value": "incididunt cupidatat nostrud qu"
											}
										],
										"dateAdded": "2020-10-29T09:31:30.255Z",
										"email": "JohnDeo@gmail.com",
										"emailLowerCase": "johndeo@gmail.com",
										"fingerprint": "91f4f0e0-e2dd-11ea-9b16-53b2d72e8a24",
										"id": "ocQHyuzHvysMo5N5VsXc",
										"locationId": "C2QujeCh8ZnC7al2InWR",
										"source": "xyz form",
										"tags": [
											"laboris esse ut irure",
											"eiusmod exercitation irure ut"
										],
										"timezone": "Asia/Calcutta"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"id": {
										"message": "The contact id is invalid.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/contacts/:id",
				"tags": ["Contact"]
			}
		},
		"/v1/custom-fields/": {
			"get": {
				"description": "<h4>Get all available custom fields.</h4><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"customFields": [
										{
											"dateType": "SINGLE_OPTIONS",
											"fieldKey": "contact.select",
											"id": "ocQHyuzHvysMo5N5VsXc",
											"name": "Select",
											"picklistOptions": ["first", "first"],
											"placeholder": "Placeholder Text",
											"position": 0
										},
										{
											"dateType": "SINGLE_OPTIONS",
											"fieldKey": "contact.select",
											"id": "ocQHyuzHvysMo5N5VsXc",
											"name": "Select",
											"picklistOptions": ["first", "first"],
											"placeholder": "Placeholder Text",
											"position": 0
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/custom-fields/",
				"tags": ["Custom Field"]
			},
			"post": {
				"description": "<h4>Creating Custom Field.</h4><p>Data Type Fields will allow these options. ex:</p><strong>Options:</strong><ul><li>TEXT</li><li>LARGE_TEXT</li><li>NUMERICAL</li><li>PHONE</li><li>MONETORY</li><li>CHECKBOX</li><li>SINGLE_OPTIONS</li><li>MULTIPLE_OPTIONS</li><li>FLOAT</li><li>TIME</li><li>DATE</li><li>TEXTBOX_LIST</li><li>FILE_UPLOAD</li><li>SIGNATURE</li></ul><strong>Validation:</strong><p><strong>Name</strong> and <strong>Date Type</strong> are required to create every custom field.<p>On every data type of field have diffrent validation rules. These are the different validation rules.</p><strong>FILE_UPLOAD:</strong><ul><li><strong>acceptedFormat</strong> *(required) This will allow array of file format.<ul><li>.pdf</li><li>.docx</li><li>.jpeg</li><li>.png</li><li>.gif</li><li>.csv</li><li>all</li></ul></li><li><strong>isMulitpalFile</strong> (optional) it allow <code>true</code> or <code>false</code>. If you want to allow multipal files pass <code>true</code> </li><li><strong>maxNumberOfFiles</strong> (options) It will allow maximum these number of files.</li></ul><strong>SINGLE_OPTIONS / MULTIPLE_OPTIONS / CHECKBOX:</strong><br /><ul><li><strong>options</strong> *(required) This will allow array of options.</li></ul><strong>TEXTBOX_LIST</strong><ul><li><strong>textBoxListOptions:</strong> (required) This will allow array of textbox list. Array will contanis label and prefillValue. ex.: <code>{label\": \"Hello\", \"prefillValue\": \"value\"}</code></li></ul>  <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"acceptedFormat": [".pdf", ".docx", ".jpeg"],
									"dataType": "TEXT",
									"isMultipalFile": false,
									"maxNumberOfFiles": 2,
									"name": "Custom Field",
									"options": ["first option", "last option"],
									"placeholder": "Placeholder Text",
									"position": 0,
									"textBoxListOptions": [
										{
											"label": "First",
											"prefillValue": ""
										},
										{
											"label": "First",
											"prefillValue": ""
										}
									]
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"dateType": "SINGLE_OPTIONS",
									"fieldKey": "contact.select",
									"id": "ocQHyuzHvysMo5N5VsXc",
									"name": "Select",
									"picklistOptions": ["first", "first"],
									"placeholder": "Placeholder Text",
									"position": 0
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"dataType": {
										"message": "The data type field is mandatory.",
										"rule": "required"
									},
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									},
									"options or acceptedFormat or textBoxListOptions": {
										"message": "The options or acceptedFormat or textBoxListOptions field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/custom-fields/",
				"tags": ["Custom Field"]
			}
		},
		"/v1/custom-fields/{customFieldId}": {
			"delete": {
				"description": "<h4>Delete one of custom fields.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Custom Field Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "customFieldId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"customFieldId": {
										"message": "The custom field id is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/custom-fields/:customFieldId",
				"tags": ["Custom Field"]
			},
			"get": {
				"description": "<h4>Get custom fields by id</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Custom Field Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "customFieldId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"dateType": "SINGLE_OPTIONS",
									"fieldKey": "contact.select",
									"id": "ocQHyuzHvysMo5N5VsXc",
									"name": "Select",
									"picklistOptions": ["first", "first"],
									"placeholder": "Placeholder Text",
									"position": 0
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/custom-fields/:customFieldId",
				"tags": ["Custom Field"]
			},
			"put": {
				"description": "<h4>Updating Custom Field.</h4><p>Data Type Fields will allow these options. ex:</p><strong>Options:</strong><ul><li>TEXT</li><li>LARGE_TEXT</li><li>NUMERICAL</li><li>PHONE</li><li>MONETORY</li><li>CHECKBOX</li><li>SINGLE_OPTIONS</li><li>MULTIPLE_OPTIONS</li><li>FLOAT</li><li>TIME</li><li>DATE</li><li>TEXTBOX_LIST</li><li>FILE_UPLOAD</li><li>SIGNATURE</li></ul><strong>Validation:</strong><p><strong>Name</strong> and <strong>Date Type</strong> are required to create every custom field.<p>On every data type of field have diffrent validation rules. These are the different validation rules.</p><strong>FILE_UPLOAD:</strong><ul><li><strong>acceptedFormat</strong> *(required) This will allow array of file format.<ul><li>.pdf</li><li>.docx</li><li>.jpeg</li><li>.png</li><li>.gif</li><li>.csv</li><li>all</li></ul></li><li><strong>isMulitpalFile</strong> (optional) it allow <code>true</code> or <code>false</code>. If you want to allow multipal files pass <code>true</code> </li><li><strong>maxNumberOfFiles</strong> (options) It will allow maximum these number of files.</li></ul><strong>SINGLE_OPTIONS / MULTIPLE_OPTIONS / CHECKBOX:</strong><br /><ul><li><strong>options</strong> *(required) This will allow array of options.</li></ul><strong>TEXTBOX_LIST</strong><ul><li><strong>textBoxListOptions:</strong> (required) This will allow array of textbox list. Array will contanis label and prefillValue. ex.: <code>{label\": \"Hello\", \"prefillValue\": \"value\"}</code></li></ul>  <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Custom Field Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "customFieldId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"acceptedFormat": [".pdf", ".docx", ".jpeg"],
									"dataType": "TEXT",
									"isMultipalFile": false,
									"maxNumberOfFiles": 2,
									"name": "Custom Field",
									"options": ["first option", "last option"],
									"placeholder": "Placeholder Text",
									"position": 0,
									"textBoxListOptions": [
										{
											"label": "First",
											"prefillValue": ""
										},
										{
											"label": "First",
											"prefillValue": ""
										}
									]
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"dateType": "SINGLE_OPTIONS",
									"fieldKey": "contact.select",
									"id": "ocQHyuzHvysMo5N5VsXc",
									"name": "Select",
									"picklistOptions": ["first", "first"],
									"placeholder": "Placeholder Text",
									"position": 0
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"dataType": {
										"message": "The data type field is mandatory.",
										"rule": "required"
									},
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									},
									"options or acceptedFormat or textBoxListOptions": {
										"message": "The options or acceptedFormat or textBoxListOptions field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/custom-fields/:customFieldId",
				"tags": ["Custom Field"]
			}
		},
		"/v1/custom-values/": {
			"get": {
				"description": "<h4>Get all available custom values.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"customFields": [
										{
											"fieldKey": "{{ custom_value.test }}",
											"id": "ocQHyuzHvysMo5N5VsXc",
											"name": "Select",
											"value": "test"
										},
										{
											"fieldKey": "{{ custom_value.test }}",
											"id": "ocQHyuzHvysMo5N5VsXc",
											"name": "Select",
											"value": "test"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/custom-values/",
				"tags": ["Custom Value"]
			},
			"post": {
				"description": "<h4>Create custom value.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"name": "Custom Field",
									"value": "Value"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"fieldKey": "{{ custom_value.test }}",
									"id": "ocQHyuzHvysMo5N5VsXc",
									"name": "Select",
									"value": "test"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									},
									"value": {
										"message": "The value field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/custom-values/",
				"tags": ["Custom Value"]
			}
		},
		"/v1/custom-values/{customValueId}": {
			"delete": {
				"description": "<h4>Delete one of custom value.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Custom Value Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "customValueId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"customValueId": {
										"message": "The custom field id is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/custom-values/:customValueId",
				"tags": ["Custom Value"]
			},
			"get": {
				"description": "<h4>Get custom value by id.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Custom Value Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "customValueId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"fieldKey": "{{ custom_value.test }}",
									"id": "ocQHyuzHvysMo5N5VsXc",
									"name": "Select",
									"value": "test"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/custom-values/:customValueId",
				"tags": ["Custom Value"]
			},
			"put": {
				"description": "<h4>Update custom value.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Custom Value Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "customValueId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"name": "Custom Field",
									"value": "Value"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"fieldKey": "{{ custom_value.test }}",
									"id": "ocQHyuzHvysMo5N5VsXc",
									"name": "Select",
									"value": "test"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									},
									"value": {
										"message": "The value field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/custom-values/:customValueId",
				"tags": ["Custom Value"]
			}
		},
		"/v1/forms/": {
			"get": {
				"description": "<h4>Get Forms.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"forms": [
										{
											"id": "uP9CBUzKKZkP5BtkHeK3",
											"name": "Form 1"
										},
										{
											"id": "uP9CBUzKKZkP5BtkHeK3",
											"name": "Form 1"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/forms/",
				"tags": ["Form"]
			}
		},
		"/v1/forms/submissions": {
			"get": {
				"description": "<h4>Get form submissions.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "Page No. By default it will be 1",
						"example": "1",
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "Limit Per Page records count. will allow maximum up to 100 and default will be 20",
						"example": "20",
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "Filter submission by form id",
						"example": "jjusM6EOngDExnbo2DbU",
						"in": "query",
						"name": "formId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Filter by contactId, name, email or phone no.",
						"example": "john@deo.com",
						"in": "query",
						"name": "q",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Get submission by starting of this date. By default it will be same date of last month.",
						"example": "2020-11-14",
						"in": "query",
						"name": "startAt",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Get submission by ending of this date. By default it will be current date.",
						"example": "2020-12-14",
						"in": "query",
						"name": "endAt",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"meta": {
										"currentPage": 2,
										"nextPage": 3,
										"prevPage": 1,
										"total": 250
									},
									"submissions": [
										{
											"__custom_field_id__": "20",
											"__submissions_other_field__": "john@deo.com",
											"contactId": "9NkT25Vor1v4aQatFsv2",
											"createdAt": "2020-11-01T18:02:21.000Z",
											"formId": "jjusM6EOngDExnbo2DbU",
											"id": "be759b9a-c3ec-4b29-ba07-fc3c89c77673",
											"pageDetails": {
												"fbclid": "IwAR1JoTTltt3EKJE3O-MrQij_lTeA6BKGTy8M2wKepSzs4oUbTYhL2Lns18w",
												"referrer": "http://m.facebook.com",
												"source": "Social Media",
												"url": "https://www.gohighlevel.com/"
											}
										},
										{
											"__custom_field_id__": "20",
											"__submissions_other_field__": "john@deo.com",
											"contactId": "9NkT25Vor1v4aQatFsv2",
											"createdAt": "2020-11-01T18:02:21.000Z",
											"formId": "jjusM6EOngDExnbo2DbU",
											"id": "be759b9a-c3ec-4b29-ba07-fc3c89c77673",
											"pageDetails": {
												"fbclid": "IwAR1JoTTltt3EKJE3O-MrQij_lTeA6BKGTy8M2wKepSzs4oUbTYhL2Lns18w",
												"referrer": "http://m.facebook.com",
												"source": "Social Media",
												"url": "https://www.gohighlevel.com/"
											}
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/forms/submissions",
				"tags": ["Form"]
			}
		},
		"/v1/links/": {
			"get": {
				"description": "<h4>Get Links.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"links": [
										{
											"fieldKey": "{{trigger_link.ClK3HFY3WH9L5McNwyy1}}",
											"id": "ikMFj5x3rrKOQgu0k8y1",
											"locationId": "Lx1EI6YIgQYMQi0ytFXv",
											"name": "Trigger Link",
											"redirectTo": "https://www.google.com/"
										},
										{
											"fieldKey": "{{trigger_link.ClK3HFY3WH9L5McNwyy1}}",
											"id": "ikMFj5x3rrKOQgu0k8y1",
											"locationId": "Lx1EI6YIgQYMQi0ytFXv",
											"name": "Trigger Link",
											"redirectTo": "https://www.google.com/"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/links/",
				"tags": ["Trigger Links"]
			},
			"post": {
				"description": "<h4>Create trigger link.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"name": "first tag",
									"redirectTo": "https://www.google.com/"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"fieldKey": "{{trigger_link.ClK3HFY3WH9L5McNwyy1}}",
									"id": "ikMFj5x3rrKOQgu0k8y1",
									"locationId": "Lx1EI6YIgQYMQi0ytFXv",
									"name": "Trigger Link",
									"redirectTo": "https://www.google.com/"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									},
									"redirectTo": {
										"message": "The redirect to field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/links/",
				"tags": ["Trigger Links"]
			}
		},
		"/v1/links/{linkId}": {
			"delete": {
				"description": "<h4>Delete one of trigger links.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Link Id Id",
						"example": "ClK3HFY3WH9L5McNwyy1",
						"in": "path",
						"name": "linkId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"linkId": {
										"message": "The link id is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/links/:linkId",
				"tags": ["Trigger Links"]
			},
			"put": {
				"description": "<h4>Update trigger links.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Link Id",
						"example": "ClK3HFY3WH9L5McNwyy1",
						"in": "path",
						"name": "linkId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"name": "first tag",
									"redirectTo": "https://www.google.com/"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"fieldKey": "{{trigger_link.ClK3HFY3WH9L5McNwyy1}}",
									"id": "ikMFj5x3rrKOQgu0k8y1",
									"locationId": "Lx1EI6YIgQYMQi0ytFXv",
									"name": "Trigger Link",
									"redirectTo": "https://www.google.com/"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"linkId": {
										"message": "The link id is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/links/:linkId",
				"tags": ["Trigger Links"]
			}
		},
		"/v1/locations/": {
			"get": {
				"description": "<h4>Get all agency location.</h4> <strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"locations": [
										{
											"address": "3500 Deer Creek Road",
											"business": {
												"address": "3500 Deer Creek Road",
												"city": "Palo Alto",
												"country": "US",
												"name": "Tesla inc",
												"postalCode": "94304",
												"state": "CA",
												"timezone": "US/Central",
												"website": "https://www.tesla.com"
											},
											"city": "Palo Alto",
											"country": "US",
											"email": "john@deo.com",
											"firstName": "John",
											"id": "i2SpAtBVHSVea1sL6oah",
											"lastName": "Deo",
											"name": "Tesla inc",
											"phone": "+1202-555-0107",
											"postalCode": "94304",
											"settings": {
												"allowDuplicateContact": false,
												"allowDuplicateOpportunity": false,
												"allowFacebookNameMerge": false,
												"disableContactTimezone": false
											},
											"social": {
												"blogRss": "https://rss.xyz.com",
												"facebookUrl": "https://facebook.com/groups/XXX",
												"foursquare": "https://foursquare.com/groups/XXX",
												"googlePlaceId": "redfdfdere",
												"googlePlus": "https://groups.google.com/d/XXX",
												"instagram": "https://instagram.com/XXX",
												"linkedIn": "https://www.linkedin.com/groups/XXX/profile",
												"pinterest": "https://pinterest.com/XXX",
												"twitter": "https://twitter.com/XXX",
												"yelp": "https://yelp.com/XXX",
												"youtube": "https://youtube.com/XXX"
											},
											"state": "CA",
											"timezone": "US/Central",
											"website": "https://www.tesla.com"
										},
										{
											"address": "3500 Deer Creek Road",
											"business": {
												"address": "3500 Deer Creek Road",
												"city": "Palo Alto",
												"country": "US",
												"name": "Tesla inc",
												"postalCode": "94304",
												"state": "CA",
												"timezone": "US/Central",
												"website": "https://www.tesla.com"
											},
											"city": "Palo Alto",
											"country": "US",
											"email": "john@deo.com",
											"firstName": "John",
											"id": "i2SpAtBVHSVea1sL6oah",
											"lastName": "Deo",
											"name": "Tesla inc",
											"phone": "+1202-555-0107",
											"postalCode": "94304",
											"settings": {
												"allowDuplicateContact": false,
												"allowDuplicateOpportunity": false,
												"allowFacebookNameMerge": false,
												"disableContactTimezone": false
											},
											"social": {
												"blogRss": "https://rss.xyz.com",
												"facebookUrl": "https://facebook.com/groups/XXX",
												"foursquare": "https://foursquare.com/groups/XXX",
												"googlePlaceId": "redfdfdere",
												"googlePlus": "https://groups.google.com/d/XXX",
												"instagram": "https://instagram.com/XXX",
												"linkedIn": "https://www.linkedin.com/groups/XXX/profile",
												"pinterest": "https://pinterest.com/XXX",
												"twitter": "https://twitter.com/XXX",
												"yelp": "https://yelp.com/XXX",
												"youtube": "https://youtube.com/XXX"
											},
											"state": "CA",
											"timezone": "US/Central",
											"website": "https://www.tesla.com"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/locations/",
				"tags": ["Location"]
			},
			"post": {
				"description": "<h4>Create a Location.</h4><p>Required JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>businessName</td><td>string</td><td>ACME Agency</td></tr></tbody></table><p>Allowed JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>address</td><td>string</td><td>3500 Deer Creek Road</td></tr><tr><td>city</td><td>string</td><td>Palo Alto</td></tr><tr><td>state</td><td>string</td><td>CA</td></tr><tr><td>country</td><td>string</td><td>US</td></tr><tr><td>postalCode</td><td>string</td><td>94304</td></tr><tr><td>website</td><td>string</td><td>https://www.tesla.com</td></tr><tr><td>timezone</td><td>string</td><td>US/Central</td></tr><tr><td>firstName</td><td>string</td><td>John</td></tr><tr><td>lastName</td><td>string</td><td>Deno</td></tr><tr><td>email</td><td>string</td><td>johndeo@gmail.com</td></tr><tr><td>phone</td><td>string</td><td>+1202-555-0107</td></tr><tr><td>settings</td><td>object</td><td><code>{ \"allowDuplicateContact\": false, \"allowDuplicateOpportunity\": false, \"allowFacebookNameMerge\": false, \"disableContactTimezone\": false }</code></td></tr><tr><td>twilio</td><td>object</td><td><code>{ \"sid\": \"AC_XXXXXXXXXXX\", \"authToken\": \"77_XXXXXXXXXXX\" }</code></td></tr><tr><td>snapshot</td><td>object</td><td><code>{ \"id\": \"XXXXXXXXXXX\", \"type\": \"vertical\" }</code></td></tr><tr><td>mailgun</td><td>object</td><td><code>{\"mailgun\": {\"apiKey\": \"key-XXXXXXXXXXX\", \"domain\": \"replies.yourdomain.com\"}</code></td></tr></tbody></table><p>Twilio field required two field to setup</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>sid</td><td>string</td><td>AC_XXXXXXXXXXX (Twilio Account SID)</td></tr><tr><td>authToken</td><td>string</td><td>77_XXXXXXXXXXX (Twilio Auth Token)</td></tr></tbody></table><p>Snapshot field required two field to import</p><table><thead><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Option</th></thead><tbody><tr><td>id</td><td>string</td><td>XXXXXXXXXXX (Find it from snapshot api)</td><td></td></tr><tr><td>type</td><td>string</td><td>own</td><td><ul><li>own</li><li>imported</li></ul></td></tr></tbody></table><p>Mailgun field required two field to setup</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>apiKey</td><td>string</td><td>key-XXXXXXXXXXX</td><td></td></tr><tr><td>domain</td><td>string</td><td>replies.yourdomain.com</td></tr></tbody></table><p>Timezone field allowed options, Can grab it from the timezone list api.</p><br /><h5>Authorization:</h5><p>Provide your agency api key (Bearer Token). You can find it on Agency -&gt; Settings -&gt; API keys</p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"address": "3500 Deer Creek Road",
									"businessName": "Tesla inc",
									"city": "Palo Alto",
									"country": "US",
									"email": "john@deo.com",
									"firstName": "John",
									"lastName": "Deo",
									"mailgun": {
										"apiKey": "key-XXXXXXXXXXX",
										"domain": "replies.yourdomain.com"
									},
									"phone": "+1202-555-0107",
									"postalCode": "94304",
									"settings": {
										"allowDuplicateContact": false,
										"allowDuplicateOpportunity": false,
										"allowFacebookNameMerge": false,
										"disableContactTimezone": false
									},
									"snapshot": {
										"id": "XXXXXXXXXXX",
										"type": "vertical"
									},
									"social": {
										"blogRss": "https://rss.xyz.com",
										"facebookUrl": "https://facebook.com/groups/XXX",
										"foursquare": "https://foursquare.com/groups/XXX",
										"googlePlaceId": "redfdfdere",
										"googlePlus": "https://groups.google.com/d/XXX",
										"instagram": "https://instagram.com/XXX",
										"linkedIn": "https://www.linkedin.com/groups/XXX/profile",
										"pinterest": "https://pinterest.com/XXX",
										"twitter": "https://twitter.com/XXX",
										"yelp": "https://yelp.com/XXX",
										"youtube": "https://youtube.com/XXX"
									},
									"state": "CA",
									"timezone": "US/Central",
									"twilio": {
										"authToken": "77_XXXXXXXXXXX",
										"sid": "AC_XXXXXXXXXXX"
									},
									"website": "https://www.tesla.com"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"address": "3500 Deer Creek Road",
									"business": {
										"address": "3500 Deer Creek Road",
										"city": "Palo Alto",
										"country": "US",
										"email": "johndeo@gmail.com",
										"name": "Tesla inc",
										"postalCode": "94304",
										"state": "CA",
										"timezone": "US/Central",
										"website": "https://www.tesla.com"
									},
									"city": "Palo Alto",
									"country": "US",
									"email": "john@deo.com",
									"firstName": "John",
									"id": "i2SpAtBVHSVea1sL6oah",
									"lastName": "Deo",
									"name": "Tesla inc",
									"phone": "+1202-555-0107",
									"postalCode": "94304",
									"settings": {
										"allowDuplicateContact": false,
										"allowDuplicateOpportunity": false,
										"allowFacebookNameMerge": false,
										"disableContactTimezone": false
									},
									"social": {
										"blogRss": "https://rss.xyz.com",
										"facebookUrl": "https://facebook.com/groups/XXX",
										"foursquare": "https://foursquare.com/groups/XXX",
										"googlePlaceId": "redfdfdere",
										"googlePlus": "https://groups.google.com/d/XXX",
										"instagram": "https://instagram.com/XXX",
										"linkedIn": "https://www.linkedin.com/groups/XXX/profile",
										"pinterest": "https://pinterest.com/XXX",
										"twitter": "https://twitter.com/XXX",
										"yelp": "https://yelp.com/XXX",
										"youtube": "https://youtube.com/XXX"
									},
									"state": "CA",
									"timezone": "US/Central",
									"website": "https://www.tesla.com"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"address": {
										"message": "The address field is mandatory.",
										"rule": "required"
									},
									"businessName": {
										"message": "The business name field is mandatory.",
										"rule": "required"
									},
									"city": {
										"message": "The city field is mandatory.",
										"rule": "required"
									},
									"country": {
										"message": "The country field is mandatory.",
										"rule": "required"
									},
									"email": {
										"message": "The email field is mandatory.",
										"rule": "required"
									},
									"firstName": {
										"message": "The first name field is mandatory.",
										"rule": "required"
									},
									"lastName": {
										"message": "The last name field is mandatory.",
										"rule": "required"
									},
									"phone": {
										"message": "The email field is mandatory.",
										"rule": "required"
									},
									"postalCode": {
										"message": "The postal code field is mandatory.",
										"rule": "required"
									},
									"state": {
										"message": "The state field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/locations/",
				"tags": ["Location"]
			}
		},
		"/v1/locations/lookup": {
			"get": {
				"description": "<h4>Find location by email.</h4><strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"parameters": [
					{
						"description": "(Required) Email",
						"example": "john@deo.com",
						"in": "query",
						"name": "email",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"address": "3500 Deer Creek Road",
									"business": {
										"address": "3500 Deer Creek Road",
										"city": "Palo Alto",
										"country": "US",
										"email": "johndeo@gmail.com",
										"name": "Tesla inc",
										"postalCode": "94304",
										"state": "CA",
										"timezone": "US/Central",
										"website": "https://www.tesla.com"
									},
									"city": "Palo Alto",
									"country": "US",
									"email": "john@deo.com",
									"firstName": "John",
									"id": "i2SpAtBVHSVea1sL6oah",
									"lastName": "Deo",
									"name": "Tesla inc",
									"phone": "+1202-555-0107",
									"postalCode": "94304",
									"settings": {
										"allowDuplicateContact": false,
										"allowDuplicateOpportunity": false,
										"allowFacebookNameMerge": false,
										"disableContactTimezone": false
									},
									"social": {
										"blogRss": "https://rss.xyz.com",
										"facebookUrl": "https://facebook.com/groups/XXX",
										"foursquare": "https://foursquare.com/groups/XXX",
										"googlePlaceId": "redfdfdere",
										"googlePlus": "https://groups.google.com/d/XXX",
										"instagram": "https://instagram.com/XXX",
										"linkedIn": "https://www.linkedin.com/groups/XXX/profile",
										"pinterest": "https://pinterest.com/XXX",
										"twitter": "https://twitter.com/XXX",
										"yelp": "https://yelp.com/XXX",
										"youtube": "https://youtube.com/XXX"
									},
									"state": "CA",
									"timezone": "US/Central",
									"website": "https://www.tesla.com"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/locations/lookup",
				"tags": ["Location"]
			}
		},
		"/v1/locations/{locationId}": {
			"delete": {
				"description": "<h4>Delete location.</h4><p>Allowed fields in the query parameter.</p><table role=\"table\"><thead><tr><th>Fields</th><th>Allowed Options</th><th>Default value</th><th>Description</th></tr></thead><tbody><tr><td>deleteTwilioAccount</td><td><code>true</code> or <code>false</code></td><td><code>false</code></td><td>If you pass <code>true</code>, When deleting the subaccount. We delete Twilio subaccount (on Twilio side) as well.</td></tr></tbody></table><h5>Authorization:</h5><p>Provide your agency api key (Bearer Token). You can find it on Agency -&gt; Settings -&gt; API keys</p>",
				"parameters": [
					{
						"description": "Delete Twilio Account",
						"example": "false",
						"in": "query",
						"name": "deleteTwilioAccount",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"description": "(Required) Location Id",
						"example": "i2SpAtBVHSVea1sL6oah",
						"in": "path",
						"name": "locationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Success"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"locationId": {
										"message": "The location id is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/locations/:locationId",
				"tags": ["Location"]
			},
			"get": {
				"description": "<h4>Get location by location id.</h4><strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"parameters": [
					{
						"description": "(Required) Location Id",
						"example": "i2SpAtBVHSVea1sL6oah",
						"in": "path",
						"name": "locationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"address": "3500 Deer Creek Road",
									"business": {
										"address": "3500 Deer Creek Road",
										"city": "Palo Alto",
										"country": "US",
										"email": "johndeo@gmail.com",
										"name": "Tesla inc",
										"postalCode": "94304",
										"state": "CA",
										"timezone": "US/Central",
										"website": "https://www.tesla.com"
									},
									"city": "Palo Alto",
									"country": "US",
									"email": "john@deo.com",
									"firstName": "John",
									"id": "i2SpAtBVHSVea1sL6oah",
									"lastName": "Deo",
									"name": "Tesla inc",
									"phone": "+1202-555-0107",
									"postalCode": "94304",
									"settings": {
										"allowDuplicateContact": false,
										"allowDuplicateOpportunity": false,
										"allowFacebookNameMerge": false,
										"disableContactTimezone": false
									},
									"social": {
										"blogRss": "https://rss.xyz.com",
										"facebookUrl": "https://facebook.com/groups/XXX",
										"foursquare": "https://foursquare.com/groups/XXX",
										"googlePlaceId": "redfdfdere",
										"googlePlus": "https://groups.google.com/d/XXX",
										"instagram": "https://instagram.com/XXX",
										"linkedIn": "https://www.linkedin.com/groups/XXX/profile",
										"pinterest": "https://pinterest.com/XXX",
										"twitter": "https://twitter.com/XXX",
										"yelp": "https://yelp.com/XXX",
										"youtube": "https://youtube.com/XXX"
									},
									"state": "CA",
									"timezone": "US/Central",
									"website": "https://www.tesla.com"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/locations/:locationId",
				"tags": ["Location"]
			},
			"put": {
				"description": "<h4>Update a Location.</h4><p>Required JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>businessName</td><td>string</td><td>ACME Agency</td></tr></tbody></table><p>Allowed JSON fields in the body</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>address</td><td>string</td><td>3500 Deer Creek Road</td></tr><tr><td>city</td><td>string</td><td>Palo Alto</td></tr><tr><td>state</td><td>string</td><td>CA</td></tr><tr><td>country</td><td>string</td><td>US</td></tr><tr><td>postalCode</td><td>string</td><td>94304</td></tr><tr><td>website</td><td>string</td><td>https://www.tesla.com</td></tr><tr><td>timezone</td><td>string</td><td>US/Central</td></tr><tr><td>firstName</td><td>string</td><td>John</td></tr><tr><td>lastName</td><td>string</td><td>Deno</td></tr><tr><td>email</td><td>string</td><td>johndeo@gmail.com</td></tr><tr><td>phone</td><td>string</td><td>+1202-555-0107</td></tr><tr><td>settings</td><td>object</td><td><code>{ \"allowDuplicateContact\": false, \"allowDuplicateOpportunity\": false, \"allowFacebookNameMerge\": false, \"disableContactTimezone\": false }</code></td></tr><tr><td>twilio</td><td>object</td><td><code>{ \"sid\": \"AC_XXXXXXXXXXX\", \"authToken\": \"77_XXXXXXXXXXX\" }</code></td></tr><tr><td>mailgun</td><td>object</td><td><code>{\"mailgun\": {\"apiKey\": \"key-XXXXXXXXXXX\", \"domain\": \"replies.yourdomain.com\"}</code></td></tr></tbody></table><p>Twilio field required two field to setup</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>sid</td><td>string</td><td>AC_XXXXXXXXXXX (Twilio Account SID)</td></tr><tr><td>authToken</td><td>string</td><td>77_XXXXXXXXXXX (Twilio Auth Token)</td></tr></tbody></table><p>Mailgun field required two field to setup</p><table><thead><th>Fields</th><th>Types</th><th>Example</th></thead><tbody><tr><td>apiKey</td><td>string</td><td>key-XXXXXXXXXXX</td><td></td></tr><tr><td>domain</td><td>string</td><td>replies.yourdomain.com</td></tr></tbody></table><p>Timezone field allowed options, Can grab it from the timezone list api.</p> <br /><h5>Authorization:</h5><p>Provide your agency api key (Bearer Token). You can find it on Agency -&gt; Settings -&gt; API keys</p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Location Id",
						"example": "i2SpAtBVHSVea1sL6oah",
						"in": "path",
						"name": "locationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"address": "3500 Deer Creek Road",
									"businessName": "Tesla inc",
									"city": "Palo Alto",
									"country": "US",
									"email": "john@deo.com",
									"firstName": "John",
									"lastName": "Deo",
									"mailgun": {
										"apiKey": "key-XXXXXXXXXXX",
										"domain": "replies.yourdomain.com"
									},
									"phone": "+1202-555-0107",
									"postalCode": "94304",
									"settings": {
										"allowDuplicateContact": false,
										"allowDuplicateOpportunity": false,
										"allowFacebookNameMerge": false,
										"disableContactTimezone": false
									},
									"snapshot": {
										"id": "XXXXXXXXXXX",
										"type": "vertical"
									},
									"social": {
										"blogRss": "https://rss.xyz.com",
										"facebookUrl": "https://facebook.com/groups/XXX",
										"foursquare": "https://foursquare.com/groups/XXX",
										"googlePlaceId": "redfdfdere",
										"googlePlus": "https://groups.google.com/d/XXX",
										"instagram": "https://instagram.com/XXX",
										"linkedIn": "https://www.linkedin.com/groups/XXX/profile",
										"pinterest": "https://pinterest.com/XXX",
										"twitter": "https://twitter.com/XXX",
										"yelp": "https://yelp.com/XXX",
										"youtube": "https://youtube.com/XXX"
									},
									"state": "CA",
									"timezone": "US/Central",
									"twilio": {
										"authToken": "77_XXXXXXXXXXX",
										"sid": "AC_XXXXXXXXXXX"
									},
									"website": "https://www.tesla.com"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"address": "3500 Deer Creek Road",
									"business": {
										"address": "3500 Deer Creek Road",
										"city": "Palo Alto",
										"country": "US",
										"email": "johndeo@gmail.com",
										"name": "Tesla inc",
										"postalCode": "94304",
										"state": "CA",
										"timezone": "US/Central",
										"website": "https://www.tesla.com"
									},
									"city": "Palo Alto",
									"country": "US",
									"email": "john@deo.com",
									"firstName": "John",
									"id": "i2SpAtBVHSVea1sL6oah",
									"lastName": "Deo",
									"name": "Tesla inc",
									"phone": "+1202-555-0107",
									"postalCode": "94304",
									"settings": {
										"allowDuplicateContact": false,
										"allowDuplicateOpportunity": false,
										"allowFacebookNameMerge": false,
										"disableContactTimezone": false
									},
									"social": {
										"blogRss": "https://rss.xyz.com",
										"facebookUrl": "https://facebook.com/groups/XXX",
										"foursquare": "https://foursquare.com/groups/XXX",
										"googlePlaceId": "redfdfdere",
										"googlePlus": "https://groups.google.com/d/XXX",
										"instagram": "https://instagram.com/XXX",
										"linkedIn": "https://www.linkedin.com/groups/XXX/profile",
										"pinterest": "https://pinterest.com/XXX",
										"twitter": "https://twitter.com/XXX",
										"yelp": "https://yelp.com/XXX",
										"youtube": "https://youtube.com/XXX"
									},
									"state": "CA",
									"timezone": "US/Central",
									"website": "https://www.tesla.com"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"address": {
										"message": "The address field is mandatory.",
										"rule": "required"
									},
									"businessName": {
										"message": "The business name field is mandatory.",
										"rule": "required"
									},
									"city": {
										"message": "The city field is mandatory.",
										"rule": "required"
									},
									"country": {
										"message": "The country field is mandatory.",
										"rule": "required"
									},
									"email": {
										"message": "The email field is mandatory.",
										"rule": "required"
									},
									"firstName": {
										"message": "The first name field is mandatory.",
										"rule": "required"
									},
									"lastName": {
										"message": "The last name field is mandatory.",
										"rule": "required"
									},
									"phone": {
										"message": "The email field is mandatory.",
										"rule": "required"
									},
									"postalCode": {
										"message": "The postal code field is mandatory.",
										"rule": "required"
									},
									"state": {
										"message": "The state field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/locations/:locationId",
				"tags": ["Location"]
			}
		},
		"/v1/locations/{locationId}/load-snapshot/{snapshotId}": {
			"put": {
				"description": "<h4>Load Snapshot.</h4><h5>Fields</h5><ol><li><strong>override</strong>*: We will allow <code>true</code> or <code>false</code>. If you want override all conflict assets then pass <code>true</code>. By default it <code>false</code>. By default it <code>false</code></li></ol><h5>Authorization:</h5><p>Provide your agency api key (Bearer Token). You can find it on Agency -&gt; Settings -&gt; API keys</p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Location Id",
						"example": "i2SpAtBVHSVea1sL6oah",
						"in": "path",
						"name": "locationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Snapshot Id",
						"example": "5bFKHqudfotv3c1xFUuP",
						"in": "path",
						"name": "snapshotId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"override": false
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Copying the data, we will send a notification once it's completed."
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"locationId": {
										"message": "The location id is invalid.",
										"rule": "invalid"
									},
									"snapshotId": {
										"message": "The snapshot id is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/locations/:locationId/load-snapshot/:snapshotId",
				"tags": ["Location"]
			}
		},
		"/v1/pipelines/": {
			"get": {
				"description": "<h4>Get Pipelines.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"pipelines": [
										{
											"id": "bCkKGpDsyPP4peuKowkG",
											"name": "First Pipeline",
											"stages": [
												{
													"id": "bCkKGp8b897c8f-b859-49c1-88f2-ed590708a85csyPP4peuKowkG",
													"name": "First Stage"
												},
												{
													"id": "bCkKGp8b897c8f-b859-49c1-88f2-ed590708a85csyPP4peuKowkG",
													"name": "First Stage"
												}
											]
										},
										{
											"id": "bCkKGpDsyPP4peuKowkG",
											"name": "First Pipeline",
											"stages": [
												{
													"id": "bCkKGp8b897c8f-b859-49c1-88f2-ed590708a85csyPP4peuKowkG",
													"name": "First Stage"
												},
												{
													"id": "bCkKGp8b897c8f-b859-49c1-88f2-ed590708a85csyPP4peuKowkG",
													"name": "First Stage"
												}
											]
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/pipelines/",
				"tags": ["Pipeline"]
			}
		},
		"/v1/pipelines/{pipelineId}/opportunities": {
			"get": {
				"description": "<h4>Get opportunities.</h4><p><p>Allowed filter in the query</p><table> <thead> <tr> <th>Fields</th> <th>Types</th> <th>Example</th> <th>Allowed Options</th> </tr></thead> <tbody> <tr> <td>stageId</td><td>string</td><td>7915dedc-8f18-44d5-8bc3-77c04e994a10</td><td></td></tr><tr> <td>monetaryValue</td><td>number</td><td>220</td><td></td></tr><tr> <td>assignedTo</td><td>string</td><td>082goXVW3lIExEQPOnd3</td><td></td></tr><tr> <td>campaignId</td><td>string</td><td>Y2I9XM7aO1hncuSOlc9L</td><td></td></tr><tr> <td>startDate</td><td>number</td><td>epoch timestamp. for ex: <code>1598107050459</code></td><td></td></tr><tr> <td>endDate</td><td>number</td><td>epoch timestamp. for ex: <code>1614091050459</code></td><td></td></tr><tr> <td>query</td><td>string</td><td><code>?query=john@deo.com</code></td><td></td></tr><tr> <td>status</td><td>string</td><td>open</td><td> <ul> <li>open</li><li>won</li><li>lost</li><li>abandoned</li></ul> </td></tr></tbody> </table><br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "Start After Id",
						"example": "UIaE1WjAwWKdlyD7osQI",
						"in": "query",
						"name": "startAfterId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Start After",
						"example": "1603870249758",
						"in": "query",
						"name": "startAfter",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "Limit Per Page records count. will allow maximum up to 100 and default will be 20",
						"example": "20",
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "(Required) Pipeline Id",
						"example": "bCkKGpDsyPP4peuKowkG",
						"in": "path",
						"name": "pipelineId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"meta": {
										"currentPage": 2,
										"nextPage": 3,
										"nextPageUrl": "https://rest.gohighlevel.com/v1/pipelines/bCkKGpDsyPP4peuKowkG/opportunities?limit=1&startAfter=1603870249758&startAfterId=UIaE1WjAwWKdlyD7osQI",
										"prevPage": 1,
										"startAfter": 1603870249758,
										"startAfterId": "UIaE1WjAwWKdlyD7osQI",
										"total": 250
									},
									"opportunities": [
										{
											"assignedTo": "hxHGVRb1YJUscrCB8eXK",
											"contact": {
												"companyName": "Tesla Inc",
												"email": "john@deo.com",
												"id": "byMEV0NQinDhq8ZfiOi2",
												"name": "John Deo",
												"phone": "+1202-555-0107",
												"tags": [
													"ipsum sunt",
													"ipsum mollit deserunt id veniam"
												]
											},
											"createdAt": "2020-10-29T09:31:30.255Z",
											"id": "7XExm1wr8gFeZpl6rQny",
											"lastStatusChangeAt": "2020-10-29T09:39:35.472Z",
											"monetaryValue": 120,
											"name": "First Opp",
											"pipelineId": "bCkKGpDsyPP4peuKowkG",
											"pipelineStageId": "8b897c8f-b859-49c1-88f2-ed590708a85c",
											"source": "form",
											"status": "open",
											"updatedAt": "2020-10-29T09:44:02.263Z"
										},
										{
											"assignedTo": "hxHGVRb1YJUscrCB8eXK",
											"contact": {
												"companyName": "Tesla Inc",
												"email": "john@deo.com",
												"id": "byMEV0NQinDhq8ZfiOi2",
												"name": "John Deo",
												"phone": "+1202-555-0107",
												"tags": [
													"laborum officia consequat consectetur",
													"amet ea pariatur cupidatat"
												]
											},
											"createdAt": "2020-10-29T09:31:30.255Z",
											"id": "7XExm1wr8gFeZpl6rQny",
											"lastStatusChangeAt": "2020-10-29T09:39:35.472Z",
											"monetaryValue": 120,
											"name": "First Opp",
											"pipelineId": "bCkKGpDsyPP4peuKowkG",
											"pipelineStageId": "8b897c8f-b859-49c1-88f2-ed590708a85c",
											"source": "form",
											"status": "open",
											"updatedAt": "2020-10-29T09:44:02.263Z"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/pipelines/:pipelineId/opportunities",
				"tags": ["Opportunity"]
			}
		},
		"/v1/pipelines/{pipelineId}/opportunities/": {
			"post": {
				"description": "<h4>Create opportunity.</h4><p>Required JSON fields in the body</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th><th>Allowed Options</th></tr></thead><tbody><tr><td>title</td><td>string</td><td>First Opps</td><td></td></tr><tr><td>stageId</td><td>string</td><td>7915dedc-8f18-44d5-8bc3-77c04e994a10</td><td></td></tr><tr><td>contactId (or email or phone)</td><td>string</td><td>mTkSCb1UBjb5tk4OvB69</td><td></td></tr><tr><td>email (or contactId or phone)</td><td>string</td><td>john@deo.com</td><td></td></tr><tr><td>phone (or contactId or email)</td><td>string</td><td>+1202-555-0107</td><td></td></tr><tr><td>status</td><td>string</td><td>open</td><td><ul><li>open</li><li>won</li><li>lost</li><li>abandoned</li></ul></td></tr></tbody></table><p>Allowed JSON fields in the body</p><table><thead><tr><th>Fields</th><th>Types</th><th>Example</th></tr></thead><tbody><tr><td>monetaryValue</td><td>number</td><td>220</td></tr><tr><td>assignedTo</td><td>string</td><td>082goXVW3lIExEQPOnd3</td></tr><tr><td>name</td><td>string</td><td>John Deo</td></tr><tr><td>tags</td><td>array</td><td><code>[\"tag1\", \"tag2\"]</code></td></tr><tr><td>companyName</td><td>string</td><td>Tesla Inc</td></tr></tbody></table> <br /> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Pipeline Id",
						"example": "bCkKGpDsyPP4peuKowkG",
						"in": "path",
						"name": "pipelineId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"assignedTo": "082goXVW3lIExEQPOnd3",
									"companyName": "Tesla",
									"contactId": "mTkSCb1UBjb5tk4OvB69",
									"email": "elon@musk.com",
									"monetaryValue": 122.22,
									"name": "Elon Musk",
									"phone": "+1202-555-0107",
									"source": "public api",
									"stageId": "7915dedc-8f18-44d5-8bc3-77c04e994a10",
									"status": "open",
									"tags": ["tempor ea adipisicing ut amet", "voluptate irure"],
									"title": "First Opp"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"assignedTo": "hxHGVRb1YJUscrCB8eXK",
									"contact": {
										"companyName": "Tesla Inc",
										"email": "john@deo.com",
										"id": "byMEV0NQinDhq8ZfiOi2",
										"name": "John Deo",
										"phone": "+1202-555-0107",
										"tags": ["occaecat do Lorem", "magna ipsum in"]
									},
									"createdAt": "2020-10-29T09:31:30.255Z",
									"id": "7XExm1wr8gFeZpl6rQny",
									"lastStatusChangeAt": "2020-10-29T09:39:35.472Z",
									"monetaryValue": 120,
									"name": "First Opp",
									"pipelineId": "bCkKGpDsyPP4peuKowkG",
									"pipelineStageId": "8b897c8f-b859-49c1-88f2-ed590708a85c",
									"source": "form",
									"status": "open",
									"updatedAt": "2020-10-29T09:44:02.263Z"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"contactId or email": {
										"message": "The contactId or email field is mandatory.",
										"rule": "required"
									},
									"stageId": {
										"message": "The stage id field is mandatory.",
										"rule": "required"
									},
									"status": {
										"message": "The status field is mandatory.",
										"rule": "required"
									},
									"title": {
										"message": "The title field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/pipelines/:pipelineId/opportunities/",
				"tags": ["Opportunity"]
			}
		},
		"/v1/pipelines/{pipelineId}/opportunities/{opportunityId}": {
			"delete": {
				"description": "<h4>Delete opportunity.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Pipeline Id",
						"example": "bCkKGpDsyPP4peuKowkG",
						"in": "path",
						"name": "pipelineId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Opportunity Id",
						"example": "123akv4LFn6C9frZoy3e",
						"in": "path",
						"name": "opportunityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/pipelines/:pipelineId/opportunities/:opportunityId",
				"tags": ["Opportunity"]
			},
			"get": {
				"description": "<h4>Get opportunity by id.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Pipeline Id",
						"example": "bCkKGpDsyPP4peuKowkG",
						"in": "path",
						"name": "pipelineId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Opportunity Id",
						"example": "123akv4LFn6C9frZoy3e",
						"in": "path",
						"name": "opportunityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"assignedTo": "hxHGVRb1YJUscrCB8eXK",
									"contact": {
										"companyName": "Tesla Inc",
										"email": "john@deo.com",
										"id": "byMEV0NQinDhq8ZfiOi2",
										"name": "John Deo",
										"phone": "+1202-555-0107",
										"tags": ["occaecat do Lorem", "magna ipsum in"]
									},
									"createdAt": "2020-10-29T09:31:30.255Z",
									"id": "7XExm1wr8gFeZpl6rQny",
									"lastStatusChangeAt": "2020-10-29T09:39:35.472Z",
									"monetaryValue": 120,
									"name": "First Opp",
									"pipelineId": "bCkKGpDsyPP4peuKowkG",
									"pipelineStageId": "8b897c8f-b859-49c1-88f2-ed590708a85c",
									"source": "form",
									"status": "open",
									"updatedAt": "2020-10-29T09:44:02.263Z"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/pipelines/:pipelineId/opportunities/:opportunityId",
				"tags": ["Opportunity"]
			},
			"put": {
				"description": "<h4>Update Opportunity.</h4><p>Required JSON fields in the body</p><table> <thead> <tr> <th>Fields</th> <th>Types</th> <th>Example</th> <th>Allowed Options</th> </tr></thead> <tbody> <tr> <td>title</td><td>string</td><td>First Opps</td><td></td></tr><tr> <td>stageId</td><td>string</td><td>7915dedc-8f18-44d5-8bc3-77c04e994a10</td><td></td></tr><tr> <td>status</td><td>string</td><td>open</td><td> <ul> <li>open</li><li>won</li><li>lost</li><li>abandoned</li></ul> </td></tr></tbody></table><p>Allowed JSON fields in the body</p><table> <thead> <tr> <th>Fields</th> <th>Types</th> <th>Example</th> </tr></thead> <tbody> <tr> <td>monetaryValue</td><td>number</td><td>220</td></tr><tr> <td>assignedTo</td><td>string</td><td>082goXVW3lIExEQPOnd3</td></tr><tr> <td>contactId</td><td>string</td><td>mTkSCb1UBjb5tk4OvB69</td></tr><tr> <td>email</td><td>string</td><td>john@deo.com</td></tr><tr> <td>name</td><td>string</td><td>John Deo</td></tr><tr> <td>phone</td><td>string</td><td>+1202-555-0107</td></tr><tr> <td>tags</td><td>array</td><td><code>[\"tag1\", \"tag2\"]</code></td></tr><tr> <td>companyName</td><td>string</td><td>Tesla Inc</td></tr></tbody> </table> <br /><strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Pipeline Id",
						"example": "bCkKGpDsyPP4peuKowkG",
						"in": "path",
						"name": "pipelineId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Opportunity Id",
						"example": "123akv4LFn6C9frZoy3e",
						"in": "path",
						"name": "opportunityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"assignedTo": "082goXVW3lIExEQPOnd3",
									"companyName": "Tesla",
									"contactId": "mTkSCb1UBjb5tk4OvB69",
									"email": "elon@musk.com",
									"monetaryValue": 122.22,
									"name": "Elon Musk",
									"phone": "+1202-555-0107",
									"source": "public api",
									"stageId": "7915dedc-8f18-44d5-8bc3-77c04e994a10",
									"status": "open",
									"tags": ["voluptate do et sed", "voluptate dolore Ut"],
									"title": "First Opp"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"assignedTo": "hxHGVRb1YJUscrCB8eXK",
									"contact": {
										"companyName": "Tesla Inc",
										"email": "john@deo.com",
										"id": "byMEV0NQinDhq8ZfiOi2",
										"name": "John Deo",
										"phone": "+1202-555-0107",
										"tags": ["occaecat do Lorem", "magna ipsum in"]
									},
									"createdAt": "2020-10-29T09:31:30.255Z",
									"id": "7XExm1wr8gFeZpl6rQny",
									"lastStatusChangeAt": "2020-10-29T09:39:35.472Z",
									"monetaryValue": 120,
									"name": "First Opp",
									"pipelineId": "bCkKGpDsyPP4peuKowkG",
									"pipelineStageId": "8b897c8f-b859-49c1-88f2-ed590708a85c",
									"source": "form",
									"status": "open",
									"updatedAt": "2020-10-29T09:44:02.263Z"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"contactId or email": {
										"message": "The contactId or email field is mandatory.",
										"rule": "required"
									},
									"stageId": {
										"message": "The stage id field is mandatory.",
										"rule": "required"
									},
									"status": {
										"message": "The status field is mandatory.",
										"rule": "required"
									},
									"title": {
										"message": "The title field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/pipelines/:pipelineId/opportunities/:opportunityId",
				"tags": ["Opportunity"]
			}
		},
		"/v1/pipelines/{pipelineId}/opportunities/{opportunityId}/status": {
			"put": {
				"description": "<h4>Update opportunity status and stage.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Pipeline Id",
						"example": "bCkKGpDsyPP4peuKowkG",
						"in": "path",
						"name": "pipelineId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Opportunity Id",
						"example": "123akv4LFn6C9frZoy3e",
						"in": "path",
						"name": "opportunityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"stageId": "7915dedc-8f18-44d5-8bc3-77c04e994a10",
									"status": "open"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"stageId": {
										"message": "The stage id field is invalid.",
										"rule": "invalid"
									},
									"status": {
										"message": "The status field is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/pipelines/:pipelineId/opportunities/:opportunityId/status",
				"tags": ["Opportunity"]
			}
		},
		"/v1/saas/locations": {
			"get": {
				"description": "<h4>Get saas locations.</h4> <strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"parameters": [
					{
						"description": "Customer Id",
						"example": "cus_xxxxxxxxxx",
						"in": "query",
						"name": "customerId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Subscription Id (optional)",
						"example": "sub_xxxxxxxxxxxx",
						"in": "query",
						"name": "subscriptionId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"locationIds": ["F6V8F8Nxxxxxxxx", "F6V8F8Nxxxxxxxx"]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"customerId": {
										"message": "The customerId field is mandatory.",
										"rule": "requiredWithout"
									},
									"subscriptionId": {
										"message": "The subscriptionId field is mandatory.",
										"rule": "requiredWithout"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/saas/locations",
				"tags": ["Saas"]
			}
		},
		"/v1/saas/update-saas-subscription/{locationId}": {
			"put": {
				"description": "<h4>Update saas subscription.</h4> <strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Location Id",
						"example": "KXD1dw233GU1Zrvyp",
						"in": "path",
						"name": "locationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"customerId": "cus_KXxx1xxxx",
									"subscriptionId": "sub_1K9Rksxxxxx"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"locationIds": ["F6V8F8Nxxxxxxxx", "F6V8F8Nxxxxxxxx"]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"customerId": {
										"message": "The customerId field is mandatory.",
										"rule": "requiredWithout"
									},
									"subscriptionId": {
										"message": "The subscriptionId field is mandatory.",
										"rule": "requiredWithout"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/saas/update-saas-subscription/:locationId",
				"tags": ["Saas"]
			}
		},
		"/v1/snapshots/": {
			"get": {
				"description": "<h4>Get all snapshots.</h4> <strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"snapshots": [
										{
											"id": "1eM2UgkfaECOYyUdCo9P",
											"name": "Martial Arts Snapshot",
											"type": "vertical"
										},
										{
											"id": "1eM2UgkfaECOYyUdCo9P",
											"name": "Martial Arts Snapshot",
											"type": "vertical"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/snapshots/",
				"tags": ["Snapshot"]
			}
		},
		"/v1/surveys/": {
			"get": {
				"description": "<h4>Get Surveys.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"surveys": [
										{
											"id": "8qS1AwSo1k0536WJu9kk",
											"name": "Survey 1"
										},
										{
											"id": "8qS1AwSo1k0536WJu9kk",
											"name": "Survey 1"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/surveys/",
				"tags": ["Survey"]
			}
		},
		"/v1/surveys/submissions": {
			"get": {
				"description": "<h4>Get survey submissions.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "Page No. By default it will be 1",
						"example": "1",
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "Limit Per Page records count. will allow maximum up to 100 and default will be 20",
						"example": "20",
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "Filter submission by survey id",
						"example": "jjusM6EOngDExnbo2DbU",
						"in": "query",
						"name": "surveyId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Filter by contactId, name, email or phone no.",
						"example": "john@deo.com",
						"in": "query",
						"name": "q",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Get submission by starting of this date. By default it will be same date of last month.",
						"example": "2020-11-14",
						"in": "query",
						"name": "startAt",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Get submission by ending of this date. By default it will be current date.",
						"example": "2020-12-14",
						"in": "query",
						"name": "endAt",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"meta": {
										"currentPage": 2,
										"nextPage": 3,
										"prevPage": 1,
										"total": 250
									},
									"submissions": [
										{
											"__custom_field_id__": "20",
											"__submissions_other_field__": "john@deo.com",
											"contactId": "9NkT25Vor1v4aQatFsv2",
											"createdAt": "2020-11-01T18:02:21.000Z",
											"id": "be759b9a-c3ec-4b29-ba07-fc3c89c77673",
											"pageDetails": {
												"fbclid": "IwAR1JoTTltt3EKJE3O-MrQij_lTeA6BKGTy8M2wKepSzs4oUbTYhL2Lns18w",
												"referrer": "http://m.facebook.com",
												"source": "Social Media",
												"url": "https://www.gohighlevel.com/"
											},
											"surveyId": "jjusM6EOngDExnbo2DbU"
										},
										{
											"__custom_field_id__": "20",
											"__submissions_other_field__": "john@deo.com",
											"contactId": "9NkT25Vor1v4aQatFsv2",
											"createdAt": "2020-11-01T18:02:21.000Z",
											"id": "be759b9a-c3ec-4b29-ba07-fc3c89c77673",
											"pageDetails": {
												"fbclid": "IwAR1JoTTltt3EKJE3O-MrQij_lTeA6BKGTy8M2wKepSzs4oUbTYhL2Lns18w",
												"referrer": "http://m.facebook.com",
												"source": "Social Media",
												"url": "https://www.gohighlevel.com/"
											},
											"surveyId": "jjusM6EOngDExnbo2DbU"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/surveys/submissions",
				"tags": ["Survey"]
			}
		},
		"/v1/tags/": {
			"get": {
				"description": "<h4>Get Tags.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"tags": [
										{
											"id": "kAllGzwHkSVZC11GYKF9",
											"name": "Hello"
										},
										{
											"id": "kAllGzwHkSVZC11GYKF9",
											"name": "Hello"
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/tags/",
				"tags": ["Tag"]
			},
			"post": {
				"description": "<h4>Create Tag.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"name": "first tag"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"id": "kAllGzwHkSVZC11GYKF9",
									"name": "Hello"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/tags/",
				"tags": ["Tag"]
			}
		},
		"/v1/tags/{tagId}": {
			"delete": {
				"description": "<h4>Delete one of tag.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Custom Value Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "tagId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"customValueId": {
										"message": "The custom field id is invalid.",
										"rule": "invalid"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/tags/:tagId",
				"tags": ["Tag"]
			},
			"get": {
				"description": "<h4>Get tag by id.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"description": "(Required) Tag Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "tagId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"id": "kAllGzwHkSVZC11GYKF9",
									"name": "Hello"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/tags/:tagId",
				"tags": ["Tag"]
			},
			"put": {
				"description": "<h4>Update tag.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) Tag Id",
						"example": "ocQHyuzHvysMo5N5VsXc",
						"in": "path",
						"name": "tagId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"name": "first tag"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"id": "kAllGzwHkSVZC11GYKF9",
									"name": "Hello"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"name": {
										"message": "The name field is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/tags/:tagId",
				"tags": ["Tag"]
			}
		},
		"/v1/timezones/": {
			"get": {
				"description": "<h4>Get timezone list.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"timezones": ["UTC", "UTC"]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/timezones/",
				"tags": ["Timezone"]
			}
		},
		"/v1/users/": {
			"get": {
				"description": "<h4>Get all agency users.</h4> <strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"parameters": [
					{
						"description": "(Optional) Filter users by location.",
						"example": "i2SpAtBVHSVea1sL6oah",
						"in": "query",
						"name": "locationId",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"users": [
										{
											"email": "john@deo.com",
											"firstName": "John",
											"id": "3g3ltlwEJBoXArLowV3e",
											"lastName": "Deo",
											"permissions": {
												"adwordsReportingEnabled": false,
												"appointmentsEnabled": true,
												"assignedDataOnly": false,
												"attributionsReportingEnabled": false,
												"bulkRequestsEnabled": true,
												"campaignsEnabled": true,
												"campaignsReadOnly": false,
												"contactsEnabled": true,
												"conversationsEnabled": true,
												"dashboardStatsEnabled": true,
												"facebookAdsReportingEnabled": false,
												"funnelsEnabled": true,
												"leadValueEnabled": true,
												"marketingEnabled": true,
												"membershipEnabled": false,
												"onlineListingsEnabled": true,
												"opportunitiesEnabled": true,
												"phoneCallEnabled": true,
												"reviewsEnabled": true,
												"settingsEnabled": true,
												"tagsEnabled": true,
												"triggersEnabled": true,
												"websitesEnabled": false,
												"workflowsEnabled": true
											},
											"roles": {
												"locationIds": ["C2QujeCh8ZnC7al2InWR"],
												"role": "admin",
												"type": "agency"
											}
										},
										{
											"email": "john@deo.com",
											"firstName": "John",
											"id": "3g3ltlwEJBoXArLowV3e",
											"lastName": "Deo",
											"permissions": {
												"adwordsReportingEnabled": false,
												"appointmentsEnabled": true,
												"assignedDataOnly": false,
												"attributionsReportingEnabled": false,
												"bulkRequestsEnabled": true,
												"campaignsEnabled": true,
												"campaignsReadOnly": false,
												"contactsEnabled": true,
												"conversationsEnabled": true,
												"dashboardStatsEnabled": true,
												"facebookAdsReportingEnabled": false,
												"funnelsEnabled": true,
												"leadValueEnabled": true,
												"marketingEnabled": true,
												"membershipEnabled": false,
												"onlineListingsEnabled": true,
												"opportunitiesEnabled": true,
												"phoneCallEnabled": true,
												"reviewsEnabled": true,
												"settingsEnabled": true,
												"tagsEnabled": true,
												"triggersEnabled": true,
												"websitesEnabled": false,
												"workflowsEnabled": true
											},
											"roles": {
												"locationIds": ["C2QujeCh8ZnC7al2InWR"],
												"role": "admin",
												"type": "agency"
											}
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/users/",
				"tags": ["User"]
			},
			"post": {
				"description": "<h4>Create a User.</h4><p>Small description for the field allow options.<p><strong>type</strong> fields will allow these options:</p><ul><li>account</li><li>agency</li></ul></p><p><strong>role</strong> fields will allow these options:</p><ul><li>admin</li><li>user</li></ul></p><p><strong>locationIds</strong> fields will allow valid locations id of the agency.</p><strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"email": "john@deo.com",
									"firstName": "John",
									"lastName": "Deo",
									"locationIds": ["C2QujeCh8ZnC7al2InWR"],
									"password": "*******",
									"permissions": {
										"adwordsReportingEnabled": false,
										"appointmentsEnabled": true,
										"assignedDataOnly": false,
										"attributionsReportingEnabled": false,
										"bulkRequestsEnabled": true,
										"campaignsEnabled": true,
										"campaignsReadOnly": false,
										"contactsEnabled": true,
										"conversationsEnabled": true,
										"dashboardStatsEnabled": true,
										"facebookAdsReportingEnabled": false,
										"funnelsEnabled": true,
										"leadValueEnabled": true,
										"marketingEnabled": true,
										"membershipEnabled": false,
										"onlineListingsEnabled": true,
										"opportunitiesEnabled": true,
										"phoneCallEnabled": true,
										"reviewsEnabled": true,
										"settingsEnabled": true,
										"tagsEnabled": true,
										"triggersEnabled": true,
										"websitesEnabled": false,
										"workflowsEnabled": true
									},
									"role": "admin",
									"type": "account"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"email": "john@deo.com",
									"firstName": "John",
									"id": "3g3ltlwEJBoXArLowV3e",
									"lastName": "Deo",
									"permissions": {
										"adwordsReportingEnabled": false,
										"appointmentsEnabled": true,
										"assignedDataOnly": false,
										"attributionsReportingEnabled": false,
										"bulkRequestsEnabled": true,
										"campaignsEnabled": true,
										"campaignsReadOnly": false,
										"contactsEnabled": true,
										"conversationsEnabled": true,
										"dashboardStatsEnabled": true,
										"facebookAdsReportingEnabled": false,
										"funnelsEnabled": true,
										"leadValueEnabled": true,
										"marketingEnabled": true,
										"membershipEnabled": false,
										"onlineListingsEnabled": true,
										"opportunitiesEnabled": true,
										"phoneCallEnabled": true,
										"reviewsEnabled": true,
										"settingsEnabled": true,
										"tagsEnabled": true,
										"triggersEnabled": true,
										"websitesEnabled": false,
										"workflowsEnabled": true
									},
									"roles": {
										"locationIds": ["C2QujeCh8ZnC7al2InWR"],
										"role": "admin",
										"type": "agency"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"email": {
										"message": "The email field is mandatory.",
										"rule": "required"
									},
									"firstName": {
										"message": "The first name field is mandatory.",
										"rule": "required"
									},
									"lastName": {
										"message": "The last name field is mandatory.",
										"rule": "required"
									},
									"locationIds": {
										"message": "The location ide must be a array.",
										"rule": "required"
									},
									"permissions": {
										"message": "Ther permissions field every key must contains only true or false.",
										"rule": "required"
									},
									"role": {
										"message": "The role is mandatory.",
										"rule": "required"
									},
									"type": {
										"message": "The type is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/users/",
				"tags": ["User"]
			}
		},
		"/v1/users/location": {
			"get": {
				"description": "<h4>Get user by location.</h4>  <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"users": [
										{
											"email": "john@deo.com",
											"firstName": "John",
											"id": "3g3ltlwEJBoXArLowV3e",
											"lastName": "Deo",
											"permissions": {
												"adwordsReportingEnabled": false,
												"appointmentsEnabled": true,
												"assignedDataOnly": false,
												"attributionsReportingEnabled": false,
												"bulkRequestsEnabled": true,
												"campaignsEnabled": true,
												"campaignsReadOnly": false,
												"contactsEnabled": true,
												"conversationsEnabled": true,
												"dashboardStatsEnabled": true,
												"facebookAdsReportingEnabled": false,
												"funnelsEnabled": true,
												"leadValueEnabled": true,
												"marketingEnabled": true,
												"membershipEnabled": false,
												"onlineListingsEnabled": true,
												"opportunitiesEnabled": true,
												"phoneCallEnabled": true,
												"reviewsEnabled": true,
												"settingsEnabled": true,
												"tagsEnabled": true,
												"triggersEnabled": true,
												"websitesEnabled": false,
												"workflowsEnabled": true
											},
											"roles": {
												"locationIds": ["C2QujeCh8ZnC7al2InWR"],
												"role": "admin",
												"type": "agency"
											}
										},
										{
											"email": "john@deo.com",
											"firstName": "John",
											"id": "3g3ltlwEJBoXArLowV3e",
											"lastName": "Deo",
											"permissions": {
												"adwordsReportingEnabled": false,
												"appointmentsEnabled": true,
												"assignedDataOnly": false,
												"attributionsReportingEnabled": false,
												"bulkRequestsEnabled": true,
												"campaignsEnabled": true,
												"campaignsReadOnly": false,
												"contactsEnabled": true,
												"conversationsEnabled": true,
												"dashboardStatsEnabled": true,
												"facebookAdsReportingEnabled": false,
												"funnelsEnabled": true,
												"leadValueEnabled": true,
												"marketingEnabled": true,
												"membershipEnabled": false,
												"onlineListingsEnabled": true,
												"opportunitiesEnabled": true,
												"phoneCallEnabled": true,
												"reviewsEnabled": true,
												"settingsEnabled": true,
												"tagsEnabled": true,
												"triggersEnabled": true,
												"websitesEnabled": false,
												"workflowsEnabled": true
											},
											"roles": {
												"locationIds": ["C2QujeCh8ZnC7al2InWR"],
												"role": "admin",
												"type": "agency"
											}
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/users/location",
				"tags": ["User"]
			}
		},
		"/v1/users/lookup": {
			"get": {
				"description": "<h4>Find user by email.</h4> <strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"parameters": [
					{
						"description": "(Required) Email",
						"example": "hello@google.com",
						"in": "query",
						"name": "email",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"email": "john@deo.com",
									"firstName": "John",
									"id": "3g3ltlwEJBoXArLowV3e",
									"lastName": "Deo",
									"permissions": {
										"adwordsReportingEnabled": false,
										"appointmentsEnabled": true,
										"assignedDataOnly": false,
										"attributionsReportingEnabled": false,
										"bulkRequestsEnabled": true,
										"campaignsEnabled": true,
										"campaignsReadOnly": false,
										"contactsEnabled": true,
										"conversationsEnabled": true,
										"dashboardStatsEnabled": true,
										"facebookAdsReportingEnabled": false,
										"funnelsEnabled": true,
										"leadValueEnabled": true,
										"marketingEnabled": true,
										"membershipEnabled": false,
										"onlineListingsEnabled": true,
										"opportunitiesEnabled": true,
										"phoneCallEnabled": true,
										"reviewsEnabled": true,
										"settingsEnabled": true,
										"tagsEnabled": true,
										"triggersEnabled": true,
										"websitesEnabled": false,
										"workflowsEnabled": true
									},
									"roles": {
										"locationIds": ["C2QujeCh8ZnC7al2InWR"],
										"role": "admin",
										"type": "agency"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/users/lookup",
				"tags": ["User"]
			}
		},
		"/v1/users/{userId}": {
			"delete": {
				"description": " Delete one of user.<strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"parameters": [
					{
						"description": "(Required) User Id",
						"example": "082goXVW3lIExEQPOnd3",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": "",
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/users/:userId",
				"tags": ["User"]
			},
			"get": {
				"description": "<h4>Get agency by user id.</h4> <strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"parameters": [
					{
						"description": "(Required) User Id",
						"example": "082goXVW3lIExEQPOnd3",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"email": "john@deo.com",
									"firstName": "John",
									"id": "3g3ltlwEJBoXArLowV3e",
									"lastName": "Deo",
									"permissions": {
										"adwordsReportingEnabled": false,
										"appointmentsEnabled": true,
										"assignedDataOnly": false,
										"attributionsReportingEnabled": false,
										"bulkRequestsEnabled": true,
										"campaignsEnabled": true,
										"campaignsReadOnly": false,
										"contactsEnabled": true,
										"conversationsEnabled": true,
										"dashboardStatsEnabled": true,
										"facebookAdsReportingEnabled": false,
										"funnelsEnabled": true,
										"leadValueEnabled": true,
										"marketingEnabled": true,
										"membershipEnabled": false,
										"onlineListingsEnabled": true,
										"opportunitiesEnabled": true,
										"phoneCallEnabled": true,
										"reviewsEnabled": true,
										"settingsEnabled": true,
										"tagsEnabled": true,
										"triggersEnabled": true,
										"websitesEnabled": false,
										"workflowsEnabled": true
									},
									"roles": {
										"locationIds": ["C2QujeCh8ZnC7al2InWR"],
										"role": "admin",
										"type": "agency"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/users/:userId",
				"tags": ["User"]
			},
			"put": {
				"description": "<h4>Update a User.</h4><p>Small description for the field allow options.<p><strong>type</strong> fields will allow these options:</p><ul><li>account</li><li>agency</li></ul></p><p><strong>role</strong> fields will allow these options:</p><ul><li>admin</li><li>user</li></ul></p><p><strong>locationIds</strong> fields will allow valid locations id of the agency.</p><strong>Authorization:</strong> <p>Provide your agency api key (Bearer Token). You can find it on Agency -> Settings -> API keys</p>",
				"parameters": [
					{
						"example": "application/json",
						"in": "header",
						"name": "Content-Type",
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "(Required) User Id",
						"example": "082goXVW3lIExEQPOnd3",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Access Token",
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"email": "john@deo.com",
									"firstName": "John",
									"lastName": "Deo",
									"locationIds": ["C2QujeCh8ZnC7al2InWR"],
									"password": "*******",
									"permissions": {
										"adwordsReportingEnabled": false,
										"appointmentsEnabled": true,
										"assignedDataOnly": false,
										"attributionsReportingEnabled": false,
										"bulkRequestsEnabled": true,
										"campaignsEnabled": true,
										"campaignsReadOnly": false,
										"contactsEnabled": true,
										"conversationsEnabled": true,
										"dashboardStatsEnabled": true,
										"facebookAdsReportingEnabled": false,
										"funnelsEnabled": true,
										"leadValueEnabled": true,
										"marketingEnabled": true,
										"membershipEnabled": false,
										"onlineListingsEnabled": true,
										"opportunitiesEnabled": true,
										"phoneCallEnabled": true,
										"reviewsEnabled": true,
										"settingsEnabled": true,
										"tagsEnabled": true,
										"triggersEnabled": true,
										"websitesEnabled": false,
										"workflowsEnabled": true
									},
									"role": "admin",
									"type": "account"
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"email": "john@deo.com",
									"firstName": "John",
									"id": "3g3ltlwEJBoXArLowV3e",
									"lastName": "Deo",
									"permissions": {
										"adwordsReportingEnabled": false,
										"appointmentsEnabled": true,
										"assignedDataOnly": false,
										"attributionsReportingEnabled": false,
										"bulkRequestsEnabled": true,
										"campaignsEnabled": true,
										"campaignsReadOnly": false,
										"contactsEnabled": true,
										"conversationsEnabled": true,
										"dashboardStatsEnabled": true,
										"facebookAdsReportingEnabled": false,
										"funnelsEnabled": true,
										"leadValueEnabled": true,
										"marketingEnabled": true,
										"membershipEnabled": false,
										"onlineListingsEnabled": true,
										"opportunitiesEnabled": true,
										"phoneCallEnabled": true,
										"reviewsEnabled": true,
										"settingsEnabled": true,
										"tagsEnabled": true,
										"triggersEnabled": true,
										"websitesEnabled": false,
										"workflowsEnabled": true
									},
									"roles": {
										"locationIds": ["C2QujeCh8ZnC7al2InWR"],
										"role": "admin",
										"type": "agency"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"422": {
						"content": {
							"application/json": {
								"example": {
									"email": {
										"message": "The email field is mandatory.",
										"rule": "required"
									},
									"firstName": {
										"message": "The first name field is mandatory.",
										"rule": "required"
									},
									"lastName": {
										"message": "The last name field is mandatory.",
										"rule": "required"
									},
									"locationIds": {
										"message": "The location ide must be a array.",
										"rule": "required"
									},
									"permissions": {
										"message": "Ther permissions field every key must contains only true or false.",
										"rule": "required"
									},
									"role": {
										"message": "The role is mandatory.",
										"rule": "required"
									},
									"type": {
										"message": "The type is mandatory.",
										"rule": "required"
									}
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unprocessable Entity (WebDAV) (RFC 4918)",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/users/:userId",
				"tags": ["User"]
			}
		},
		"/v1/workflows/": {
			"get": {
				"description": "<h4>Get Workflow.</h4> <strong>Authorization:</strong> <p>Provide your location api key (Bearer Token). <a href=\"https://help.gohighlevel.com/support/solutions/articles/48000982605-company-settings\" target=\"_blank\">You can find here</a></p>",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"example": {
									"workflow": [
										{
											"createdAt": "2021-05-26T11:33:49.000Z",
											"id": "78559bb3-b920-461e-b010-7b2a2816d2a9",
											"name": "First Workflow",
											"status": "draft",
											"updatedAt": "2021-05-26T11:33:49.000Z",
											"version": 2
										},
										{
											"createdAt": "2021-05-26T11:33:49.000Z",
											"id": "78559bb3-b920-461e-b010-7b2a2816d2a9",
											"name": "First Workflow",
											"status": "draft",
											"updatedAt": "2021-05-26T11:33:49.000Z",
											"version": 2
										}
									]
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Bad Request"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Bad Request",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"example": {
									"msg": "Unauthorized"
								},
								"schema": {
									"type": "object"
								}
							}
						},
						"description": "Unauthorized",
						"headers": {
							"Content-Type": {
								"schema": {
									"example": "application/json",
									"type": "string"
								}
							}
						}
					}
				},
				"summary": "/v1/workflows/",
				"tags": ["Workflow"]
			}
		}
	},
	"security": [
		{
			"bearer": []
		}
	],
	"servers": [
		{
			"description": "v1 API base URL",
			"url": "https://rest.gohighlevel.com"
		}
	],
	"tags": [
		{
			"description": "Using our robust API you can customize and manage the appointment scheduling workflow that works for your products and services while we do all the leg work behind the scenes.",
			"name": "Calendar"
		},
		{
			"description": "Fetch calendar and team",
			"name": "Calendar > Calendar/Team"
		},
		{
			"name": "Calendar > Calendar/Service"
		},
		{
			"description": "Booking Appointment",
			"name": "Calendar > Appointment"
		},
		{
			"name": "Campaign"
		},
		{
			"description": "Contact create or update.",
			"name": "Contact"
		},
		{
			"name": "Contact > Contact Appointment"
		},
		{
			"name": "Contact > Contact Tag"
		},
		{
			"name": "Contact > Contact Campaign"
		},
		{
			"name": "Contact > Contact Workflow"
		},
		{
			"name": "Custom Field"
		},
		{
			"name": "Custom Value"
		},
		{
			"name": "Form"
		},
		{
			"name": "Location"
		},
		{
			"name": "Note"
		},
		{
			"name": "Opportunity"
		},
		{
			"name": "Pipeline"
		},
		{
			"name": "Task"
		},
		{
			"name": "Tag"
		},
		{
			"name": "Timezone"
		},
		{
			"name": "Trigger Links"
		},
		{
			"name": "User"
		},
		{
			"name": "Saas"
		},
		{
			"name": "Snapshot"
		},
		{
			"name": "Survey"
		},
		{
			"name": "Workflow"
		}
	]
}
