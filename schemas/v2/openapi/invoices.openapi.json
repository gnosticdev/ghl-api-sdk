{
  "components": {
    "schemas": {
      "AdditionalEmailsDto": {
        "properties": {
          "email": {
            "example": "alex@example.com",
            "type": "string"
          }
        },
        "required": ["email"],
        "type": "object"
      },
      "AddressDto": {
        "properties": {
          "addressLine1": {
            "description": "Address Line 1",
            "example": "9931 Beechwood",
            "type": "string"
          },
          "addressLine2": {
            "description": "Address Line 2",
            "example": "Beechwood",
            "type": "string"
          },
          "city": {
            "description": "City",
            "example": "St. Houston",
            "type": "string"
          },
          "countryCode": {
            "description": "Country Code",
            "example": "US",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal Code",
            "example": "559-6993",
            "type": "string"
          },
          "state": {
            "description": "State",
            "example": "TX",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AutoPaymentDetailsDto": {
        "properties": {
          "card": {
            "$ref": "#/components/schemas/CardDto"
          },
          "customerId": {
            "type": "string"
          },
          "enable": {
            "type": "boolean"
          },
          "paymentMethodId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "usBankAccount": {
            "$ref": "#/components/schemas/USBankAccountDto"
          }
        },
        "required": ["enable"],
        "type": "object"
      },
      "AutoPaymentInvoiceScheduleResponseDto": {
        "properties": {
          "_id": {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "compiledTermsNotes": {
            "description": "Compiled terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "invoices": {
            "description": "List of invoices",
            "items": {
              "$ref": "#/components/schemas/DefaultInvoiceResponseDto"
            },
            "type": "array"
          },
          "items": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleOptionsDto"
          },
          "status": {
            "description": "Schedule Status",
            "example": "draft",
            "type": "object"
          },
          "termsNotes": {
            "description": "Terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "altId",
          "altType",
          "name",
          "invoices",
          "businessDetails",
          "currency",
          "contactDetails",
          "items",
          "total",
          "title",
          "termsNotes",
          "compiledTermsNotes",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "AutoPaymentScheduleDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "autoPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoPaymentDetailsDto"
              }
            ],
            "description": "auto-payment configuration"
          },
          "id": {
            "type": "string"
          }
        },
        "required": ["altId", "altType", "id", "autoPayment"],
        "type": "object"
      },
      "BadRequestDTO": {
        "properties": {
          "message": {
            "example": "Bad Request",
            "type": "string"
          },
          "statusCode": {
            "example": 400,
            "type": "number"
          }
        },
        "type": "object"
      },
      "BusinessDetailsDto": {
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressDto"
              }
            ],
            "description": "Business Address",
            "example": "9931 Beechwood, TX"
          },
          "customValues": {
            "description": "Custom Values",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "logoUrl": {
            "description": "Business Logo URL",
            "example": "https://example.com/logo.png",
            "type": "string"
          },
          "name": {
            "description": "Business Name",
            "example": "ABC Corp.",
            "type": "string"
          },
          "phoneNo": {
            "description": "Business Phone Number",
            "example": "+1-214-559-6993",
            "type": "string"
          },
          "website": {
            "description": "Business Website Link",
            "example": "wwww.example.com",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CancelInvoiceScheduleDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          }
        },
        "required": ["altId", "altType"],
        "type": "object"
      },
      "CancelInvoiceScheduleResponseDto": {
        "properties": {
          "_id": {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "compiledTermsNotes": {
            "description": "Compiled terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "invoices": {
            "description": "List of invoices",
            "items": {
              "$ref": "#/components/schemas/DefaultInvoiceResponseDto"
            },
            "type": "array"
          },
          "items": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleOptionsDto"
          },
          "status": {
            "description": "Schedule Status",
            "example": "draft",
            "type": "object"
          },
          "termsNotes": {
            "description": "Terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "altId",
          "altType",
          "name",
          "invoices",
          "businessDetails",
          "currency",
          "contactDetails",
          "items",
          "total",
          "title",
          "termsNotes",
          "compiledTermsNotes",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "CardDto": {
        "properties": {
          "brand": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          }
        },
        "required": ["brand", "last4"],
        "type": "object"
      },
      "ChequeDto": {
        "properties": {
          "number": {
            "description": "check number",
            "example": "129-129-129-912",
            "type": "string"
          }
        },
        "required": ["number"],
        "type": "object"
      },
      "ContactDetailsDto": {
        "properties": {
          "additionalEmails": {
            "description": "Secondary email addresses for the contact to be saved",
            "items": {
              "$ref": "#/components/schemas/AdditionalEmailsDto"
            },
            "type": "array"
          },
          "address": {
            "$ref": "#/components/schemas/AddressDto"
          },
          "companyName": {
            "description": "Contact Company Name",
            "example": "ABC Corp.",
            "type": "string"
          },
          "customFields": {
            "description": "Custom Values",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "email": {
            "description": "Contact Email",
            "example": "alex@example.com",
            "type": "string"
          },
          "id": {
            "description": "Contact ID",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "name": {
            "description": "Contact Name",
            "example": "Alex",
            "type": "string"
          },
          "phoneNo": {
            "description": "Contact Phone Number",
            "example": "+1-214-559-6993",
            "type": "string"
          }
        },
        "required": ["id", "name"],
        "type": "object"
      },
      "CreateInvoiceDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "businessDetails": {
            "$ref": "#/components/schemas/BusinessDetailsDto"
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact information to send the invoice to"
          },
          "currency": {
            "description": "Currency code",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountDto"
          },
          "dueDate": {
            "description": "Due date in YYYY-MM-DD format",
            "example": "2023-01-14",
            "type": "string"
          },
          "invoiceNumber": {
            "description": "Invoice Number",
            "example": "1001",
            "type": "string"
          },
          "issueDate": {
            "description": "Issue date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "items": {
            "description": "An array of items for the invoice.",
            "items": {
              "$ref": "#/components/schemas/InvoiceItemDto"
            },
            "type": "array"
          },
          "liveMode": {
            "type": "boolean"
          },
          "name": {
            "description": "Invoice Name",
            "example": "New Invoice",
            "type": "string"
          },
          "sentTo": {
            "$ref": "#/components/schemas/SentToDto"
          },
          "termsNotes": {
            "description": "Terms notes, Also supports HTML markups",
            "example": "<p>This is a default terms.</p>",
            "type": "string"
          },
          "title": {
            "description": "Title for the invoice",
            "example": "INVOICE",
            "type": "string"
          }
        },
        "required": [
          "altId",
          "altType",
          "name",
          "businessDetails",
          "currency",
          "items",
          "discount",
          "contactDetails",
          "issueDate",
          "sentTo",
          "liveMode"
        ],
        "type": "object"
      },
      "CreateInvoiceResponseDto": {
        "properties": {
          "_id": {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "amountDue": {
            "description": "Total Amount Due",
            "example": 999,
            "type": "number"
          },
          "amountPaid": {
            "description": "Amount Paid",
            "example": 0,
            "type": "number"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "dueDate": {
            "description": "Due date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "invoiceItems": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "invoiceNumber": {
            "description": "Invoice Number",
            "example": "19",
            "type": "number"
          },
          "issueDate": {
            "description": "Issue date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "status": {
            "description": "Invoice Status",
            "enum": ["draft", "sent", "payment_processing", "paid", "void", "partially_paid"],
            "example": "draft",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "amountPaid",
          "altId",
          "altType",
          "name",
          "businessDetails",
          "invoiceNumber",
          "currency",
          "contactDetails",
          "issueDate",
          "dueDate",
          "invoiceItems",
          "total",
          "title",
          "amountDue",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "CreateInvoiceScheduleDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "businessDetails": {
            "$ref": "#/components/schemas/BusinessDetailsDto"
          },
          "contactDetails": {
            "$ref": "#/components/schemas/ContactDetailsDto"
          },
          "currency": {
            "type": "string"
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountDto"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoiceItemDto"
            },
            "type": "array"
          },
          "liveMode": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleOptionsDto"
          },
          "termsNotes": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "altId",
          "altType",
          "name",
          "contactDetails",
          "schedule",
          "liveMode",
          "businessDetails",
          "currency",
          "items",
          "discount"
        ],
        "type": "object"
      },
      "CreateInvoiceScheduleResponseDto": {
        "properties": {
          "_id": {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "compiledTermsNotes": {
            "description": "Compiled terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "invoices": {
            "description": "List of invoices",
            "items": {
              "$ref": "#/components/schemas/DefaultInvoiceResponseDto"
            },
            "type": "array"
          },
          "items": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleOptionsDto"
          },
          "status": {
            "description": "Schedule Status",
            "example": "draft",
            "type": "object"
          },
          "termsNotes": {
            "description": "Terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "altId",
          "altType",
          "name",
          "invoices",
          "businessDetails",
          "currency",
          "contactDetails",
          "items",
          "total",
          "title",
          "termsNotes",
          "compiledTermsNotes",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "CreateInvoiceTemplateDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "businessDetails": {
            "$ref": "#/components/schemas/BusinessDetailsDto"
          },
          "currency": {
            "type": "string"
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountDto"
          },
          "internal": {
            "type": "boolean"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoiceItemDto"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the template",
            "example": "New Template",
            "type": "string"
          },
          "termsNotes": {
            "type": "string"
          },
          "title": {
            "description": "Template title",
            "example": "New Template",
            "type": "string"
          }
        },
        "required": ["altId", "altType", "name", "businessDetails", "currency", "items"],
        "type": "object"
      },
      "CreateInvoiceTemplateResponseDto": {
        "properties": {
          "_id": {
            "description": "Template Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "items": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the Template",
            "example": "New Template",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "altId",
          "altType",
          "name",
          "businessDetails",
          "currency",
          "items",
          "total",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "CustomRRuleOptionsDto": {
        "properties": {
          "count": {
            "description": "Max number of task executions",
            "example": 10,
            "type": "number"
          },
          "dayOfMonth": {
            "description": "-1, 1, 2, 3, ..., 27, 28",
            "example": 15,
            "type": "number"
          },
          "dayOfWeek": {
            "enum": ["mo", "tu", "we", "th", "fr", "sa", "su"],
            "example": "mo",
            "type": "string"
          },
          "daysBefore": {
            "description": "Execute task number of days before",
            "example": 5,
            "type": "number"
          },
          "endDate": {
            "description": "End date in YYYY-MM-DD format",
            "example": "2029-11-01",
            "type": "string"
          },
          "endTime": {
            "description": "End time in HH:mm:ss format",
            "example": "18:45:00",
            "type": "string"
          },
          "interval": {
            "example": 2,
            "type": "number"
          },
          "intervalType": {
            "enum": ["yearly", "monthly", "weekly", "daily", "hourly", "minutely", "secondly"],
            "example": "monthly",
            "type": "string"
          },
          "monthOfYear": {
            "enum": ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"],
            "example": "jan",
            "type": "string"
          },
          "numOfWeek": {
            "description": "-1, 1, 2, 3, 4",
            "example": -1,
            "type": "number"
          },
          "startDate": {
            "description": "Start date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "startTime": {
            "description": "Start time in HH:mm:ss format",
            "example": "20:45:00",
            "type": "string"
          }
        },
        "required": ["intervalType", "interval", "startDate"],
        "type": "object"
      },
      "DefaultInvoiceResponseDto": {
        "properties": {
          "_id": {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "amountDue": {
            "description": "Total Amount Due",
            "example": 999,
            "type": "number"
          },
          "amountPaid": {
            "description": "Amount Paid",
            "example": 0,
            "type": "number"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "dueDate": {
            "description": "Due date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "invoiceItems": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "invoiceNumber": {
            "description": "Invoice Number",
            "example": "19",
            "type": "number"
          },
          "issueDate": {
            "description": "Issue date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "status": {
            "description": "Invoice Status",
            "enum": ["draft", "sent", "payment_processing", "paid", "void", "partially_paid"],
            "example": "draft",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "amountPaid",
          "altId",
          "altType",
          "name",
          "businessDetails",
          "invoiceNumber",
          "currency",
          "contactDetails",
          "issueDate",
          "dueDate",
          "invoiceItems",
          "total",
          "title",
          "amountDue",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "DeleteInvoiceResponseDto": {
        "properties": {
          "_id": {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "amountDue": {
            "description": "Total Amount Due",
            "example": 999,
            "type": "number"
          },
          "amountPaid": {
            "description": "Amount Paid",
            "example": 0,
            "type": "number"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "dueDate": {
            "description": "Due date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "invoiceItems": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "invoiceNumber": {
            "description": "Invoice Number",
            "example": "19",
            "type": "number"
          },
          "issueDate": {
            "description": "Issue date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "status": {
            "description": "Invoice Status",
            "enum": ["draft", "sent", "payment_processing", "paid", "void", "partially_paid"],
            "example": "draft",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "amountPaid",
          "altId",
          "altType",
          "name",
          "businessDetails",
          "invoiceNumber",
          "currency",
          "contactDetails",
          "issueDate",
          "dueDate",
          "invoiceItems",
          "total",
          "title",
          "amountDue",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "DeleteInvoiceScheduleResponseDto": {
        "properties": {
          "success": {
            "description": "success",
            "example": true,
            "type": "boolean"
          }
        },
        "required": ["success"],
        "type": "object"
      },
      "DeleteInvoiceTemplateResponseDto": {
        "properties": {
          "success": {
            "description": "success",
            "example": true,
            "type": "boolean"
          }
        },
        "required": ["success"],
        "type": "object"
      },
      "DiscountDto": {
        "properties": {
          "type": {
            "default": "percentage",
            "description": "Discount type",
            "enum": ["percentage", "fixed"],
            "example": "percentage",
            "type": "string"
          },
          "value": {
            "default": 0,
            "description": "Discount Value",
            "example": 10,
            "type": "number"
          }
        },
        "required": ["type"],
        "type": "object"
      },
      "GenerateInvoiceNumberResponseDto": {
        "properties": {
          "invoiceNumber": {
            "description": "Invoice Number",
            "example": "19",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GetInvoiceResponseDto": {
        "properties": {
          "_id": {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "amountDue": {
            "description": "Total Amount Due",
            "example": 999,
            "type": "number"
          },
          "amountPaid": {
            "description": "Amount Paid",
            "example": 0,
            "type": "number"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "dueDate": {
            "description": "Due date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "invoiceItems": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "invoiceNumber": {
            "description": "Invoice Number",
            "example": "19",
            "type": "number"
          },
          "issueDate": {
            "description": "Issue date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "status": {
            "description": "Invoice Status",
            "enum": ["draft", "sent", "payment_processing", "paid", "void", "partially_paid"],
            "example": "draft",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "totalSummary": {
            "$ref": "#/components/schemas/TotalSummaryDto"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "amountPaid",
          "altId",
          "altType",
          "name",
          "businessDetails",
          "invoiceNumber",
          "currency",
          "contactDetails",
          "issueDate",
          "dueDate",
          "invoiceItems",
          "total",
          "title",
          "amountDue",
          "createdAt",
          "updatedAt",
          "totalSummary"
        ],
        "type": "object"
      },
      "GetScheduleResponseDto": {
        "properties": {
          "_id": {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "compiledTermsNotes": {
            "description": "Compiled terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "invoices": {
            "description": "List of invoices",
            "items": {
              "$ref": "#/components/schemas/DefaultInvoiceResponseDto"
            },
            "type": "array"
          },
          "items": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleOptionsDto"
          },
          "status": {
            "description": "Schedule Status",
            "example": "draft",
            "type": "object"
          },
          "termsNotes": {
            "description": "Terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "altId",
          "altType",
          "name",
          "invoices",
          "businessDetails",
          "currency",
          "contactDetails",
          "items",
          "total",
          "title",
          "termsNotes",
          "compiledTermsNotes",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "GetTemplateResponseDto": {
        "properties": {
          "_id": {
            "description": "Template Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "items": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the Template",
            "example": "New Template",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "altId",
          "altType",
          "name",
          "businessDetails",
          "currency",
          "items",
          "total",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "InvoiceItemDto": {
        "properties": {
          "amount": {
            "description": "Product amount",
            "example": 999,
            "type": "number"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "description": {
            "description": "Invoice descriptions",
            "example": "ABC Corp.",
            "type": "string"
          },
          "name": {
            "description": "Invoice Item Name",
            "example": "ABC Product",
            "type": "string"
          },
          "priceId": {
            "description": "Price Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "productId": {
            "description": "Product Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "qty": {
            "description": "Product Quantity",
            "example": 1,
            "type": "number"
          },
          "taxes": {
            "description": "Tax",
            "items": {
              "$ref": "#/components/schemas/ItemTaxDto"
            },
            "type": "array"
          }
        },
        "required": ["name", "currency", "amount", "qty"],
        "type": "object"
      },
      "InvoiceSettingsSenderConfigurationDto": {
        "properties": {
          "fromEmail": {
            "description": "Email id to be used while sending out invoices",
            "example": "alex@example.com",
            "type": "string"
          },
          "fromName": {
            "description": "Sender name to be used while sending invoice",
            "example": "Alex",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ItemTaxDto": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "calculation": {
            "enum": ["exclusive"],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "taxId": {
            "type": "string"
          }
        },
        "required": ["_id", "name", "rate", "calculation"],
        "type": "object"
      },
      "ListInvoicesResponseDto": {
        "properties": {
          "invoices": {
            "items": {
              "$ref": "#/components/schemas/GetInvoiceResponseDto"
            },
            "type": "array"
          },
          "total": {
            "description": "Total number of invoices",
            "example": 100,
            "type": "number"
          }
        },
        "required": ["invoices", "total"],
        "type": "object"
      },
      "ListSchedulesResponseDto": {
        "properties": {
          "schedules": {
            "items": {
              "$ref": "#/components/schemas/GetScheduleResponseDto"
            },
            "type": "array"
          },
          "total": {
            "description": "Total number of Schedules",
            "example": 100,
            "type": "number"
          }
        },
        "required": ["schedules", "total"],
        "type": "object"
      },
      "ListTemplatesResponseDto": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/GetTemplateResponseDto"
            },
            "type": "array"
          },
          "totalCount": {
            "description": "Total number of Templates",
            "example": 100,
            "type": "number"
          }
        },
        "required": ["data", "totalCount"],
        "type": "object"
      },
      "OldCreateInvoiceDTO": {
        "properties": {},
        "type": "object"
      },
      "RecordPaymentDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "amount": {
            "description": "Amount to be paid against the invoice.",
            "example": 999,
            "type": "number"
          },
          "card": {
            "$ref": "#/components/schemas/CardDto"
          },
          "cheque": {
            "$ref": "#/components/schemas/ChequeDto"
          },
          "mode": {
            "description": "manual payment method",
            "enum": ["cash", "card", "cheque", "bank_transfer", "other"],
            "example": "card",
            "type": "string"
          },
          "notes": {
            "description": "Any note to be recorded with the transaction",
            "example": "This was a direct payment",
            "type": "string"
          }
        },
        "required": ["altId", "altType", "mode", "card", "cheque", "notes"],
        "type": "object"
      },
      "RecordPaymentResponseDto": {
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/DefaultInvoiceResponseDto"
          },
          "success": {
            "description": "status",
            "example": true,
            "type": "boolean"
          }
        },
        "required": ["success", "invoice"],
        "type": "object"
      },
      "ScheduleInvoiceScheduleDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "autoPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoPaymentDetailsDto"
              }
            ],
            "description": "auto-payment configuration"
          },
          "liveMode": {
            "type": "boolean"
          }
        },
        "required": ["altId", "altType", "liveMode"],
        "type": "object"
      },
      "ScheduleInvoiceScheduleResponseDto": {
        "properties": {
          "_id": {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "compiledTermsNotes": {
            "description": "Compiled terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "invoices": {
            "description": "List of invoices",
            "items": {
              "$ref": "#/components/schemas/DefaultInvoiceResponseDto"
            },
            "type": "array"
          },
          "items": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleOptionsDto"
          },
          "status": {
            "description": "Schedule Status",
            "example": "draft",
            "type": "object"
          },
          "termsNotes": {
            "description": "Terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "altId",
          "altType",
          "name",
          "invoices",
          "businessDetails",
          "currency",
          "contactDetails",
          "items",
          "total",
          "title",
          "termsNotes",
          "compiledTermsNotes",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "ScheduleOptionsDto": {
        "properties": {
          "executeAt": {
            "type": "string"
          },
          "rrule": {
            "$ref": "#/components/schemas/CustomRRuleOptionsDto"
          }
        },
        "type": "object"
      },
      "SendInvoiceDto": {
        "properties": {
          "action": {
            "enum": ["sms_and_email", "send_manually", "email", "sms"],
            "type": "string"
          },
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "liveMode": {
            "type": "boolean"
          },
          "sentFrom": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceSettingsSenderConfigurationDto"
              }
            ],
            "description": "sender details for invoice, valid only if invoice is not sent manually"
          },
          "userId": {
            "description": "Please ensure that the UserId corresponds to an authorized personnel, either by an employee ID or agency ID, to access this location. This account will serve as the primary channel for all future communications and updates.",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          }
        },
        "required": ["altId", "altType", "userId", "action", "liveMode"],
        "type": "object"
      },
      "SendInvoicesResponseDto": {
        "properties": {
          "emailData": {
            "type": "object"
          },
          "invoice": {
            "$ref": "#/components/schemas/DefaultInvoiceResponseDto"
          },
          "smsData": {
            "type": "object"
          }
        },
        "required": ["invoice", "smsData", "emailData"],
        "type": "object"
      },
      "SentToDto": {
        "properties": {
          "email": {
            "description": "Email Address",
            "example": ["alex@example.com"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "emailBcc": {
            "description": "bcc to be kept in any sent out emails",
            "example": ["alex@example.com"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "emailCc": {
            "description": "cc to be kept in any sent out emails",
            "example": ["alex@example.com"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "phoneNo": {
            "description": "Contact Phone Number",
            "example": ["+1-214-559-6993"],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": ["email"],
        "type": "object"
      },
      "Text2PayDto": {
        "properties": {
          "action": {
            "description": "create invoice in draft mode or send mode",
            "enum": ["draft", "send"],
            "example": "draft",
            "type": "string"
          },
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "businessDetails": {
            "$ref": "#/components/schemas/BusinessDetailsDto"
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact information to send the invoice to"
          },
          "currency": {
            "description": "Currency code",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountDto"
          },
          "dueDate": {
            "description": "Due date in YYYY-MM-DD format",
            "example": "2023-01-14",
            "type": "string"
          },
          "id": {
            "description": "id of invoice to update. If skipped, a new invoice will be created",
            "type": "string"
          },
          "includeTermsNote": {
            "description": "include terms & notes with receipts",
            "example": true,
            "type": "boolean"
          },
          "invoiceNumber": {
            "description": "Invoice Number",
            "example": "1001",
            "type": "string"
          },
          "issueDate": {
            "description": "Issue date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "items": {
            "description": "An array of items for the invoice.",
            "items": {
              "$ref": "#/components/schemas/InvoiceItemDto"
            },
            "type": "array"
          },
          "liveMode": {
            "type": "boolean"
          },
          "name": {
            "description": "Invoice Name",
            "example": "New Invoice",
            "type": "string"
          },
          "sentTo": {
            "$ref": "#/components/schemas/SentToDto"
          },
          "termsNotes": {
            "description": "Terms notes, Also supports HTML markups",
            "example": "<p>This is a default terms.</p>",
            "type": "string"
          },
          "title": {
            "description": "Title for the invoice",
            "example": "INVOICE",
            "type": "string"
          },
          "userId": {
            "description": "id of user generating invoice",
            "type": "string"
          }
        },
        "required": [
          "altId",
          "altType",
          "name",
          "businessDetails",
          "currency",
          "items",
          "contactDetails",
          "issueDate",
          "sentTo",
          "liveMode",
          "action",
          "userId"
        ],
        "type": "object"
      },
      "Text2PayInvoiceResponseDto": {
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/DefaultInvoiceResponseDto"
          },
          "invoiceUrl": {
            "description": "preview url of generated invoice",
            "type": "string"
          }
        },
        "required": ["invoice", "invoiceUrl"],
        "type": "object"
      },
      "TotalSummaryDto": {
        "properties": {
          "discount": {
            "description": "discount",
            "example": 0,
            "type": "number"
          },
          "subTotal": {
            "description": "subTotal",
            "example": 999,
            "type": "number"
          }
        },
        "required": ["subTotal", "discount"],
        "type": "object"
      },
      "USBankAccountDto": {
        "properties": {
          "bank_name": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          }
        },
        "required": ["bank_name", "last4"],
        "type": "object"
      },
      "UnauthorizedDTO": {
        "properties": {
          "error": {
            "example": "Unauthorized",
            "type": "string"
          },
          "message": {
            "example": "Invalid token: access token is invalid",
            "type": "string"
          },
          "statusCode": {
            "example": 401,
            "type": "number"
          }
        },
        "type": "object"
      },
      "UnprocessableDTO": {
        "properties": {
          "error": {
            "example": "Unprocessable Entity",
            "type": "string"
          },
          "message": {
            "example": ["Unprocessable Entity"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "statusCode": {
            "example": 422,
            "type": "number"
          }
        },
        "type": "object"
      },
      "UpdateInvoiceDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business details which need to be updated",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "contactDetails": {
            "$ref": "#/components/schemas/ContactDetailsDto"
          },
          "contactId": {
            "description": "Id of the contact which you need to send the invoice",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "example": "ABC Corp payments",
            "type": "string"
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountDto"
          },
          "dueDate": {
            "description": "Due date in YYYY-MM-DD format",
            "example": "2023-01-14",
            "type": "string"
          },
          "invoiceItems": {
            "items": {
              "$ref": "#/components/schemas/InvoiceItemDto"
            },
            "type": "array"
          },
          "invoiceNumber": {
            "description": "Invoice Number",
            "example": "1001",
            "type": "string"
          },
          "issueDate": {
            "description": "Issue date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "liveMode": {
            "description": "Payment mode",
            "type": "boolean"
          },
          "name": {
            "description": "Name to be updated",
            "example": "New Invoice",
            "type": "string"
          },
          "termsNotes": {
            "description": "Terms notes, Also supports HTML markups",
            "example": "<p>This is a default terms.</p>",
            "type": "string"
          },
          "title": {
            "description": "Title for the invoice",
            "example": "INVOICE",
            "type": "string"
          }
        },
        "required": ["altId", "altType", "name", "currency", "invoiceItems", "issueDate", "dueDate"],
        "type": "object"
      },
      "UpdateInvoiceResponseDto": {
        "properties": {
          "_id": {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "amountDue": {
            "description": "Total Amount Due",
            "example": 999,
            "type": "number"
          },
          "amountPaid": {
            "description": "Amount Paid",
            "example": 0,
            "type": "number"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "dueDate": {
            "description": "Due date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "invoiceItems": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "invoiceNumber": {
            "description": "Invoice Number",
            "example": "19",
            "type": "number"
          },
          "issueDate": {
            "description": "Issue date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "status": {
            "description": "Invoice Status",
            "enum": ["draft", "sent", "payment_processing", "paid", "void", "partially_paid"],
            "example": "draft",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "amountPaid",
          "altId",
          "altType",
          "name",
          "businessDetails",
          "invoiceNumber",
          "currency",
          "contactDetails",
          "issueDate",
          "dueDate",
          "invoiceItems",
          "total",
          "title",
          "amountDue",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "UpdateInvoiceScheduleDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "businessDetails": {
            "$ref": "#/components/schemas/BusinessDetailsDto"
          },
          "contactDetails": {
            "$ref": "#/components/schemas/ContactDetailsDto"
          },
          "currency": {
            "type": "string"
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountDto"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoiceItemDto"
            },
            "type": "array"
          },
          "liveMode": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleOptionsDto"
          },
          "termsNotes": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "altId",
          "altType",
          "name",
          "contactDetails",
          "schedule",
          "liveMode",
          "businessDetails",
          "currency",
          "items",
          "discount"
        ],
        "type": "object"
      },
      "UpdateInvoiceScheduleResponseDto": {
        "properties": {
          "_id": {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "compiledTermsNotes": {
            "description": "Compiled terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "invoices": {
            "description": "List of invoices",
            "items": {
              "$ref": "#/components/schemas/DefaultInvoiceResponseDto"
            },
            "type": "array"
          },
          "items": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleOptionsDto"
          },
          "status": {
            "description": "Schedule Status",
            "example": "draft",
            "type": "object"
          },
          "termsNotes": {
            "description": "Terms notes",
            "example": "Confidential",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "altId",
          "altType",
          "name",
          "invoices",
          "businessDetails",
          "currency",
          "contactDetails",
          "items",
          "total",
          "title",
          "termsNotes",
          "compiledTermsNotes",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "UpdateInvoiceTemplateDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          },
          "businessDetails": {
            "$ref": "#/components/schemas/BusinessDetailsDto"
          },
          "currency": {
            "type": "string"
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountDto"
          },
          "internal": {
            "type": "boolean"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoiceItemDto"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the template",
            "example": "New Template",
            "type": "string"
          },
          "termsNotes": {
            "type": "string"
          },
          "title": {
            "description": "Template title",
            "example": "New Template",
            "type": "string"
          }
        },
        "required": ["altId", "altType", "name", "businessDetails", "currency", "items"],
        "type": "object"
      },
      "UpdateInvoiceTemplateResponseDto": {
        "properties": {
          "_id": {
            "description": "Template Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "items": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the Template",
            "example": "New Template",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "altId",
          "altType",
          "name",
          "businessDetails",
          "currency",
          "items",
          "total",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      },
      "VoidInvoiceDto": {
        "properties": {
          "altId": {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "description": "Alt Type",
            "enum": ["location"],
            "example": "location",
            "type": "string"
          }
        },
        "required": ["altId", "altType"],
        "type": "object"
      },
      "VoidInvoiceResponseDto": {
        "properties": {
          "_id": {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altId": {
            "description": "Location Id or Agency Id",
            "example": "6578278e879ad2646715ba9c",
            "type": "string"
          },
          "altType": {
            "enum": ["location"],
            "type": "string"
          },
          "amountDue": {
            "description": "Total Amount Due",
            "example": 999,
            "type": "number"
          },
          "amountPaid": {
            "description": "Amount Paid",
            "example": 0,
            "type": "number"
          },
          "businessDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessDetailsDto"
              }
            ],
            "description": "Business Details",
            "example": {
              "address": {
                "addressLine1": "9931 Beechwood",
                "city": "St. Houston",
                "countryCode": "USA",
                "postalCode": "559-6993",
                "state": "TX"
              },
              "name": "Alex",
              "phoneNo": "+1-214-559-6993",
              "website": "www.example.com"
            }
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetailsDto"
              }
            ],
            "description": "Contact Details",
            "example": {
              "address": {
                "countryCode": "US"
              },
              "customFields": [],
              "email": "alex@example.com",
              "id": "c6tZZU0rJBf30ZXx9Gli",
              "name": "Alex",
              "phoneNo": "+1-214-559-6993"
            }
          },
          "createdAt": {
            "description": "created at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          },
          "currency": {
            "description": "Currency",
            "example": "USD",
            "type": "string"
          },
          "discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              }
            ],
            "description": "Discount",
            "example": {
              "type": "percentage",
              "value": 0
            }
          },
          "dueDate": {
            "description": "Due date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "invoiceItems": {
            "description": "Invoice Items",
            "example": [
              {
                "_id": "c6tZZU0rJBf30ZXx9Gli",
                "amount": 999,
                "currency": "USD",
                "name": "Macbook Pro",
                "priceId": "c6tZZU0rJBf30ZXx9Gli",
                "productId": "c6tZZU0rJBf30ZXx9Gli",
                "qty": 1,
                "taxes": []
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "invoiceNumber": {
            "description": "Invoice Number",
            "example": "19",
            "type": "number"
          },
          "issueDate": {
            "description": "Issue date in YYYY-MM-DD format",
            "example": "2023-01-01",
            "type": "string"
          },
          "liveMode": {
            "description": "Live Mode",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the invoice",
            "example": "New Invoice",
            "type": "string"
          },
          "status": {
            "description": "Invoice Status",
            "enum": ["draft", "sent", "payment_processing", "paid", "void", "partially_paid"],
            "example": "draft",
            "type": "string"
          },
          "title": {
            "description": "Title",
            "example": "INVOICE",
            "type": "string"
          },
          "total": {
            "description": "Total Amount",
            "example": 999,
            "type": "number"
          },
          "updatedAt": {
            "description": "updated at",
            "example": "2023-12-12T09:27:42.355Z",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "status",
          "liveMode",
          "amountPaid",
          "altId",
          "altType",
          "name",
          "businessDetails",
          "invoiceNumber",
          "currency",
          "contactDetails",
          "issueDate",
          "dueDate",
          "invoiceItems",
          "total",
          "title",
          "amountDue",
          "createdAt",
          "updatedAt"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "Agency-Access": {
        "bearerFormat": "JWT",
        "description": "Use the Access Token generated with user type as Agency.",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "type": "http"
      },
      "Location-Access": {
        "bearerFormat": "JWT",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "type": "http"
      },
      "bearer": {
        "bearerFormat": "JWT",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "Documentation for invoice API",
    "title": "Invoice API",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/invoices/": {
      "get": {
        "description": "API to get list of invoices",
        "operationId": "list-invoices",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "in": "query",
            "name": "altId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alt Type",
            "example": "location",
            "in": "query",
            "name": "altType",
            "required": true,
            "schema": {
              "enum": ["location"],
              "type": "string"
            }
          },
          {
            "description": "status to be filtered",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "startAt in YYYY-MM-DD format",
            "example": "2023-01-01",
            "in": "query",
            "name": "startAt",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "endAt in YYYY-MM-DD format",
            "example": "2023-01-01",
            "in": "query",
            "name": "endAt",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To search for an invoice by id / name / email / phoneNo",
            "example": "Alex",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "payment mode",
            "example": "live",
            "in": "query",
            "name": "paymentMode",
            "required": false,
            "schema": {
              "enum": ["default", "live"],
              "type": "string"
            }
          },
          {
            "description": "Contact ID for the invoice",
            "example": "AmuzcoPBpgKeccNsFlib",
            "in": "query",
            "name": "contactId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit the number of items to return",
            "example": 10,
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of items to skip",
            "example": 10,
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoicesResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "List invoices",
        "tags": ["Invoice"]
      },
      "post": {
        "description": "API to create an invoice",
        "operationId": "create-invoice",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInvoiceResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Create Invoice",
        "tags": ["Invoice"]
      }
    },
    "/invoices/generate-invoice-number": {
      "get": {
        "description": "Get the next invoice number for the given location",
        "operationId": "generate-invoice-number",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id",
            "in": "query",
            "name": "altId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "altType",
            "required": true,
            "schema": {
              "enum": ["location"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateInvoiceNumberResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Generate Invoice Number",
        "tags": ["Invoice"]
      }
    },
    "/invoices/schedule": {
      "get": {
        "description": "API to get list of schedules",
        "operationId": "list-invoice-schedules",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "in": "query",
            "name": "altId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alt Type",
            "example": "location",
            "in": "query",
            "name": "altType",
            "required": true,
            "schema": {
              "enum": ["location"],
              "type": "string"
            }
          },
          {
            "description": "status to be filtered",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "startAt in YYYY-MM-DD format",
            "example": "2023-01-01",
            "in": "query",
            "name": "startAt",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "endAt in YYYY-MM-DD format",
            "example": "2023-01-01",
            "in": "query",
            "name": "endAt",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To search for an invoice by id / name / email / phoneNo",
            "example": "Alex",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "payment mode",
            "example": "live",
            "in": "query",
            "name": "paymentMode",
            "required": false,
            "schema": {
              "enum": ["default", "live"],
              "type": "string"
            }
          },
          {
            "description": "Limit the number of items to return",
            "example": 10,
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of items to skip",
            "example": 10,
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSchedulesResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "List schedules",
        "tags": ["Schedule"]
      },
      "post": {
        "description": "API to create an invoice Schedule",
        "operationId": "create-invoice-schedule",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceScheduleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInvoiceScheduleResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Create Invoice Schedule",
        "tags": ["Schedule"]
      }
    },
    "/invoices/schedule/{scheduleId}": {
      "delete": {
        "description": "API to delete an schedule by schedule id",
        "operationId": "delete-invoice-schedule",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "in": "query",
            "name": "altId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alt Type",
            "example": "location",
            "in": "query",
            "name": "altType",
            "required": true,
            "schema": {
              "enum": ["location"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInvoiceScheduleResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Delete schedule",
        "tags": ["Schedule"]
      },
      "get": {
        "description": "API to get an schedule by schedule id",
        "operationId": "get-invoice-schedule",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "in": "query",
            "name": "altId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alt Type",
            "example": "location",
            "in": "query",
            "name": "altType",
            "required": true,
            "schema": {
              "enum": ["location"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduleResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Get an schedule",
        "tags": ["Schedule"]
      },
      "put": {
        "description": "API to update an schedule by schedule id",
        "operationId": "update-invoice-schedule",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceScheduleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInvoiceScheduleResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Update schedule",
        "tags": ["Schedule"]
      }
    },
    "/invoices/schedule/{scheduleId}/auto-payment": {
      "post": {
        "description": "API to manage auto payment for a schedule",
        "operationId": "auto-payment-invoice-schedule",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoPaymentScheduleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoPaymentInvoiceScheduleResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Manage Auto payment for an schedule invoice",
        "tags": ["Schedule"]
      }
    },
    "/invoices/schedule/{scheduleId}/cancel": {
      "post": {
        "description": "API to cancel a scheduled invoice by schedule id",
        "operationId": "cancel-invoice-schedule",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelInvoiceScheduleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelInvoiceScheduleResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Cancel an scheduled invoice",
        "tags": ["Schedule"]
      }
    },
    "/invoices/schedule/{scheduleId}/schedule": {
      "post": {
        "description": "API to schedule an schedule invoice to start sending to the customer",
        "operationId": "schedule-invoice-schedule",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Schedule Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleInvoiceScheduleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleInvoiceScheduleResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Schedule an schedule invoice",
        "tags": ["Schedule"]
      }
    },
    "/invoices/template": {
      "get": {
        "description": "API to get list of templates",
        "operationId": "list-invoice-templates",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "in": "query",
            "name": "altId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alt Type",
            "example": "location",
            "in": "query",
            "name": "altType",
            "required": true,
            "schema": {
              "enum": ["location"],
              "type": "string"
            }
          },
          {
            "description": "status to be filtered",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "startAt in YYYY-MM-DD format",
            "example": "2023-01-01",
            "in": "query",
            "name": "startAt",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "endAt in YYYY-MM-DD format",
            "example": "2023-01-01",
            "in": "query",
            "name": "endAt",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To search for an invoice by id / name / email / phoneNo",
            "example": "Alex",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "payment mode",
            "example": "live",
            "in": "query",
            "name": "paymentMode",
            "required": false,
            "schema": {
              "enum": ["default", "live"],
              "type": "string"
            }
          },
          {
            "description": "Limit the number of items to return",
            "example": 10,
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of items to skip",
            "example": 10,
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTemplatesResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "List templates",
        "tags": ["Template"]
      },
      "post": {
        "description": "API to create a template",
        "operationId": "create-invoice-template",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceTemplateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInvoiceTemplateResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Create template",
        "tags": ["Template"]
      }
    },
    "/invoices/template/{templateId}": {
      "delete": {
        "description": "API to update an template by template id",
        "operationId": "delete-invoice-template",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Template Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "in": "query",
            "name": "altId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alt Type",
            "example": "location",
            "in": "query",
            "name": "altType",
            "required": true,
            "schema": {
              "enum": ["location"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInvoiceTemplateResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Delete template",
        "tags": ["Template"]
      },
      "get": {
        "description": "API to get an template by template id",
        "operationId": "get-invoice-template",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Template Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "in": "query",
            "name": "altId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alt Type",
            "example": "location",
            "in": "query",
            "name": "altType",
            "required": true,
            "schema": {
              "enum": ["location"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Get an template",
        "tags": ["Template"]
      },
      "put": {
        "description": "API to update an template by template id",
        "operationId": "update-invoice-template",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Template Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceTemplateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInvoiceTemplateResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Update template",
        "tags": ["Template"]
      }
    },
    "/invoices/text2pay": {
      "post": {
        "description": "API to create or update a text2pay invoice",
        "operationId": "text2pay-invoice",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Text2PayDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Text2PayInvoiceResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          }
        ],
        "summary": "Create & Send",
        "tags": ["Text2Pay"]
      }
    },
    "/invoices/{invoiceId}": {
      "delete": {
        "description": "API to delete invoice by invoice id",
        "operationId": "delete-invoice",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "in": "query",
            "name": "altId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alt Type",
            "example": "location",
            "in": "query",
            "name": "altType",
            "required": true,
            "schema": {
              "enum": ["location"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInvoiceResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "DeleteDraftInvoiceBadResponse": {
                    "value": {
                      "message": "Invoice status need to be draft to delete an invoice",
                      "statusCode": 400
                    }
                  },
                  "UnableToFindInvoiceResponse": {
                    "value": {
                      "message": "Unable to find an invoice with the given invoice id",
                      "statusCode": 400
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Delete invoice",
        "tags": ["Invoice"]
      },
      "get": {
        "description": "API to get invoice by invoice id",
        "operationId": "get-invoice",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "location Id / company Id based on altType",
            "example": "6578278e879ad2646715ba9c",
            "in": "query",
            "name": "altId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alt Type",
            "example": "location",
            "in": "query",
            "name": "altType",
            "required": true,
            "schema": {
              "enum": ["location"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Get invoice",
        "tags": ["Invoice"]
      },
      "put": {
        "description": "API to update invoice by invoice id",
        "operationId": "update-invoice",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInvoiceResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Update invoice",
        "tags": ["Invoice"]
      }
    },
    "/invoices/{invoiceId}/record-payment": {
      "post": {
        "description": "API to record manual payment for an invoice by invoice id",
        "operationId": "record-invoice",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordPaymentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordPaymentResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Record a manual payment for an invoice",
        "tags": ["Invoice"]
      }
    },
    "/invoices/{invoiceId}/send": {
      "post": {
        "description": "API to send invoice by invoice id",
        "operationId": "send-invoice",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendInvoicesResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Send invoice",
        "tags": ["Invoice"]
      }
    },
    "/invoices/{invoiceId}/void": {
      "post": {
        "description": "API to delete invoice by invoice id",
        "operationId": "void-invoice",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Invoice Id",
            "example": "6578278e879ad2646715ba9c",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidInvoiceDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoidInvoiceResponseDto"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "UnableToFindInvoiceResponse": {
                    "value": {
                      "message": "Unable to find an invoice with the given invoice id",
                      "statusCode": 400
                    }
                  },
                  "VoidDraftInvoiceBadResponse": {
                    "value": {
                      "message": "Can not void draft invoice. You can delete draft invoice!",
                      "statusCode": 400
                    }
                  },
                  "VoidProviderInvoiceBadResponse": {
                    "value": {
                      "message": "To void an invoice which has received payment through the payment provider, the corresponding transaction needs to be refunded first",
                      "statusCode": 400
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          },
          {
            "Agency-Access": []
          }
        ],
        "summary": "Void invoice",
        "tags": ["Invoice"]
      }
    }
  },
  "servers": [
    {
      "url": "https://services.leadconnectorhq.com"
    }
  ],
  "tags": [
    {
      "description": "Documentation for invoice API",
      "name": "Invoice"
    }
  ]
}
