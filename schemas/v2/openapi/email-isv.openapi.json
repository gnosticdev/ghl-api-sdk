{
  "components": {
    "schemas": {
      "BadRequestDTO": {
        "properties": {
          "message": {
            "example": "Bad Request",
            "type": "string"
          },
          "statusCode": {
            "example": 400,
            "type": "number"
          }
        },
        "type": "object"
      },
      "EmailNotVerifiedResponseDto": {
        "properties": {
          "address": {
            "description": "Email address",
            "example": "abc@xyz.com",
            "type": "string"
          },
          "message": {
            "description": "Email verification failure message",
            "example": "Validation is disabled / proper config not found",
            "type": "string"
          },
          "verified": {
            "description": "Email verification not processed",
            "example": false,
            "type": "boolean"
          }
        },
        "required": ["verified"],
        "type": "object"
      },
      "EmailVerifiedResponseDto": {
        "properties": {
          "address": {
            "description": "Email address",
            "example": "abc@xyz.com",
            "type": "string"
          },
          "leadconnectorRecomendation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LeadConnectorRecomandationDto"
              }
            ],
            "description": "Lead Connector email verification recomendation",
            "example": {
              "isEmailValid": false
            }
          },
          "reason": {
            "description": "Reason for email verification failure",
            "example": ["mailbox_does_not_exist"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "result": {
            "description": "Email verification result",
            "enum": ["deliverable", "undeliverable", "do_not_send", "unknown", "catch_all"],
            "example": "undeliverable",
            "type": "string"
          },
          "risk": {
            "description": "Risk level of email sending to bounce",
            "enum": ["high", "low", "medium", "unknown"],
            "example": "low",
            "type": "string"
          }
        },
        "required": ["result", "risk", "address", "leadconnectorRecomendation"],
        "type": "object"
      },
      "LeadConnectorRecomandationDto": {
        "properties": {
          "isEmailValid": {
            "description": "Email verification status",
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UnauthorizedDTO": {
        "properties": {
          "error": {
            "example": "Unauthorized",
            "type": "string"
          },
          "message": {
            "example": "Invalid token: access token is invalid",
            "type": "string"
          },
          "statusCode": {
            "example": 401,
            "type": "number"
          }
        },
        "type": "object"
      },
      "UnprocessableDTO": {
        "properties": {
          "error": {
            "example": "Unprocessable Entity",
            "type": "string"
          },
          "message": {
            "example": ["Unprocessable Entity"],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "statusCode": {
            "example": 422,
            "type": "number"
          }
        },
        "type": "object"
      },
      "VerificationBodyDto": {
        "properties": {
          "type": {
            "description": "Email Verification type",
            "enum": ["email", "contact"],
            "example": "email",
            "type": "string"
          },
          "verify": {
            "description": "Email Verification recepient (email address / contactId)",
            "example": "abc@xyz.com",
            "type": "string"
          }
        },
        "required": ["type", "verify"],
        "type": "object"
      }
    },
    "securitySchemes": {
      "Agency-Access": {
        "bearerFormat": "JWT",
        "description": "Use the Access Token generated with user type as Agency (OR) Private Integration Token of Agency.",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "type": "http"
      },
      "Location-Access": {
        "bearerFormat": "JWT",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "type": "http"
      },
      "bearer": {
        "bearerFormat": "JWT",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "Documentation for Email ISV API",
    "title": "Email ISV API",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/email/verify": {
      "post": {
        "description": "Verify Email",
        "operationId": "verify-email",
        "parameters": [
          {
            "description": "Access Token",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe",
              "type": "string"
            }
          },
          {
            "description": "API Version",
            "in": "header",
            "name": "Version",
            "required": true,
            "schema": {
              "enum": ["2021-07-28"],
              "type": "string"
            }
          },
          {
            "description": "Location Id, The email verification charges will be deducted from this location (if rebilling is enabled) / company wallet",
            "example": "5DP4iH6HLkQsiKESj6rh",
            "in": "query",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationBodyDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailVerifiedResponseDto"
                    },
                    {
                      "$ref": "#/components/schemas/EmailNotVerifiedResponseDto"
                    }
                  ]
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "Location-Access": []
          }
        ],
        "summary": "Email Verification",
        "tags": ["Email Verification"]
      }
    }
  },
  "servers": [
    {
      "url": "https://services.leadconnectorhq.com"
    }
  ],
  "tags": [
    {
      "description": "Documentation for Email ISV API",
      "name": "email-isv"
    }
  ]
}
